{
  "type": "libraries",
  "id": "SparkFun_Qwiic_MP3_Trigger_Arduino_Library",
  "links": {
    "download": "https://api.particle.io/v1/libraries/SparkFun_Qwiic_MP3_Trigger_Arduino_Library/archive/1.0.2.tar.gz"
  },
  "attributes": {
    "name": "SparkFun_Qwiic_MP3_Trigger_Arduino_Library",
    "version": "1.0.2",
    "installs": 654,
    "author": "SparkFun Electronics <techsupport@sparkfun.com>",
    "maintainer": "SparkFun Electronics <sparkfun.com>",
    "sentence": "Library for the SparkFun Qwiic MP3 Trigger",
    "paragraph": "An Arduino Library for the Qwist MP3 Trigger. Qwiic MP3 Trigger is an easy to use MP3 player that makes loading and playing MP3s easy and fast. Play, pause, stop, volume, and EQ are all digitally controlled over I2C . Available at: https://www.sparkfun.com/products/15165",
    "category": "Device Control",
    "url": "https://github.com/sparkfun/SparkFun_Qwiic_MP3_Trigger_Arduino_Library",
    "architectures": [
      "*"
    ],
    "visibility": "public",
    "mine": false
  },
  "kind": "community library",
  "letter": "s",
  "cardUrl": "/cards/libraries/s/SparkFun_Qwiic_MP3_Trigger_Arduino_Library",
  "versions": {
    "1.0.2": {
      "builds": {
        "2.0.1": {
          "photon": {
            "Example1-PlaySong": true,
            "Example2-PlayNext": true,
            "Example3-PlayFile": true,
            "Example4-StopPause": true,
            "Example5-KitchenSink": true,
            "Example6-ChangeAddress": true,
            "Example7_AdvanceWire": false,
            "Example8_Interrupts": true
          },
          "electron": {
            "Example1-PlaySong": true,
            "Example2-PlayNext": true,
            "Example3-PlayFile": true,
            "Example4-StopPause": true,
            "Example5-KitchenSink": true,
            "Example6-ChangeAddress": true,
            "Example7_AdvanceWire": true,
            "Example8_Interrupts": true
          },
          "argon": {
            "Example1-PlaySong": true,
            "Example2-PlayNext": true,
            "Example3-PlayFile": true,
            "Example4-StopPause": true,
            "Example5-KitchenSink": true,
            "Example6-ChangeAddress": true,
            "Example7_AdvanceWire": true,
            "Example8_Interrupts": true
          },
          "boron": {
            "Example1-PlaySong": true,
            "Example2-PlayNext": true,
            "Example3-PlayFile": true,
            "Example4-StopPause": true,
            "Example5-KitchenSink": true,
            "Example6-ChangeAddress": true,
            "Example7_AdvanceWire": true,
            "Example8_Interrupts": true
          }
        },
        "1.5.2": {
          "photon": {
            "Example1-PlaySong": true,
            "Example2-PlayNext": true,
            "Example3-PlayFile": true,
            "Example4-StopPause": true,
            "Example5-KitchenSink": true,
            "Example6-ChangeAddress": true,
            "Example7_AdvanceWire": false,
            "Example8_Interrupts": true
          },
          "electron": {
            "Example1-PlaySong": true,
            "Example2-PlayNext": true,
            "Example3-PlayFile": true,
            "Example4-StopPause": true,
            "Example5-KitchenSink": true,
            "Example6-ChangeAddress": true,
            "Example7_AdvanceWire": true,
            "Example8_Interrupts": true
          },
          "argon": {
            "Example1-PlaySong": true,
            "Example2-PlayNext": true,
            "Example3-PlayFile": true,
            "Example4-StopPause": true,
            "Example5-KitchenSink": true,
            "Example6-ChangeAddress": true,
            "Example7_AdvanceWire": true,
            "Example8_Interrupts": true
          },
          "boron": {
            "Example1-PlaySong": true,
            "Example2-PlayNext": true,
            "Example3-PlayFile": true,
            "Example4-StopPause": true,
            "Example5-KitchenSink": true,
            "Example6-ChangeAddress": true,
            "Example7_AdvanceWire": true,
            "Example8_Interrupts": true
          }
        }
      }
    }
  },
  "readme": "SparkFun Qwiic MP3 Trigger Arduino Library\n===========================================================\n\n![SparkFun Qwiic MP3 Trigger](https://cdn.sparkfun.com//assets/parts/1/3/5/5/5/15165-SparkFun_Qwiic_MP3_Trigger-01.jpg)\n\n[*SparkFun Qwiic MP3 Trigger (DEV-15165)*](https://www.sparkfun.com/products/15165)\n\nThis repo is the Arduino library that controls the Qwiic MP3 Trigger.\n\nSometimes you just need an MP3 to play. Whether it's a theme song as you enter the room or a pirate cackling when a dollar [gets donated](https://github.com/nseidle/Money_Vacuum) to the kid's museum. The Qwiic MP3 Trigger takes care of all the necessary bits, all you need to do is send a simple I2C command and listen.\n\nThe Qwiic MP3 Trigger comes loaded with everything a user may need. Connecting a USB C cable enumerates the Qwiic MP3 Trigger as a jump drive. Simply plug in the Qwiic MP3 Trigger and you'll be transferring MP3s. No need for drivers and no need for WAV or Vorbis conversion! Sound output is provided via a headphone jack or poke-home connector allowing an external speaker to be connected without soldering. The speaker is boosted by a Class-D mono amplifier capable of outputting up to 1.4W. What does 1.4W mean? It's incredibly loud; great for making sure your mech effects are heard on the *con floor and wonderful for annoying your officemates. Volume is software selectable between 32 levels. Equalization can be tuned to be sure your classical hits sound different from your jazz dance routines (in all seriousness EQ selection is available but it's pretty paltry).\n\nAnd if you don't want to deal with *any* programming, there are four trigger pins. When pin 3 is pulled low the T003.mp3 file will immediately be played. This allows you to start playing sound effects with the touch of a button! By pulling multiple pins down simultaneously the four triggers can play up to ten tracks: T001 to T010.\n\nAll settings including volume, EQ, and I2C address are stored in NVM and loaded at each power up. The I2C address of the Qwiic MP3 Trigger can be modified via a solder jumper or be assigned using a software command. Multiple Qwiic MP3 Triggers can be chained together on a single bus allowing for simultaneous track mixing and triggering.\n\nWe've written an extensive Arduino library to make MP3 playing over I2C a breeze. Play track X, change volume, play next/previous, check if track is playing, stop play, change EQ, and change I2C address are all supported.\n\nThis board is one of our many [Qwiic](https://www.sparkfun.com/qwiic) compatible boards! Simply plug and go. No soldering, no figuring out which is SDA or SCL, and no voltage regulation or translation required!\n\nThe I2C address of Qwiic MP3 Trigger is software configurable which means you can hookup over 100 on a single I2C bus!\n\nRepository Contents\n-------------------\n\n* **/examples** - Example sketches for the library (.ino). Run these from the Arduino IDE. \n* **/src** - Source files for the library (.cpp, .h).\n* **keywords.txt** - Keywords from this library that will be highlighted in the Arduino IDE. \n* **library.properties** - General library properties for the Arduino package manager. \n\nDocumentation\n--------------\n* **[Qwiic MP3 Trigger Hookup Guide](https://learn.sparkfun.com/tutorials/qwiic-mp3-trigger-hookup-guide)** - Hookup guide for the Qwiic MP3 Trigger\n* **[Installing an Arduino Library Guide](https://learn.sparkfun.com/tutorials/installing-an-arduino-library)** - Basic information on how to install an Arduino library.\n* **[Product Repository](https://github.com/sparkfun/Qwiic_MP3_Trigger)** - Main repository (including hardware files)\n\nProduct Versions\n----------------\n* [DEV-15165](https://www.sparkfun.com/products/15165)- SparkFun Qwiic MP3 Trigger\n* [SPX-14808](https://www.sparkfun.com/products/14808)- SparkX MP3 Trigger (buzzing fixed!)\n* [SPX-14714](https://www.sparkfun.com/products/retired/14714) - Retired SparkX MP3 Trigger\n\nLicense Information\n-------------------\n\nThis product is _**open source**_! \n\nPlease review the LICENSE.md file for license information. \n\nIf you have any questions or concerns on licensing, please contact techsupport@sparkfun.com.\n\nPlease use, reuse, and modify these files as you see fit. Please maintain attribution to SparkFun Electronics and release any derivative under the same license.\n\nDistributed as-is; no warranty is given.\n\n- Your friends at SparkFun.\n",
  "allVersions": [
    "1.0.2"
  ]
}