{
  "type": "libraries",
  "id": "SparkFun_Ublox_Arduino_Library_183",
  "links": {
    "download": "https://api.particle.io/v1/libraries/SparkFun_Ublox_Arduino_Library_183/archive/1.8.3.tar.gz"
  },
  "attributes": {
    "name": "SparkFun_Ublox_Arduino_Library_183",
    "version": "1.8.3",
    "installs": 1612,
    "author": "SparkFun Electronics <techsupport@sparkfun.com>",
    "maintainer": "SparkFun Electronics <sparkfun.com>",
    "sentence": "Library for I2C and Serial Communication with Ublox modules",
    "paragraph": "An Arduino Library to enable both I2C and Serial communication for both NMEA reception and binary UBX sending to the module. Useful for interfacing to the <a href=\"https://www.sparkfun.com/products/15136\">SparkFun GPS-RTK2</a> ZED-F9P, <a href=\"https://www.sparkfun.com/products/14980\">SparkFun GPS-RTK</a> NEO-M8P-2, the <a href=\"https://www.sparkfun.com/products/15210\">SparkFun SAM-M8Q</a>, and the <a href=\"https://www.sparkfun.com/products/15193\">SparkFun ZEO-M8Q</a>. Library also works with other Ublox based boards. <br><br>The ZED-F9P and NEO-M8P-2 modules are top-of-the-line modules for high accuracy GNSS and GPS location solutions including RTK. The ZED-F9P is unique in that it is capable of both rover and base station operations allowing the module to become a base station and produce RTCM 3.x correction data.",
    "category": "Sensors",
    "url": "https://github.com/sparkfun/SparkFun_Ublox_Arduino_Library",
    "architectures": [
      "*"
    ],
    "visibility": "public",
    "mine": false
  },
  "kind": "community library",
  "letter": "s",
  "cardUrl": "/cards/libraries/s/SparkFun_Ublox_Arduino_Library_183",
  "versions": {
    "1.8.3": {
      "builds": {
        "2.0.1": {
          "photon": {
            "Example10_AltitudeMSL": false,
            "Example12_UseUart": false,
            "Example14_DebugOutput": false,
            "Example15_GetDateTime": false,
            "Example16_Nanosecond_MaxOutput": false,
            "Example16_PartialSecond_MaxOutput": false,
            "Example17_Geofence": false,
            "Example18_PowerSaveMode": false,
            "Example19_DynamicModel": false,
            "Example1_BasicNMEARead": false,
            "Example20_SendCustomCommand": false,
            "Example21_ModuleInfo": false,
            "Example2_NMEAParsing": false,
            "Example3_GetPosition": false,
            "Example4_FixType": false,
            "Example5_SpeedHeadingPrecision": false,
            "Example6_EnableNMEASentences": false,
            "Example7_OutputRate": false,
            "Example8_GetProtocolVersion": false,
            "Example9_ChangeI2CAddress": false
          },
          "electron": {
            "Example10_AltitudeMSL": false,
            "Example12_UseUart": false,
            "Example14_DebugOutput": false,
            "Example15_GetDateTime": false,
            "Example16_Nanosecond_MaxOutput": false,
            "Example16_PartialSecond_MaxOutput": false,
            "Example17_Geofence": false,
            "Example18_PowerSaveMode": false,
            "Example19_DynamicModel": false,
            "Example1_BasicNMEARead": false,
            "Example20_SendCustomCommand": false,
            "Example21_ModuleInfo": false,
            "Example2_NMEAParsing": false,
            "Example3_GetPosition": false,
            "Example4_FixType": false,
            "Example5_SpeedHeadingPrecision": false,
            "Example6_EnableNMEASentences": false,
            "Example7_OutputRate": false,
            "Example8_GetProtocolVersion": false,
            "Example9_ChangeI2CAddress": false
          },
          "argon": {
            "Example10_AltitudeMSL": false,
            "Example12_UseUart": false,
            "Example14_DebugOutput": false,
            "Example15_GetDateTime": false,
            "Example16_Nanosecond_MaxOutput": false,
            "Example16_PartialSecond_MaxOutput": false,
            "Example17_Geofence": false,
            "Example18_PowerSaveMode": false,
            "Example19_DynamicModel": false,
            "Example1_BasicNMEARead": false,
            "Example20_SendCustomCommand": false,
            "Example21_ModuleInfo": false,
            "Example2_NMEAParsing": false,
            "Example3_GetPosition": false,
            "Example4_FixType": false,
            "Example5_SpeedHeadingPrecision": false,
            "Example6_EnableNMEASentences": false,
            "Example7_OutputRate": false,
            "Example8_GetProtocolVersion": false,
            "Example9_ChangeI2CAddress": false
          },
          "boron": {
            "Example10_AltitudeMSL": false,
            "Example12_UseUart": false,
            "Example14_DebugOutput": false,
            "Example15_GetDateTime": false,
            "Example16_Nanosecond_MaxOutput": false,
            "Example16_PartialSecond_MaxOutput": false,
            "Example17_Geofence": false,
            "Example18_PowerSaveMode": false,
            "Example19_DynamicModel": false,
            "Example1_BasicNMEARead": false,
            "Example20_SendCustomCommand": false,
            "Example21_ModuleInfo": false,
            "Example2_NMEAParsing": false,
            "Example3_GetPosition": false,
            "Example4_FixType": false,
            "Example5_SpeedHeadingPrecision": false,
            "Example6_EnableNMEASentences": false,
            "Example7_OutputRate": false,
            "Example8_GetProtocolVersion": false,
            "Example9_ChangeI2CAddress": false
          }
        },
        "1.5.2": {
          "photon": {
            "Example10_AltitudeMSL": false,
            "Example12_UseUart": false,
            "Example14_DebugOutput": false,
            "Example15_GetDateTime": false,
            "Example16_Nanosecond_MaxOutput": false,
            "Example16_PartialSecond_MaxOutput": false,
            "Example17_Geofence": false,
            "Example18_PowerSaveMode": false,
            "Example19_DynamicModel": false,
            "Example1_BasicNMEARead": false,
            "Example20_SendCustomCommand": false,
            "Example21_ModuleInfo": false,
            "Example2_NMEAParsing": false,
            "Example3_GetPosition": false,
            "Example4_FixType": false,
            "Example5_SpeedHeadingPrecision": false,
            "Example6_EnableNMEASentences": false,
            "Example7_OutputRate": false,
            "Example8_GetProtocolVersion": false,
            "Example9_ChangeI2CAddress": false
          },
          "electron": {
            "Example10_AltitudeMSL": false,
            "Example12_UseUart": false,
            "Example14_DebugOutput": false,
            "Example15_GetDateTime": false,
            "Example16_Nanosecond_MaxOutput": false,
            "Example16_PartialSecond_MaxOutput": false,
            "Example17_Geofence": false,
            "Example18_PowerSaveMode": false,
            "Example19_DynamicModel": false,
            "Example1_BasicNMEARead": false,
            "Example20_SendCustomCommand": false,
            "Example21_ModuleInfo": false,
            "Example2_NMEAParsing": false,
            "Example3_GetPosition": false,
            "Example4_FixType": false,
            "Example5_SpeedHeadingPrecision": false,
            "Example6_EnableNMEASentences": false,
            "Example7_OutputRate": false,
            "Example8_GetProtocolVersion": false,
            "Example9_ChangeI2CAddress": false
          },
          "argon": {
            "Example10_AltitudeMSL": false,
            "Example12_UseUart": false,
            "Example14_DebugOutput": false,
            "Example15_GetDateTime": false,
            "Example16_Nanosecond_MaxOutput": false,
            "Example16_PartialSecond_MaxOutput": false,
            "Example17_Geofence": false,
            "Example18_PowerSaveMode": false,
            "Example19_DynamicModel": false,
            "Example1_BasicNMEARead": false,
            "Example20_SendCustomCommand": false,
            "Example21_ModuleInfo": false,
            "Example2_NMEAParsing": false,
            "Example3_GetPosition": false,
            "Example4_FixType": false,
            "Example5_SpeedHeadingPrecision": false,
            "Example6_EnableNMEASentences": false,
            "Example7_OutputRate": false,
            "Example8_GetProtocolVersion": false,
            "Example9_ChangeI2CAddress": false
          },
          "boron": {
            "Example10_AltitudeMSL": false,
            "Example12_UseUart": false,
            "Example14_DebugOutput": false,
            "Example15_GetDateTime": false,
            "Example16_Nanosecond_MaxOutput": false,
            "Example16_PartialSecond_MaxOutput": false,
            "Example17_Geofence": false,
            "Example18_PowerSaveMode": false,
            "Example19_DynamicModel": false,
            "Example1_BasicNMEARead": false,
            "Example20_SendCustomCommand": false,
            "Example21_ModuleInfo": false,
            "Example2_NMEAParsing": false,
            "Example3_GetPosition": false,
            "Example4_FixType": false,
            "Example5_SpeedHeadingPrecision": false,
            "Example6_EnableNMEASentences": false,
            "Example7_OutputRate": false,
            "Example8_GetProtocolVersion": false,
            "Example9_ChangeI2CAddress": false
          }
        },
        "3.3.0": {
          "photon": {
            "Example10_AltitudeMSL": false,
            "Example12_UseUart": false,
            "Example14_DebugOutput": false,
            "Example15_GetDateTime": false,
            "Example16_Nanosecond_MaxOutput": false,
            "Example16_PartialSecond_MaxOutput": false,
            "Example17_Geofence": false,
            "Example18_PowerSaveMode": false,
            "Example19_DynamicModel": false,
            "Example1_BasicNMEARead": false,
            "Example20_SendCustomCommand": false,
            "Example21_ModuleInfo": false,
            "Example2_NMEAParsing": false,
            "Example3_GetPosition": false,
            "Example4_FixType": false,
            "Example5_SpeedHeadingPrecision": false,
            "Example6_EnableNMEASentences": false,
            "Example7_OutputRate": false,
            "Example8_GetProtocolVersion": false,
            "Example9_ChangeI2CAddress": false
          },
          "electron": {
            "Example10_AltitudeMSL": false,
            "Example12_UseUart": false,
            "Example14_DebugOutput": false,
            "Example15_GetDateTime": false,
            "Example16_Nanosecond_MaxOutput": false,
            "Example16_PartialSecond_MaxOutput": false,
            "Example17_Geofence": false,
            "Example18_PowerSaveMode": false,
            "Example19_DynamicModel": false,
            "Example1_BasicNMEARead": false,
            "Example20_SendCustomCommand": false,
            "Example21_ModuleInfo": false,
            "Example2_NMEAParsing": false,
            "Example3_GetPosition": false,
            "Example4_FixType": false,
            "Example5_SpeedHeadingPrecision": false,
            "Example6_EnableNMEASentences": false,
            "Example7_OutputRate": false,
            "Example8_GetProtocolVersion": false,
            "Example9_ChangeI2CAddress": false
          },
          "argon": {
            "Example10_AltitudeMSL": false,
            "Example12_UseUart": false,
            "Example14_DebugOutput": false,
            "Example15_GetDateTime": false,
            "Example16_Nanosecond_MaxOutput": false,
            "Example16_PartialSecond_MaxOutput": false,
            "Example17_Geofence": false,
            "Example18_PowerSaveMode": false,
            "Example19_DynamicModel": false,
            "Example1_BasicNMEARead": false,
            "Example20_SendCustomCommand": false,
            "Example21_ModuleInfo": false,
            "Example2_NMEAParsing": false,
            "Example3_GetPosition": false,
            "Example4_FixType": false,
            "Example5_SpeedHeadingPrecision": false,
            "Example6_EnableNMEASentences": false,
            "Example7_OutputRate": false,
            "Example8_GetProtocolVersion": false,
            "Example9_ChangeI2CAddress": false
          },
          "boron": {
            "Example10_AltitudeMSL": false,
            "Example12_UseUart": false,
            "Example14_DebugOutput": false,
            "Example15_GetDateTime": false,
            "Example16_Nanosecond_MaxOutput": false,
            "Example16_PartialSecond_MaxOutput": false,
            "Example17_Geofence": false,
            "Example18_PowerSaveMode": false,
            "Example19_DynamicModel": false,
            "Example1_BasicNMEARead": false,
            "Example20_SendCustomCommand": false,
            "Example21_ModuleInfo": false,
            "Example2_NMEAParsing": false,
            "Example3_GetPosition": false,
            "Example4_FixType": false,
            "Example5_SpeedHeadingPrecision": false,
            "Example6_EnableNMEASentences": false,
            "Example7_OutputRate": false,
            "Example8_GetProtocolVersion": false,
            "Example9_ChangeI2CAddress": false
          }
        }
      },
      "added": "2022-06-17T10:16:53.906Z"
    }
  },
  "readme": "SparkFun Ublox Arduino Library\n===========================================================\n\n<table class=\"table table-hover table-striped table-bordered\">\n  <tr align=\"center\">\n   <td><a href=\"https://www.sparkfun.com/products/15136\"><img src=\"https://cdn.sparkfun.com//assets/parts/1/3/5/1/4/15136-SparkFun_GPS-RTK2_Board_-_ZED-F9P__Qwiic_-03.jpg\"></a></td>\n   <td><a href=\"https://www.sparkfun.com/products/15005\"><img src=\"https://cdn.sparkfun.com//assets/parts/1/3/3/2/0/15005-SparkFun_GPS-RTK__Qwiic__-_NEO-M8P-2-00.jpg\"></a></td>\n   <td><a href=\"https://www.sparkfun.com/products/15193\"><img src=\"https://cdn.sparkfun.com//assets/parts/1/3/6/1/4/15193-SparkFun_GPS_Breakout_-_U.FL__ZOE-M8__Qwiic_-01.jpg\"></a></td>\n   <td><a href=\"https://www.sparkfun.com/products/15210\"><img src=\"https://cdn.sparkfun.com//assets/parts/1/3/6/4/8/15210-SparkFun_GPS_Breakout_-_Chip_Antenna__SAM-M8Q__Qwiic_-01.jpg\"></a></td>\n    <td><a href=\"https://www.sparkfun.com/products/15733\"><img src=\"https://cdn.sparkfun.com//assets/parts/1/4/3/2/2/15733-SparkFun_GPS_Breakout_-_NEO-M9N__Chip_Antenna__Qwiic_-01.jpg\"></a></td>\n  </tr>\n  <tr align=\"center\">\n    <td><a href=\"https://www.sparkfun.com/products/15136\">SparkFun GPS-RTK2 - ZED-F9P (GPS-15136)</a></td>\n    <td><a href=\"https://www.sparkfun.com/products/15005\">SparkFun GPS-RTK - NEO-M8P-2 (GPS-15005)</a></td>\n    <td><a href=\"https://www.sparkfun.com/products/15193\">SparkFun ZOE-M8Q Breakout (GPS-15193)</a></td>\n    <td><a href=\"https://www.sparkfun.com/products/15210\">SparkFun SAM-M8Q Breakout (GPS-15210)</a></td>\n    <td><a href=\"https://www.sparkfun.com/products/15733\">SparkFun NEO-M9N Breakout (GPS-15733)</a></td>\n  </tr>\n</table>\n\nUblox makes some incredible GPS receivers covering everything from low-cost, highly configurable modules such as the SAM-M8Q all the way up to the surveyor grade ZED-F9P with precision of the diameter of a dime. This library focuses on configuration and control of Ublox devices over I2C (called DDC by Ublox) and Serial. The UBX protocol is supported over both I2C and serial, and is a much easier and lighterweight interface to a GPS module. Stop parsing NMEA data! And simply ask for the datums you need.\n\nThis library can be installed via the Arduino Library manager. Search for **SparkFun Ublox**.\n\nWant to help? Please do! We are always looking for ways to improve and build out features of this library.\n\n* We are always interested in adding SPI support with a checkUbloxSPI() function\n\nThanks to:\n\n* [trycoon](https://github.com/sparkfun/SparkFun_Ublox_Arduino_Library/pull/7) for fixing the lack of I2C buffer length defines\n* [tve](https://github.com/tve) for building out serial additions and examples\n* [Redstoned](https://github.com/Redstoned) and [davidallenmann](https://github.com/davidallenmann) for adding PVT date and time\n* [wittend](https://forum.sparkfun.com/viewtopic.php?t=49874) for pointing out the RTCM print bug\n* Big thanks to [PaulZC](https://github.com/PaulZC) for implementing the combined key ValSet method, geofence functions, better saveConfig handling, as well as a bunch of small fixes.\n* [RollieRowland](https://github.com/RollieRowland) for adding HPPOSLLH (High Precision Geodetic Position)\n* [tedder](https://github.com/tedder) for moving iTOW to PVT instead of HPPOS and comment cleanup\n* [grexjmo](https://github.com/grexjmo) for pushing for a better NMEA sentence configuration method\n* [averywallis](https://github.com/averywallis) for adding good comments to the various constants.\n\n\nNeed a library for the Ublox and Particle? Checkout the [Particle library](https://github.com/aseelye/SparkFun_Ublox_Particle_Library) fork.\n\nRepository Contents\n-------------------\n\n* **/examples** - Example sketches for the library (.ino). Run these from the Arduino IDE.\n* **/src** - Source files for the library (.cpp, .h).\n* **keywords.txt** - Keywords from this library that will be highlighted in the Arduino IDE.\n* **library.properties** - General library properties for the Arduino package manager.\n\nDocumentation\n--------------\n\n* **[Installing an Arduino Library Guide](https://learn.sparkfun.com/tutorials/installing-an-arduino-library)** - Basic information on how to install an Arduino library.\n\nPolling vs. Auto-Reporting\n--------------------------\n\nThis library supports two modes of operation for getting navigation information with the `getPVT`\nfunction (based on the `UBX_NAV_PVT` protocol packet): polling and auto-reporting.\n\nThe standard method is for the sketch to call `getPVT` (or one of the `getLatitude`, `getLongitude`,\netc. methods) when it needs a fresh navigation solution. At that point the library sends a request\nto the GPS to produce a fresh solution. The GPS then waits until the next measurement occurs (e.g.\nonce per second or as set using `setNavigationFrequency`) and then sends the fresh data.\nThe advantage of this method is that the data received is always fresh, the downside is that getPVT\ncan block until the next measurement is made by the GPS, e.g. up to 1 second if the nav frequency is\nset to one second.\n\nAn alternate method can be chosen using `setAutoPVT(true)` which instructs the GPS to send the\nnavigation information (`UBX_NAV_PVT` packet) as soon as it is produced. This is the way the older\nNMEA navigation data has been used for years. The sketch continues to call `getPVT` as before but\nunder the hood the library returns the data of the last solution received from the GPS, which may be\na bit out of date (how much depends on the `setNavigationFrequency` value).\n\nThe advantage of this method is that getPVT does not block: it returns true if new data is available\nand false otherwise. The disadvantages are that the data may be a bit old and that buffering for\nthese spontaneus `UBX_NAV_PVT` packets is required (100 bytes each). When using Serial the buffering\nis an issue because the std serial buffer is 32 or 64 bytes long depending on Arduino version. When\nusing I2C the buffering is not an issue because the GPS device has at least 1KB of internal buffering\n(possibly as large as 4KB).\n\nAs an example, assume that the GPS is set to produce 5 navigation\nsolutions per second and that the sketch only calls getPVT once a second, then the GPS will queue 5\npackets in its internal buffer (about 500 bytes) and the library will read those when getPVT is\ncalled, update its internal copy of the nav data 5 times, and return `true` to the sketch. The\nsketch calls `getLatitude`, etc. and retrieve the data of the most recent of those 5 packets.\n\nProducts That Use This Library\n---------------------------------\n* [GPS-16481](https://www.sparkfun.com/products/16481) - SparkFun GPS-RTK-SMA Breakout - ZED-F9P (Qwiic)\n* [GPS-15136](https://www.sparkfun.com/products/15136) - SparkFun GPS-RTK2 Board - ZED-F9P (Qwiic)\n* [GPS-15005](https://www.sparkfun.com/products/15005) - SparkFun GPS-RTK Board - NEO-M8P-2 (Qwiic)\n* [GPS-15210](https://www.sparkfun.com/products/15210) - SparkFun GPS Breakout - Chip Antenna, SAM-M8Q (Qwiic)\n* [GPS-15193](https://www.sparkfun.com/products/15193) - SparkFun GPS Breakout - Chip Antenna, ZOE-M8Q (Qwiic)\n* [GPS-15733](https://www.sparkfun.com/products/15733) - SparkFun GPS Breakout - NEO-M9N, Chip Antenna (Qwiic)\n* [GPS-15712](https://www.sparkfun.com/products/15712) - SparkFun GPS Breakout - NEO-M9N, U.FL (Qwiic)\n* [GPS-16329](https://www.sparkfun.com/products/16329) - SparkFun GPS Dead Reckoning Breakout - NEO-M8U (Qwiic)\n* [SPX-14980](https://www.sparkfun.com/products/14980) - SparkX GPS-RTK Black\n* [SPX-15106](https://www.sparkfun.com/products/15106) - SparkX SAM-M8Q\n\nLicense Information\n-------------------\n\nThis product is _**open source**_!\n\nVarious bits of the code have different licenses applied. Anything SparkFun wrote is beerware; if you see me (or any other SparkFun employee) at the local, and you've found our code helpful, please buy us a round!\n\nPlease use, reuse, and modify these files as you see fit. Please maintain attribution to SparkFun Electronics and release anything derivative under the same license.\n\nDistributed as-is; no warranty is given.\n\n- Your friends at SparkFun.\n",
  "allVersions": [
    "1.8.3"
  ]
}