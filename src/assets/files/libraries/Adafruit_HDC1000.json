{
  "type": "libraries",
  "id": "Adafruit_HDC1000",
  "links": {
    "download": "https://api.particle.io/v1/libraries/Adafruit_HDC1000/archive/1.0.6.tar.gz"
  },
  "attributes": {
    "name": "Adafruit_HDC1000",
    "version": "1.0.6",
    "installs": 2756,
    "license": "BSD",
    "author": "Adafruit info@adafruit.com",
    "sentence": "v2 library for HDC1000 and HDC1008 sensors, designed specifically to work with the HDC1008 breakout in the Adafruit shop, modified for Photon/Electron",
    "url": "https://github.com/CaptIgmu/Adafruit_HDC1000",
    "repository": "https://github.com/CaptIgmu/Adafruit_HDC1000.git",
    "architectures": [],
    "visibility": "public",
    "mine": false
  },
  "kind": "community library",
  "letter": "a",
  "cardUrl": "/cards/libraries/a/Adafruit_HDC1000",
  "versions": {
    "1.0.6": {
      "builds": {
        "2.0.1": {
          "photon": {
            "HDC1000test": false,
            "HDCMonitorExample": false
          },
          "electron": {
            "HDC1000test": false,
            "HDCMonitorExample": false
          },
          "argon": {
            "HDC1000test": false,
            "HDCMonitorExample": false
          },
          "boron": {
            "HDC1000test": false,
            "HDCMonitorExample": false
          }
        },
        "1.5.2": {
          "photon": {
            "HDC1000test": false,
            "HDCMonitorExample": false
          },
          "electron": {
            "HDC1000test": false,
            "HDCMonitorExample": false
          },
          "argon": {
            "HDC1000test": false,
            "HDCMonitorExample": false
          },
          "boron": {
            "HDC1000test": false,
            "HDCMonitorExample": false
          }
        }
      }
    }
  },
  "readme": "# Adafruit HDC1000 Library\n\n_This is a library for the HDC1008 Humidity + Temp sensor_\n\nDesigned specifically to work with the HDC1008 breakout in the Adafruit shop\n\nThese sensors use I2C to communicate, 2 pins are required to interface\nAdafruit invests time and resources providing this open source code,\nplease support Adafruit and open-source hardware by purchasing\nproducts from Adafruit!\n\nWritten by Limor Fried/Ladyada for Adafruit Industries.\nBSD license, all text above must be included in any redistribution\n\nModified for use as a Particle Photon/Electron public v2 library by RMB\n\n## Typical usage\n\n```\n#include \"Adafruit_HDC1000.h\"\n\n// Connect Vin to 3-5VDC\n// Connect GND to ground\n// Connect SCL to I2C clock pin (D1 on Photon/Electron)\n// Connect SDA to I2C data pin  (D0 on Photon/Electron)\n\nAdafruit_HDC1000 hdc = Adafruit_HDC1000();   // create object instance\n\nvoid setup() {\n  // prints to USB port on Photon/Electron   RMB\n  Serial.begin(9600);\n  Serial.println(\"HDC100x test\");\n\n  hdc.begin();\n  delay(15);    // let the chip initialize  \n}\n\nvoid loop() {\n  Serial.print(\"Temp: \"); Serial.print(hdc.readTemperature());\n  Serial.print(\"\\t\\tHum: \"); Serial.println(hdc.readHumidity());  \n  Serial.print(\"\\tBatteryLOW: \");\n  if (hdc.batteryLOW()) Serial.println(\"TRUE\");\n  else Serial.println(\"FALSE\");\n  delay(500);\n}\n```\n## Examples\n\n- [Read humidity/temp over USB:](examples/HDC1000test/HDC1000test.ino)\n  In this example the Particle device sends humidity/temp readings over USB\n\n- [Publish humidity/temp readings:](examples/HDCMonitorExample/HDCMonitor_Example.ino) In this example the Particle device publishes humidity/temp readings in JSON format to be used in ThingSpeak, etc.\n\n- [Web page updating:](examples/html/HDCMonitor_Example.html) In this example html/js code the published humidity/temp readings are used to update on-screen JustGages\n\n- [ThingSpeak webhook:](examples/WebHook/ParticleWebhook_ThingSpeak_CustomJSON) Paste this text into 'custom JSON' when setting up a webhook integration in Particle Console for a ThingSpeak CHANNEL to monitor published humidity/temp readings graphically!\n\n- [README.txt:](examples/MarkDown/README.txt) View the README in MarkDown notation before rendering on GitHub. Based on the spark/PowerShield README as a template.\n\n## Reference\n\n### `Adafruit_HDC1000`\n`Adafruit_HDC1000 hdc = Adafruit_HDC1000();`  \nCreates and initializes an object to interact with the HDC1008 sensor.\n\n### `begin`\n`hdc.begin();`  \nInitializes sensor. Should normally be called once in `setup()`.\n\n### `readTemperature`  \n`float tempC = hdc.readTemperature();`  \nReads the temperature in Celsius degrees.\n\n### `readHumidity`  \n`float humidity = hdc.readHumidity();`  \nReads the humidity in percent.\n\n### `batteryLOW`  \n`boolean batteryLOW = hdc.batteryLOW();`  \nAdded function to test battery voltage. True if < 2.8V.   \n\n## Resource Utilization\n\nConnect Vin to 3-5VDC  \nConnect GND to ground  \nConnect SCL to I2C clock pin (D1 on Photon/Electron)  \nConnect SDA to I2C data pin  (D0 on Photon/Electron)  \n\n## References\n\n- [Adafruit HDC1008 sensor breakout board](https://www.adafruit.com/products/2635)\n- [HDC1008 datasheet](http://www.ti.com/lit/ds/symlink/hdc1008.pdf)\n\n## License\n\nCopyright (c) 2015, AdaFruit Industries  \n All rights reserved.  \n Released under the BSD license\n",
  "allVersions": [
    "1.0.6",
    "1.0.4",
    "1.0.3",
    "1.0.2",
    "1.0.1"
  ]
}