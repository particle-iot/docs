{
  "type": "libraries",
  "id": "PatriotSwitch",
  "links": {
    "download": "https://api.particle.io/v1/libraries/PatriotSwitch/archive/5.1.0.tar.gz"
  },
  "attributes": {
    "name": "PatriotSwitch",
    "version": "5.1.0",
    "installs": 1561,
    "license": "BSD",
    "author": "Ron Lisle",
    "sentence": "Extend Patriot IoT to support switches.",
    "paragraph": "Patriot provides support for controlling IoT devices using Alexa and iOS devices. This plugin adds the ability to add switches to control those devices wirelessly also.",
    "url": "http://www.github.com/rlisle/Patriot",
    "repository": "http://www.github.com/rlisle/Patriot",
    "architectures": [
      "particle-photon"
    ],
    "visibility": "public",
    "mine": false
  },
  "kind": "community library",
  "letter": "p",
  "cardUrl": "/cards/libraries/p/PatriotSwitch",
  "versions": {
    "5.1.0": {
      "builds": {
        "2.0.1": {
          "photon": {
            "switch": false
          },
          "electron": {
            "switch": false
          },
          "argon": {
            "switch": false
          },
          "boron": {
            "switch": false
          }
        },
        "1.5.2": {
          "photon": {
            "switch": false
          },
          "electron": {
            "switch": false
          },
          "argon": {
            "switch": false
          },
          "boron": {
            "switch": false
          }
        },
        "3.3.0": {
          "photon": {
            "switch": false
          },
          "electron": {
            "switch": false
          },
          "argon": {
            "switch": false
          },
          "boron": {
            "switch": false
          }
        },
        "5.0.1": {
          "argon": {
            "switch": false
          },
          "boron": {
            "switch": false
          },
          "bsom": {
            "switch": false
          },
          "b5som": {
            "switch": false
          },
          "tracker": {
            "switch": false
          },
          "p2": {
            "switch": false
          }
        },
        "4.0.0": {
          "argon": {
            "switch": false
          },
          "boron": {
            "switch": false
          },
          "bsom": {
            "switch": false
          },
          "b5som": {
            "switch": false
          },
          "tracker": {
            "switch": false
          },
          "esomx": {
            "switch": false
          }
        }
      },
      "added": "2022-06-17T10:16:53.933Z"
    }
  },
  "readme": "# PatriotSwitch\n\nA Patriot plugin to support input switch devices.\n\nThis library is used to support input switch devices.\nAny Photon I/O pin may be used to provide on/off status.\n\n## Usage\n\nInclude this library in any Photon sketch that needs to support a Switch.\nRefer to the more complex examples in the main Patriot IoT examples\n directory.\n\nThis example creates a single switch device connected to pin D4.\nThe internal pull-up resistor is used, so the switch needs only\nground the pin to change its state. For experimenting, you can\nuse a jumper wire to ground.\n\nWhen the state of the input D4 pin changes, an event named \"switch\"\nwill be published. Other device can define a behavior that uses\nthis event.\n\nYou can use the Particle.io console to monitor these events.\n\n```\n#include <IoT.h>\n#include <PatriotSwitch.h>\n\nIoT *iot;\n\nvoid setup() {\n    iot = IoT::getInstance();\n    iot->setControllerName(\"myPhoton\");\n    iot->begin();\n\n    Switch *switch1 = new Switch(D4, \"Switch\");\n    iot->addDevice(switch1);\n}\n\nvoid loop() {\n    iot->loop();\n}\n```\n\n## Documentation\n\nRefer to the Patriot Github repository and documentation for more\ninformation.\n\n\n## Contributing\n\nHere's how you can make changes to this library and eventually contribute those changes back.\n\nTo get started, [clone the library from GitHub to your local machine](https://help.github.com/articles/cloning-a-repository/).\n\nChange the name of the library in `library.properties` to something different. You can add your name at then end.\n\nModify the sources in <src> and <examples> with the new behavior.\n\nTo compile an example, use `particle compile examples/usage` command in [Particle CLI](https://docs.particle.io/guide/tools-and-features/cli#update-your-device-remotely) or use our [Desktop IDE](https://docs.particle.io/guide/tools-and-features/dev/#compiling-code).\n\nAfter your changes are done you can upload them with `particle library upload` or `Upload` command in the IDE. This will create a private (only visible by you) library that you can use in other projects. Do `particle library add IoT_myname` to add the library to a project on your machine or add the IoT_myname library to a project on the Web IDE or Desktop IDE.\n\nAt this point, you can create a [GitHub pull request](https://help.github.com/articles/about-pull-requests/) with your changes to the original library.\n\nIf you wish to make your library public, use `particle library publish` or `Publish` command.\n\n## LICENSE\nCopyright 2017 Ron Lisle\n\nRefer to the included LICENSE file.\n",
  "allVersions": [
    "5.1.0",
    "5.0.0",
    "2.0.0",
    "1.0.1",
    "1.0.0"
  ]
}