{
  "type": "libraries",
  "id": "md5",
  "links": {
    "download": "https://api.particle.io/v1/libraries/md5/archive/0.0.1.tar.gz"
  },
  "attributes": {
    "name": "md5",
    "version": "0.0.1",
    "installs": 4155,
    "license": "See LICENSE",
    "author": "Rob Dancer <robd@pipcc.com>",
    "sentence": "md5 library",
    "url": "https://github.com/pipprojects/md5",
    "repository": "https://github.com/pipprojects/md5.git",
    "architectures": [],
    "visibility": "public",
    "mine": false
  },
  "kind": "community library",
  "letter": "m",
  "cardUrl": "/cards/libraries/m/md5",
  "versions": {
    "0.0.1": {
      "builds": {
        "2.0.1": {
          "photon": {
            "test_md5": true
          },
          "electron": {
            "test_md5": false
          },
          "argon": {
            "test_md5": true
          },
          "boron": {
            "test_md5": false
          }
        },
        "1.5.2": {
          "photon": {
            "test_md5": true
          },
          "electron": {
            "test_md5": false
          },
          "argon": {
            "test_md5": true
          },
          "boron": {
            "test_md5": false
          }
        }
      }
    }
  },
  "readme": "\nAbout\n=====\nThis is the port for the Particle Photon of the port by Solar Designer\nhttp://openwall.info/wiki/people/solar/software/public-domain-source-code/md5\n\nAccording to the website \"This code is used in Openwall's popa3d and blists, as well as in PHP 5.3.0+, ClamAV, Dovecot, Eggdrop, FreeType, masqmail, Staden Package io_lib, and more.\"\n\nThis was imported from the above site to allow HTTP Digest Authentication in conjunction with the HttpClient application.\n\n\n\nExample Usage\n=============\n\n    #include \"md5.h\"\n    #include \"application.h\"\n    \n    String md5(String line) {\n      unsigned char result[16];\n    \n      MD5_CTX hash;\n      MD5_Init(&hash);\n      MD5_Update(&hash, line, line.length());\n      MD5_Final(result, &hash);\n    \n      char buf[33];\n      for (int i=0; i<16; i++)\n        sprintf(buf+i*2, \"%02x\", result[i]);\n      buf[32]=0;\n    \n      return String(buf);\n    }\n    ...\n    line = \"grape\";\n    Res = md5(line);\n    ...\n\nThis returns the md5 hex string for \"grape\"\n\nmd5 of grape b781cbb29054db12f88f08c6e161c199\n\nSee example directory\ntest_md5.ino\n\n\nThis can be checked with python\n\n    import hashlib\n    name=\"grape\"\n    hash1 = hashlib.md5(name).hexdigest()\n    print hash1\n\n\n\n",
  "allVersions": [
    "0.0.1"
  ]
}