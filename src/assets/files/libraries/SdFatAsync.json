{
  "type": "libraries",
  "id": "SdFatAsync",
  "links": {
    "download": "https://api.particle.io/v1/libraries/SdFatAsync/archive/1.1.4.tar.gz"
  },
  "attributes": {
    "name": "SdFatAsync",
    "version": "1.1.4",
    "installs": 271,
    "license": "MIT",
    "author": "Bill Greiman <fat16lib@sbcglobal.net>",
    "maintainer": "Bryan Kadzban <github@kadzban.net>",
    "sentence": "FAT16/FAT32 file system for SD cards.",
    "paragraph": "FAT16/FAT32 file system for SD cards.",
    "category": "Data Storage",
    "url": "https://github.com/BryanKadzban/SdFat.git",
    "repository": "https://github.com/BryanKadzban/SdFat.git",
    "architectures": [
      "*"
    ],
    "visibility": "public",
    "mine": false
  },
  "kind": "community library",
  "letter": "s",
  "cardUrl": "/cards/libraries/s/SdFatAsync",
  "versions": {
    "1.1.4": {
      "builds": {
        "2.0.1": {
          "photon": {
            "AnalogBinLogger": false,
            "DirectoryFunctions": false,
            "LongFileName": false,
            "LowLatencyLogger": false,
            "LowLatencyLoggerADXL345": false,
            "LowLatencyLoggerMPU6050": false,
            "OpenNext": false,
            "PrintBenchmark": false,
            "QuickStart": false,
            "RawWrite": false,
            "ReadCsv": false,
            "ReadCsvArray": false,
            "ReadCsvStream": false,
            "ReadWrite": false,
            "STM32Test": false,
            "SdFormatter": false,
            "SdInfo": false,
            "SoftwareSpi": false,
            "StdioBench": false,
            "TeensySdioDemo": false,
            "Timestamp": false,
            "TwoCards": false,
            "VolumeFreeSpace": false,
            "bench": false,
            "dataLogger": false,
            "fgets": false,
            "formatting": false,
            "getline": false,
            "rename": false,
            "wipe": false
          },
          "electron": {
            "AnalogBinLogger": false,
            "DirectoryFunctions": false,
            "LongFileName": false,
            "LowLatencyLogger": false,
            "LowLatencyLoggerADXL345": false,
            "LowLatencyLoggerMPU6050": false,
            "OpenNext": false,
            "PrintBenchmark": false,
            "QuickStart": false,
            "RawWrite": false,
            "ReadCsv": false,
            "ReadCsvArray": false,
            "ReadCsvStream": false,
            "ReadWrite": false,
            "STM32Test": false,
            "SdFormatter": false,
            "SdInfo": false,
            "SoftwareSpi": false,
            "StdioBench": false,
            "TeensySdioDemo": false,
            "Timestamp": false,
            "TwoCards": false,
            "VolumeFreeSpace": false,
            "bench": false,
            "dataLogger": false,
            "fgets": false,
            "formatting": false,
            "getline": false,
            "rename": false,
            "wipe": false
          },
          "argon": {
            "AnalogBinLogger": false,
            "DirectoryFunctions": false,
            "LongFileName": false,
            "LowLatencyLogger": false,
            "LowLatencyLoggerADXL345": false,
            "LowLatencyLoggerMPU6050": false,
            "OpenNext": false,
            "PrintBenchmark": false,
            "QuickStart": false,
            "RawWrite": false,
            "ReadCsv": false,
            "ReadCsvArray": false,
            "ReadCsvStream": false,
            "ReadWrite": false,
            "STM32Test": false,
            "SdFormatter": false,
            "SdInfo": false,
            "SoftwareSpi": false,
            "StdioBench": false,
            "TeensySdioDemo": false,
            "Timestamp": false,
            "TwoCards": false,
            "VolumeFreeSpace": false,
            "bench": false,
            "dataLogger": false,
            "fgets": false,
            "formatting": false,
            "getline": false,
            "rename": false,
            "wipe": false
          },
          "boron": {
            "AnalogBinLogger": false,
            "DirectoryFunctions": false,
            "LongFileName": false,
            "LowLatencyLogger": false,
            "LowLatencyLoggerADXL345": false,
            "LowLatencyLoggerMPU6050": false,
            "OpenNext": false,
            "PrintBenchmark": false,
            "QuickStart": false,
            "RawWrite": false,
            "ReadCsv": false,
            "ReadCsvArray": false,
            "ReadCsvStream": false,
            "ReadWrite": false,
            "STM32Test": false,
            "SdFormatter": false,
            "SdInfo": false,
            "SoftwareSpi": false,
            "StdioBench": false,
            "TeensySdioDemo": false,
            "Timestamp": false,
            "TwoCards": false,
            "VolumeFreeSpace": false,
            "bench": false,
            "dataLogger": false,
            "fgets": false,
            "formatting": false,
            "getline": false,
            "rename": false,
            "wipe": false
          }
        },
        "1.5.2": {
          "photon": {
            "AnalogBinLogger": false,
            "DirectoryFunctions": false,
            "LongFileName": false,
            "LowLatencyLogger": false,
            "LowLatencyLoggerADXL345": false,
            "LowLatencyLoggerMPU6050": false,
            "OpenNext": false,
            "PrintBenchmark": false,
            "QuickStart": false,
            "RawWrite": false,
            "ReadCsv": false,
            "ReadCsvArray": false,
            "ReadCsvStream": false,
            "ReadWrite": false,
            "STM32Test": false,
            "SdFormatter": false,
            "SdInfo": false,
            "SoftwareSpi": false,
            "StdioBench": false,
            "TeensySdioDemo": false,
            "Timestamp": false,
            "TwoCards": false,
            "VolumeFreeSpace": false,
            "bench": false,
            "dataLogger": false,
            "fgets": false,
            "formatting": false,
            "getline": false,
            "rename": false,
            "wipe": false
          },
          "electron": {
            "AnalogBinLogger": false,
            "DirectoryFunctions": false,
            "LongFileName": false,
            "LowLatencyLogger": false,
            "LowLatencyLoggerADXL345": false,
            "LowLatencyLoggerMPU6050": false,
            "OpenNext": false,
            "PrintBenchmark": false,
            "QuickStart": false,
            "RawWrite": false,
            "ReadCsv": false,
            "ReadCsvArray": false,
            "ReadCsvStream": false,
            "ReadWrite": false,
            "STM32Test": false,
            "SdFormatter": false,
            "SdInfo": false,
            "SoftwareSpi": false,
            "StdioBench": false,
            "TeensySdioDemo": false,
            "Timestamp": false,
            "TwoCards": false,
            "VolumeFreeSpace": false,
            "bench": false,
            "dataLogger": false,
            "fgets": false,
            "formatting": false,
            "getline": false,
            "rename": false,
            "wipe": false
          },
          "argon": {
            "AnalogBinLogger": false,
            "DirectoryFunctions": false,
            "LongFileName": false,
            "LowLatencyLogger": false,
            "LowLatencyLoggerADXL345": false,
            "LowLatencyLoggerMPU6050": false,
            "OpenNext": false,
            "PrintBenchmark": false,
            "QuickStart": false,
            "RawWrite": false,
            "ReadCsv": false,
            "ReadCsvArray": false,
            "ReadCsvStream": false,
            "ReadWrite": false,
            "STM32Test": false,
            "SdFormatter": false,
            "SdInfo": false,
            "SoftwareSpi": false,
            "StdioBench": false,
            "TeensySdioDemo": false,
            "Timestamp": false,
            "TwoCards": false,
            "VolumeFreeSpace": false,
            "bench": false,
            "dataLogger": false,
            "fgets": false,
            "formatting": false,
            "getline": false,
            "rename": false,
            "wipe": false
          },
          "boron": {
            "AnalogBinLogger": false,
            "DirectoryFunctions": false,
            "LongFileName": false,
            "LowLatencyLogger": false,
            "LowLatencyLoggerADXL345": false,
            "LowLatencyLoggerMPU6050": false,
            "OpenNext": false,
            "PrintBenchmark": false,
            "QuickStart": false,
            "RawWrite": false,
            "ReadCsv": false,
            "ReadCsvArray": false,
            "ReadCsvStream": false,
            "ReadWrite": false,
            "STM32Test": false,
            "SdFormatter": false,
            "SdInfo": false,
            "SoftwareSpi": false,
            "StdioBench": false,
            "TeensySdioDemo": false,
            "Timestamp": false,
            "TwoCards": false,
            "VolumeFreeSpace": false,
            "bench": false,
            "dataLogger": false,
            "fgets": false,
            "formatting": false,
            "getline": false,
            "rename": false,
            "wipe": false
          }
        }
      }
    }
  },
  "readme": "The Arduino SdFatAsync library provides read/write access to FAT16/FAT32\nfile systems on SD/SDHC flash cards, with async read capability.\n\nSdFat requires Arduino 1.6x or greater.\n\nKey changes:\n\nFatFile::read returns a future, which can be polled if the SPI/SD/SDHC\ntransfer happens in the background.\n\nSupport for multiple SPI ports now uses a pointer to a SPIClass object.\n\nSee the STM32Test example.\n```\nexplicit SdFat(SPIClass* spiPort);\n\\\\ or\nexplicit SdFatEX(SPIClass* spiPort);\n```\n\nOpen flags now follow POSIX conventions.  O_RDONLY is the same as O_READ and O_WRONLY is the\nsame as O_WRITE. One and only one of of the mode flags, O_RDONLY, O_RDWR, or\nO_WRONLY is required.\n \nOpen flags for Particle Gen3 and ARM boards are now defined by fcntl.h.\nSee SdFatConfig.h for options.\n\nSupport for particle Gen3 devices.\n\nNew cluster allocation algorithm.\n\nPlease read changes.txt and the html documentation in the extras folder for more information.\n\nPlease report problems as issues.\n\nA number of configuration options can be set by editing SdFatConfig.h\ndefine macros.  See the html documentation for details\n\nPlease read the html documentation for this library.  Start with\nhtml/index.html and read the Main Page.  Next go to the Classes tab and\nread the documentation for the classes SdFat, SdFatEX, SdBaseFile,\nSdFile, File, StdioStream, ifstream, ofstream, and others.\n \nPlease continue by reading the html documentation in SdFat/extras/html\n\nUpdated 14 September 2020\n",
  "allVersions": [
    "1.1.4"
  ]
}