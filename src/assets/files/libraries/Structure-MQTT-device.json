{
  "type": "libraries",
  "id": "Structure-MQTT-device",
  "links": {
    "download": "https://api.particle.io/v1/libraries/Structure-MQTT-device/archive/0.0.2.tar.gz"
  },
  "attributes": {
    "name": "Structure-MQTT-device",
    "version": "0.0.2",
    "installs": 358,
    "license": "MIT",
    "author": "Charif Mahmoudi <charif.mahmoudi.us@gmail.com>",
    "sentence": "Enabling an MQTT comunicating <Device> object dedicated to the integration to Structure platform broker - http://app.getstructure.io/",
    "url": "https://github.com/charifmahmoudi/getstructure-particle",
    "repository": "https://github.com/charifmahmoudi/getstructure-particle.git",
    "architectures": [],
    "visibility": "public",
    "mine": false
  },
  "kind": "community library",
  "letter": "s",
  "cardUrl": "/cards/libraries/s/Structure-MQTT-device",
  "versions": {
    "0.0.2": {
      "builds": {
        "2.0.1": {
          "photon": {
            "led-temp-example": true
          },
          "electron": {
            "led-temp-example": true
          },
          "argon": {
            "led-temp-example": true
          },
          "boron": {
            "led-temp-example": true
          }
        },
        "1.5.2": {
          "photon": {
            "led-temp-example": true
          },
          "electron": {
            "led-temp-example": true
          },
          "argon": {
            "led-temp-example": true
          },
          "boron": {
            "led-temp-example": true
          }
        }
      }
    }
  },
  "readme": "# getstructure-particle\r\nA [Particle Builder](https://build.particle.io/build)  library for integration with [Losant](https://www.losant.com/)\r\n\r\n## About\r\n\r\nThis library serves as a wrapper for the [MQTT library](https://github.com/hirotakaster/MQTT) for the integration with [Losant](https://www.losant.com/) Broker.\r\nIt offers simplified methodes and an Device object to comunicate with [Losant](https://www.losant.com/)\r\n\r\n## Getting started\r\nA [getting started](https://www.hackster.io/charifmahmoudi/ez-device-lib-to-connect-particle-board-to-structure-0e624d) tutorial is availible at [Hackster.io](https://www.hackster.io/)\r\n\r\n[https://www.hackster.io/charifmahmoudi/ez-device-lib-to-connect-particle-board-to-structure-0e624d](https://www.hackster.io/charifmahmoudi/ez-device-lib-to-connect-particle-board-to-structure-0e624d)\r\n\r\nThis  [getting started](https://www.hackster.io/charifmahmoudi/ez-device-lib-to-connect-particle-board-to-structure-0e624d) tutorial describes all the steps needed to integrates the library in your project.\r\n\r\n## Dependencies\r\n\r\nThis library depends on the [SPARKJSON](https://github.com/menan/SparkJson) library that is availible as community library in the [Particle Builder](https://build.particle.io/build) \r\n**v2 update** Library is added as depecdency using the new particle Libraries v2 feature\r\n\r\n## Features\r\n\r\nThe getstructure-particle library offers multiples cool features:\r\n\r\n\r\n\r\n\r\nThe callback method support directly JSon object. so you do not have to deal with boring char * and convert them by yourself.\r\n```\r\n// Callback for Structure subscriptions.\r\n// Receive Your JsonObject from GetStructure.io\r\nvoid myCallback(JsonObject& command) {\r\n    // If the command's name is \"toggle\", flip the LED.\r\n    if(String(command[\"name\"].asString()).equals(String(\"toggle\"))) {\r\n        ledValue = !ledValue;\r\n        digitalWrite(LED, ledValue ? HIGH : LOW);\r\n    }\r\n}\r\n```\r\n**Device** Object that associate a photon to the **Device** at [Structure](https://www.getstructure.io/)\r\n\r\nIs a wrapper for all the MQTT communication. It provides simply an object GetStructure::Device that you deal with. and it represents the devices on [Structure](https://www.getstructure.io/) application.\r\n\r\n```\r\n// The initialization of your device\r\nGetStructure::Device photon(\"YOUR-DEVICE-ID\", \"YOUR-ACCESS-KEY\", \"YOUR-ACCESS-SECRET\");\r\n```\r\nJust create your Json object and it send it for your to Structure application.\r\n```\r\nStaticJsonBuffer<100> jsonBuffer;\r\nJsonObject& root = jsonBuffer.createObject();\r\n...\r\n//Publish directly your JsonObject !!!  \r\nphoton.publish(root);\r\n```\r\n\r\n\r\n\r\nSimplified Json-based push methode and callback\r\n\r\n## Thanks\r\nThanks to Brandon Cannaday [@TheReddest](https://twitter.com/TheReddest) for his [Blog Article](https://www.getstructure.io/blog/how-to-connect-a-particle-photon-to-the-structure-iot-platform)\r\n\r\nThanks to GetStructure.io team for their free kits :D\r\n\r\n## Questions ?\r\nSend me a tweet to @CharifUs :)\r\n\r\n## Trubleshoot\r\n\r\n### SparkJson missing\r\n```\r\nStructure-MQTT-device/Structure-MQTT-device.h:38:33: fatal error: SparkJson/SparkJson.h: No such file or directory\r\n #include \"SparkJson/SparkJson.h\"\r\n```\r\nYou need to add SPARKJSON library also from the community libraries to your project.\r\n\r\n\r\n\r\n",
  "allVersions": [
    "0.0.2",
    "0.0.1"
  ]
}