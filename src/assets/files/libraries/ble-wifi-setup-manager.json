{
  "type": "libraries",
  "id": "ble-wifi-setup-manager",
  "links": {
    "download": "https://api.particle.io/v1/libraries/ble-wifi-setup-manager/archive/0.2.0.tar.gz"
  },
  "attributes": {
    "name": "ble-wifi-setup-manager",
    "version": "0.2.0",
    "installs": 2184,
    "license": "MIT",
    "author": "Dan Kouba <dan.kouba@particle.io>",
    "maintainer": "Dan Kouba <dan.kouba@particle.io>",
    "sentence": "Particle Argon WiFi provisioning via BLE",
    "paragraph": "Enables Particle Argon WiFi provisioning via BLE, specifically for use with the Chrome Web Bluetooth framework",
    "category": "Other",
    "url": "https://github.com/Dan-Kouba/ble_wifi_setup_manager",
    "repository": "Dan-Kouba/ble_wifi_setup_manager",
    "architectures": [
      "particle-argon"
    ],
    "visibility": "public",
    "mine": false
  },
  "kind": "community library",
  "letter": "b",
  "cardUrl": "/reference/device-os/libraries/b/ble-wifi-setup-manager",
  "versions": {
    "0.2.0": {
      "builds": {
        "2.0.1": {
          "photon": {
            "audomatic_mode": false,
            "manual_mode": false
          },
          "electron": {
            "audomatic_mode": false,
            "manual_mode": false
          },
          "argon": {
            "audomatic_mode": true,
            "manual_mode": true
          },
          "boron": {
            "audomatic_mode": false,
            "manual_mode": false
          }
        },
        "1.5.2": {
          "photon": {
            "audomatic_mode": false,
            "manual_mode": false
          },
          "electron": {
            "audomatic_mode": false,
            "manual_mode": false
          },
          "argon": {
            "audomatic_mode": true,
            "manual_mode": true
          },
          "boron": {
            "audomatic_mode": false,
            "manual_mode": false
          }
        },
        "3.3.0": {
          "photon": {
            "audomatic_mode": false,
            "manual_mode": false
          },
          "electron": {
            "audomatic_mode": false,
            "manual_mode": false
          },
          "argon": {
            "audomatic_mode": true,
            "manual_mode": true
          },
          "boron": {
            "audomatic_mode": false,
            "manual_mode": false
          }
        },
        "5.0.1": {
          "argon": {
            "audomatic_mode": true,
            "manual_mode": true
          },
          "boron": {
            "audomatic_mode": false,
            "manual_mode": false
          },
          "bsom": {
            "audomatic_mode": false,
            "manual_mode": false
          },
          "b5som": {
            "audomatic_mode": false,
            "manual_mode": false
          },
          "tracker": {
            "audomatic_mode": false,
            "manual_mode": false
          },
          "p2": {
            "audomatic_mode": false,
            "manual_mode": false
          }
        },
        "4.0.0": {
          "argon": {
            "audomatic_mode": true,
            "manual_mode": true
          },
          "boron": {
            "audomatic_mode": false,
            "manual_mode": false
          },
          "bsom": {
            "audomatic_mode": false,
            "manual_mode": false
          },
          "b5som": {
            "audomatic_mode": false,
            "manual_mode": false
          },
          "tracker": {
            "audomatic_mode": false,
            "manual_mode": false
          },
          "esomx": {
            "audomatic_mode": false,
            "manual_mode": false
          }
        }
      },
      "added": "2022-06-17T10:16:53.960Z"
    }
  },
  "readme": "# BLE WiFi Setup Manager Library\n## About\nThis library enables a user of a Particle Argon device to provision WiFi credentials over BLE, including the following functionality:\n1. Exposes and advertises a custom BLE service for WiFi provisioning\n2. Provides a simple JSON-based communication interface\n3. Enables scanning for nearby WiFi networks\n4. Enables a user to provision of one of the found networks\n5. Provides an optional callback function for user code to handle a provisioning event (eg. restart WiFi, connect to the cloud, etc.)\n\nFuture functionality may include:\n- [ ] Clear, get, and set WiFi credentials on the device\n- [ ] Expose ability to turn library on and off in user code (currently it runs all the time)\n- [x] Add callbacks for successful configuration of credentials\n\n## Use\n1. Add this library to your project (Name: `ble-wifi-setup-manager)\n2. Implement the provided example code\n\nA functional example webpage that can be used for BLE setup, using the Chrome Web Bluetooth standard, can be found [here](https://dan-kouba.github.io/WebBLE/index.html). This code is easy to implement into your own webpage and white-labelled for customer use. \n\n**Please note**: the web example _only_ works on Chrome running on a desktop OS (Windows/OSX/Linux), or on Android devices. iOS does not natively support the Web Bluetooth standard (yet), however, there does exist at least one [paid app](https://apps.apple.com/us/app/webble/id1193531073) that exposes the functionality required.\n\n## API\n### BLE Services and Characteristcs\nThe firmware exposes a custom service, which has two characteristics for communication channels. Characteristics are named from the device's perspective, meaning the device sends on `tx`, and receives on `rx`.\n\n| Description         |                                 UUID |\n|:--------------------|-------------------------------------:|\n|Service              |`b4ad5b8d-d2db-44d6-9d35-5d43b9e5060c`|\n|Characteristic: `tx` |`3c673f3a-382a-4835-8433-c1c1b6b65346`|\n|Characteristic: `rx` |`226285d5-7a5a-448d-8317-dae1fd2d6c36`|\n\n### Messages\nAll messages are in JSON format. They start with a value `msg_t` that informs either side what kind of message is being sent.\n\n| `msg_t` | Direction | Description | Example |\n|:--------|:------------|:------------|---------:|\n| `scan_resp` | Response from device (`rx`) | Contains details about one WiFi access point that has been found during a scan | `{\"msg_t\":\"scan_resp\", \"ssid\":\"MySSID\", \"sec\":\"WPA2\", \"ch\":11, \"rssi\":-53}`|\n| `scan` | Send to device (`tx`) | Initiates WiFi scan on the Argon | `{\"msg_type\":\"scan\"}` |\n| `set_creds` | Send to device (`tx`) | Provisions credentials for a given WiFi access point | `{\"msg_type\":\"set_creds\",\"ssid\":\"MySSID\",\"password\":\"MyPassword\"}` |",
  "allVersions": [
    "0.2.0"
  ]
}