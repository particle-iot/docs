{
  "type": "libraries",
  "id": "NtpTime",
  "links": {
    "download": "https://api.particle.io/v1/libraries/NtpTime/archive/0.0.3.tar.gz"
  },
  "attributes": {
    "name": "NtpTime",
    "version": "0.0.3",
    "installs": 4319,
    "license": "MIT License",
    "author": "ClassTech",
    "sentence": "Simple sync of system clock to NTP",
    "paragraph": "This library keeps the system clock synchronized to an NTP time server.  It should not be used for precise timing.  The library attempts to set the system clock at the tick of the second, but the system clock does not reset it's millisecond counter, so it could be wrong almost a second.  But it just has a one second resolution anyway.  ",
    "url": "https://github.com/ClassTech/NtpTime",
    "repository": "https://github.com/ClassTech/NtpTime.git",
    "architectures": [],
    "visibility": "public",
    "mine": false
  },
  "kind": "community library",
  "letter": "n",
  "cardUrl": "/cards/libraries/n/NtpTime",
  "versions": {
    "0.0.3": {
      "builds": {
        "2.0.1": {
          "photon": {
            "usage": true
          },
          "electron": {
            "usage": true
          },
          "argon": {
            "usage": true
          },
          "boron": {
            "usage": true
          }
        },
        "1.5.2": {
          "photon": {
            "usage": true
          },
          "electron": {
            "usage": true
          },
          "argon": {
            "usage": true
          },
          "boron": {
            "usage": true
          }
        }
      }
    }
  },
  "readme": "# NtpTime\n\nKeeps the Particle Time synced to NTP.  This should not be used for\nhigh precision time keeping.  The Particle Time is only one second resolution. So\nthis shouldn't be used for anything that needs more than acccuracy to a large\nfraction of a second.  NtpTime uses one of Particle's software timers.\n\n## Usage\n\nConnect XYZ hardware, add the NtpTime library to your project and follow this simple example:\n\n```\n// Example usage for NtpTime library by ClassTech.\n\n#include \"NtpTime.h\"\n\n// Initialize objects from the lib\nNtptime ntptime;\n\nvoid setup() {\n    // Call functions on initialized library objects that require hardware\n    ntptime.begin();\n}\n\nvoid loop() {\n    // Use the library's initialized objects and functions\n    ntptime.process();\n}\n```\n\n\n## Documentation\n\nKeeps the Particle Time synced to NTP. This should not be used for high precision time keeping. The Particle Time is only one second resolution. So this shouldn't be used for anything that needs more than acccuracy to a large fraction of a second. NtpTime uses one of Particle's software timers.\n\n## Contributing\n\nHere's how you can make changes to this library and eventually contribute those changes back.\n\nTo get started, [clone the library from GitHub to your local machine](https://help.github.com/articles/cloning-a-repository/).\n\nChange the name of the library in `library.properties` to something different. You can add your name at then end.\n\nModify the sources in <src> and <examples> with the new behavior.\n\nTo compile an example, use `particle compile examples/usage` command in [Particle CLI](https://docs.particle.io/guide/tools-and-features/cli#update-your-device-remotely) or use our [Desktop IDE](https://docs.particle.io/guide/tools-and-features/dev/#compiling-code).\n\nAfter your changes are done you can upload them with `particle library upload` or `Upload` command in the IDE. This will create a private (only visible by you) library that you can use in other projects. Do `particle library add ntp-time_myname` to add the library to a project on your machine or add the ntp-time_myname library to a project on the Web IDE or Desktop IDE.\n\nAt this point, you can create a [GitHub pull request](https://help.github.com/articles/about-pull-requests/) with your changes to the original library. \n\nIf you wish to make your library public, use `particle library publish` or `Publish` command.\n\n## LICENSE\nCopyright 2017 ClassTech\n\nLicensed under the MIT license\n",
  "allVersions": [
    "0.0.3"
  ]
}