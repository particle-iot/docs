{
  "type": "libraries",
  "id": "SparkFunPhant",
  "links": {
    "download": "https://api.particle.io/v1/libraries/SparkFunPhant/archive/1.2.0.tar.gz"
  },
  "attributes": {
    "name": "SparkFunPhant",
    "version": "1.2.0",
    "installs": 4835,
    "license": "GPL v3",
    "author": "Jim Lindblom <jim@sparkfun.com>",
    "sentence": "A simple library for the Particle Photon that generates Phant posts, gets, deletes and more.",
    "url": "https://github.com/sparkfun/sparkfun_phant_particle_library",
    "repository": "https://github.com/sparkfun/sparkfun_phant_particle_library.git",
    "architectures": [],
    "visibility": "public",
    "mine": false
  },
  "kind": "community library",
  "letter": "s",
  "cardUrl": "/cards/libraries/s/SparkFunPhant",
  "versions": {
    "1.2.0": {
      "builds": {
        "2.0.1": {
          "photon": {
            "ExampleStream": true
          },
          "electron": {
            "ExampleStream": true
          },
          "argon": {
            "ExampleStream": true
          },
          "boron": {
            "ExampleStream": true
          }
        },
        "1.5.2": {
          "photon": {
            "ExampleStream": true
          },
          "electron": {
            "ExampleStream": true
          },
          "argon": {
            "ExampleStream": true
          },
          "boron": {
            "ExampleStream": true
          }
        }
      }
    }
  },
  "readme": "### SparkFun Phant Particle Library\n\nA Phant library for the Particle Core and Photon.\n\nAbout\n-------------------\n\nThis is a firmware library SparkFun's Phant data storage/stream service, implemented on [data.sparkfun.com](https://data.sparkfun.com)\n\n[![Phant logo](http://phant.io/img/phant.svg)](https://data.sparkfun.com)\n\nRepository Contents\n-------------------\n\n* **/firmware** - Source files for the library (.cpp, .h).\n* **/firmware/examples** - Example sketches for the library (.cpp). Run these from the Particle IDE. \n* **spark.json** - General library properties for the Particle library manager. \n\nExample Usage\n-------------------\n\n#### Create a Phant Stream\n\nVisit [data.sparkfun.com](https://data.sparkfun.com) to create a Phant stream of your own. You'll be given public and private keys, don't lose them!\n\nIf you want to set up Phant on a server of your own, visit [phant.io](http://phant.io/).\n\n#### Include & Constructor\n\nMake sure you include \"SparkFun-Spark-Phant/SparkFun-Spark-Phant.h\":\n\n\t// Include the Phant library:\n\t#include \"SparkFun-Spark-Phant/SparkFun-Spark-Phant.h\":\n\nThen create a Phant object, which requires a **server**, **public key** and **private key**:\n\n\tconst char server[] = \"data.sparkfun.com\"; // Phant destination server\n\tconst char publicKey[] = \"DJjNowwjgxFR9ogvr45Q\"; // Phant public key\n\tconst char privateKey[] = \"P4eKwGGek5tJVz9Ar84n\"; // Phant private key\n\tPhant phant(server, publicKey, privateKey); // Create a Phant object\n\t\n#### Adding Fields/Data\n\nBefore posting, update every field in the stream using the `add([field], [value])` function. The `[field]` variable will always be a String (or const char array), `[value]` can be just about any basic data type -- `int`, `byte`, `long`, `float`, `double`, `String`, `const char`, etc.\n\nFor example:\n\n\tphant.add(\"myByte\", 127);\n\tphant.add(\"myInt\", -42);\n\tphant.add(\"myString\", \"Hello, world\");\n\tphant.add(\"myFloat\", 3.1415);\n\n#### POSTing\n\nAfter you've phant.add()'ed, you can call `phant.post()` to create a Phant POST string. `phant.post()` returns a string, which you can send straight to a print function.\n\nMost of the time, you'll want to send your `phant.post()` string straight out of a TCPClient print. For example:\n\n\tTCPClient client;\n\tif (client.connect(server, 80)) // Connect to the server\n    {\n        client.print(phant.post());\n\t}\n\nAfter calling `phant.post()` all of the field/value parameters are erased. You'll need to make all of your phant.add() calls before calling post again.\n\nRecommended Components\n-------------------\n\n* [Particle Photon](https://www.sparkfun.com/products/13345)\n* A [Photon Shield](https://www.sparkfun.com/categories/278) or [sensor](https://www.sparkfun.com/categories/23) to interface with your Photon and post data to Phant.\n\nLicense Information\n-------------------\n\nThis product is _**open source**_! \n\nPlease review the LICENSE.md file for license information. \n\nIf you have any questions or concerns on licensing, please contact techsupport@sparkfun.com.\n\nDistributed as-is; no warranty is given.\n\n- Your friends at SparkFun.",
  "allVersions": [
    "1.2.0",
    "1.1.1"
  ]
}