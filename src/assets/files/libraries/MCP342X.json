{
  "type": "libraries",
  "id": "MCP342X",
  "links": {
    "download": "https://api.particle.io/v1/libraries/MCP342X/archive/0.1.1.tar.gz"
  },
  "attributes": {
    "name": "MCP342X",
    "version": "0.1.1",
    "installs": 2431,
    "license": "BSD",
    "author": "C. Schnarel for arduino converted to particle A.Lont",
    "sentence": "Library for MCP342X",
    "architectures": [],
    "visibility": "public",
    "mine": false
  },
  "kind": "community library",
  "letter": "m",
  "cardUrl": "/cards/libraries/m/MCP342X",
  "versions": {
    "0.1.1": {
      "builds": {
        "2.0.1": {
          "photon": {},
          "electron": {},
          "argon": {},
          "boron": {}
        }
      },
      "noExamples": true,
      "added": "2022-06-17T10:16:53.866Z"
    }
  },
  "readme": "# MCP342X\n\nA Particle project named MCP342X\n\n## Welcome to your project!\n\nEvery new Particle project is composed of 3 important elements that you'll see have been created in your project directory for MCP342X.\n\n#### ```/src``` folder:  \nThis is the source folder that contains the firmware files for your project. It should *not* be renamed. \nAnything that is in this folder when you compile your project will be sent to our compile service and compiled into a firmware binary for the Particle device that you have targeted.\n\nIf your application contains multiple files, they should all be included in the `src` folder. If your firmware depends on Particle libraries, those dependencies are specified in the `project.properties` file referenced below.\n\n#### ```.ino``` file:\nThis file is the firmware that will run as the primary application on your Particle device. It contains a `setup()` and `loop()` function, and can be written in Wiring or C/C++. For more information about using the Particle firmware API to create firmware for your Particle device, refer to the [Firmware Reference](https://docs.particle.io/reference/firmware/) section of the Particle documentation.\n\n#### ```project.properties``` file:  \nThis is the file that specifies the name and version number of the libraries that your project depends on. Dependencies are added automatically to your `project.properties` file when you add a library to a project using the `particle library add` command in the CLI or add a library in the Desktop IDE.\n\n## Adding additional files to your project\n\n#### Projects with multiple sources\nIf you would like add additional files to your application, they should be added to the `/src` folder. All files in the `/src` folder will be sent to the Particle Cloud to produce a compiled binary.\n\n#### Projects with external libraries\nIf your project includes a library that has not been registered in the Particle libraries system, you should create a new folder named `/lib/<libraryname>/src` under `/<project dir>` and add the `.h`, `.cpp` & `library.properties` files for your library there. Read the [Firmware Libraries guide](https://docs.particle.io/guide/tools-and-features/libraries/) for more details on how to develop libraries. Note that all contents of the `/lib` folder and subfolders will also be sent to the Cloud for compilation.\n\n## Compiling your project\n\nWhen you're ready to compile your project, make sure you have the correct Particle device target selected and run `particle compile <platform>` in the CLI or click the Compile button in the Desktop IDE. The following files in your project folder will be sent to the compile service:\n\n- Everything in the `/src` folder, including your `.ino` application file\n- The `project.properties` file for your project\n- Any libraries stored under `lib/<libraryname>/src`\n",
  "allVersions": [
    "0.1.1"
  ]
}