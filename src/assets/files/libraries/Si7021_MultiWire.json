{
  "type": "libraries",
  "id": "Si7021_MultiWire",
  "links": {
    "download": "https://api.particle.io/v1/libraries/Si7021_MultiWire/archive/0.0.2.tar.gz"
  },
  "attributes": {
    "name": "Si7021_MultiWire",
    "version": "0.0.2",
    "installs": 648,
    "license": "MIT",
    "author": "Brandon Satorm <brandon@particle.io>",
    "sentence": "A Particle library for the Si7021 Temperature and Humidity sensor, with multi-wire support",
    "url": "https://github.com/bsatrom/Si7021_MultiWire.git",
    "repository": "https://github.com/bsatrom/Si7021_MultiWire.git",
    "architectures": [
      "particle-photon",
      "particle-electron"
    ],
    "visibility": "public",
    "mine": false
  },
  "kind": "community library",
  "letter": "s",
  "cardUrl": "/cards/libraries/s/Si7021_MultiWire",
  "versions": {
    "0.0.2": {
      "builds": {
        "2.0.1": {
          "photon": {
            "usage": false
          },
          "electron": {
            "usage": true
          },
          "argon": {
            "usage": true
          },
          "boron": {
            "usage": true
          }
        },
        "1.5.2": {
          "photon": {
            "usage": false
          },
          "electron": {
            "usage": true
          },
          "argon": {
            "usage": true
          },
          "boron": {
            "usage": true
          }
        }
      }
    }
  },
  "readme": "# Si7021_MultiWire\n\nA Particle library for the Si7021 Temperature and Humidity sensor, based on the Sparkfun Si7021 Breakout, but with support for Particle devices with multiple I2C buses (for instance, the Electron).\n\n## Usage\n\nConnect A Photon or Electron, add the Si7021_MultiWire library to your project and follow this simple example:\n\n```\n#include \"Si7021_MultiWire.h\"\nSi7021_MultiWire si7021_MultiWire = Si7021_MultiWire(Wire); // Use Wire (Photon) or Wire1 (Photon and Electron)\n\nvoid setup() {\n  si7021_MultiWire.begin();\n}\n\nvoid loop() {\n  si7021_MultiWire.process();\n}\n```\n\nSee the [examples](examples) folder for more details.\n\n## Documentation\n\nTODO: Describe `Si7021_MultiWire`\n\n## Contributing\n\nHere's how you can make changes to this library and eventually contribute those changes back.\n\nTo get started, [clone the library from GitHub to your local machine](https://help.github.com/articles/cloning-a-repository/).\n\nChange the name of the library in `library.properties` to something different. You can add your name at then end.\n\nModify the sources in <src> and <examples> with the new behavior.\n\nTo compile an example, use `particle compile examples/usage` command in [Particle CLI](https://docs.particle.io/guide/tools-and-features/cli#update-your-device-remotely) or use our [Desktop IDE](https://docs.particle.io/guide/tools-and-features/dev/#compiling-code).\n\nAfter your changes are done you can upload them with `particle library upload` or `Upload` command in the IDE. This will create a private (only visible by you) library that you can use in other projects. Do `particle library add Si7021_MultiWire_myname` to add the library to a project on your machine or add the Si7021_MultiWire_myname library to a project on the Web IDE or Desktop IDE.\n\nAt this point, you can create a [GitHub pull request](https://help.github.com/articles/about-pull-requests/) with your changes to the original library.\n\nIf you wish to make your library public, use `particle library publish` or `Publish` command.\n\n## LICENSE\n\nCopyright 2018 Brandon Satorm <mailto:brandon@particle.io>\n\nLicensed under the MIT license\n",
  "allVersions": [
    "0.0.2",
    "0.0.1"
  ]
}