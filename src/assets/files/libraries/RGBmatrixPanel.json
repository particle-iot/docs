{
  "type": "libraries",
  "id": "RGBmatrixPanel",
  "links": {
    "download": "https://api.particle.io/v1/libraries/RGBmatrixPanel/archive/1.2.1.tar.gz"
  },
  "attributes": {
    "name": "RGBmatrixPanel",
    "version": "1.2.1",
    "installs": 11857,
    "license": "BSD license",
    "author": "Paul Kourany / Adafruit",
    "sentence": "Adafruit 16/32/64+ x 32 RGB matrix Panel library for Particle",
    "url": "https://github.com/pkourany/RGBmatrixPanel_IDE",
    "repository": "https://github.com/pkourany/RGBmatrixPanel_IDE.git",
    "architectures": [],
    "visibility": "public",
    "mine": false
  },
  "kind": "community library",
  "letter": "r",
  "cardUrl": "/cards/libraries/r/RGBmatrixPanel",
  "versions": {
    "1.2.1": {
      "builds": {
        "2.0.1": {
          "photon": {
            "colorwheel_32x32": true,
            "colorwheel_progmem_32x32": true,
            "plasma_16x32": true,
            "plasma_32x32": true,
            "scrolltext_16x32": true,
            "testcolors_16x32": true,
            "testshapes_16x32": true,
            "testshapes_32x32": true
          },
          "electron": {
            "colorwheel_32x32": true,
            "colorwheel_progmem_32x32": true,
            "plasma_16x32": true,
            "plasma_32x32": true,
            "scrolltext_16x32": true,
            "testcolors_16x32": true,
            "testshapes_16x32": true,
            "testshapes_32x32": true
          },
          "argon": {
            "colorwheel_32x32": false,
            "colorwheel_progmem_32x32": false,
            "plasma_16x32": false,
            "plasma_32x32": false,
            "scrolltext_16x32": false,
            "testcolors_16x32": false,
            "testshapes_16x32": false,
            "testshapes_32x32": false
          },
          "boron": {
            "colorwheel_32x32": false,
            "colorwheel_progmem_32x32": false,
            "plasma_16x32": false,
            "plasma_32x32": false,
            "scrolltext_16x32": false,
            "testcolors_16x32": false,
            "testshapes_16x32": false,
            "testshapes_32x32": false
          }
        },
        "1.5.2": {
          "photon": {
            "colorwheel_32x32": true,
            "colorwheel_progmem_32x32": true,
            "plasma_16x32": true,
            "plasma_32x32": true,
            "scrolltext_16x32": true,
            "testcolors_16x32": true,
            "testshapes_16x32": true,
            "testshapes_32x32": true
          },
          "electron": {
            "colorwheel_32x32": true,
            "colorwheel_progmem_32x32": true,
            "plasma_16x32": true,
            "plasma_32x32": true,
            "scrolltext_16x32": true,
            "testcolors_16x32": true,
            "testshapes_16x32": true,
            "testshapes_32x32": true
          },
          "argon": {
            "colorwheel_32x32": false,
            "colorwheel_progmem_32x32": false,
            "plasma_16x32": false,
            "plasma_32x32": false,
            "scrolltext_16x32": false,
            "testcolors_16x32": false,
            "testshapes_16x32": false,
            "testshapes_32x32": false
          },
          "boron": {
            "colorwheel_32x32": false,
            "colorwheel_progmem_32x32": false,
            "plasma_16x32": false,
            "plasma_32x32": false,
            "scrolltext_16x32": false,
            "testcolors_16x32": false,
            "testshapes_16x32": false,
            "testshapes_32x32": false
          }
        }
      }
    }
  },
  "readme": "RGB Matrix Panel\n================\n\nArduino library for Adafruit 16x32 and 32x32 RGB LED matrix panels.\n\thttp://www.adafruit.com/products/420\n\thttp://www.adafruit.com/products/607\n\nAdapted for Spark by Paul Kourany, June 2014\n\nUpdated for Particle Photon, Sept 2015\n\nUpdated Dec 2015 to properly support wide or daisychained panels with a \"width\" parameter.\nThanks to Andrew Holmes (author of RGBPongClock) for this contribution!!\n\nConfirmed compatible with Electron, May 2016\nUpdated examples for new v4 RGBMatrixPanel shield pinout, May 2016\n\nAdd delay() in loop() to animation examples to improve effects, Dec 2016\n\n\nParticle Photon Adaptation\n---\nThe Photon version only uses bit-banging due to the GPIO pin mapping not\nallocating enough pin on a single port.  However, with the Photon's 120MHz\nclock, the refresh rate is 140Hz\n\nParticle Core Adaptation\n---\nThe orginal Arduino library used a lot of direct I/O port write tricks and\nassembler to achieve a calculated 283Hz refresh rate for a 16x32 panel.\n\nThe Particle version comes in two flavours: bit-banging and (partial) port\nwrite for the output which could be optimized using inline assembler.  As it\nstands the calculated refresh rate for a 16x32 panel using the bit-banged\nversion is 90Hz while the (partial) port write version is 140Hz (half those\nvalues on 32x32 panel).\n\nDisplay configuration\n---\nThe library supports 16 pixel high and 32 pixel high panels of any multiples\nof 32 pixels wide.  Adafruit sells 16x32, 32x32 and 64x32 panels fully compatible\nwith the library.  Daisy chaining displays will also allow for wider configurations,\nlimited only by available Core,  Photon or Electron RAM.\n\nConstructor examples:\n\n`RGBmatrixPanel matrix(A, B, C, CLK, LAT, OE, true);` //16x32 panel, width is 32 by default if not specified\n\n`RGBmatrixPanel matrix(A, B, C, CLK, LAT, OE, true, 64);` //2 x 16x32 daisy chained = 16x64 panels\n\n`RGBmatrixPanel matrix(A, B, C, D,CLK, LAT, OE, true, 32);` //32x32 panel\n\n`RGBmatrixPanel matrix(A, B, C, D,CLK, LAT, OE, true, 64);` //64x32 panel\n\n\nComponents Required\n---\nThis library requires the Adafruit_mfGFX and SparkIntervalTimer libraries\n\nWiring\n---\nWiring between the Spark and 16x32 or 32x32 display is as follows:\n\n```\nPanel Pin\tCore Pin\tPhoton/Electron Pin\n--------------------------------------\n  GND\t\t\tGND\t\t\tGND\t\t\n  CLK \t\t\tD6          D6\t\t// Specified in constructor\n  OE  \t\t\tD7          D7\t\t// Specified in constructor\n  LAT \t\t\tA4          A4\t\t// Specified in constructor\n  A   \t\t\tA0          A0\t\t// Specified in constructor\n  B   \t\t\tA1          A1\t\t// Specified in constructor\n  C   \t\t\tA2          A2\t\t// Specified in constructor\n  D\t\t\t\tA3\t\t\tA3\t\t// 32x32 display only - Specified in constructor\n  R1\t\t\tD0\t\t\tD0\t\t\n  G1\t\t\tD1\t\t\tD1\t\t\n  B1\t\t\tD2\t\t\tD2\t\t\n  R2\t\t\tD3\t\t\tD3\t\t\n  G2\t\t\tD4\t\t\tD4\t\t\n  B2\t\t\tD5\t\t\tD5\t\t\n```\n\nThe display needs its own 5V supply.\n\nConnect, compile, flash and run.\n",
  "allVersions": [
    "1.2.1",
    "1.2.0",
    "1.1.8",
    "1.1.7",
    "1.1.6",
    "1.1.5",
    "1.1.4",
    "1.1.3",
    "1.1.2",
    "1.1.1",
    "1.1.0",
    "1.0.1",
    "1.0.0"
  ]
}