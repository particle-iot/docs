{
  "type": "libraries",
  "id": "GxEPD2",
  "links": {
    "download": "https://api.particle.io/v1/libraries/GxEPD2/archive/1.2.0.tar.gz"
  },
  "attributes": {
    "name": "GxEPD2",
    "version": "1.2.0",
    "installs": 946,
    "author": "Jean-Marc Zingg",
    "maintainer": "Jean-Marc Zingg",
    "sentence": "Arduino Display Library for SPI E-Paper displays from Dalian Good Display and Waveshare. ",
    "paragraph": "Requires HW SPI and Adafruit_GFX. Caution: these e-papers require 3.3V supply AND data lines!",
    "category": "Display",
    "url": "https://github.com/ZinggJM/GxEPD2",
    "architectures": [
      "*"
    ],
    "visibility": "public",
    "mine": false
  },
  "kind": "community library",
  "letter": "g",
  "cardUrl": "/cards/libraries/g/GxEPD2",
  "versions": {
    "1.2.0": {
      "builds": {
        "2.0.1": {
          "photon": {},
          "electron": {},
          "argon": {},
          "boron": {}
        }
      },
      "noExamples": true
    }
  },
  "readme": "# GxEPD2\n## Arduino Display Library for SPI E-Paper Displays\n\n- With full Graphics and Text support using Adafruit_GFX\n\n- For SPI e-paper displays from Dalian Good Display \n- and SPI e-paper boards from Waveshare\n\n### important note :\n- the display panels are for 3.3V supply and 3.3V data lines\n- never connect data lines directly to 5V Arduino data pins, use e.g. 4k7/10k resistor divider\n- series resistor only is not enough for reliable operation (back-feed effect through protection diodes)\n- 4k7/10k resistor divider may not work with flat cable extensions or Waveshare 4.2 board, use level converter then\n- do not forget to connect GND\n- the actual Waveshare display boards now have level converters and series regulator, safe for 5V\n- use 4k7 pull-down on SS for ESP8266 for boards with level converters\n\n### Paged Drawing, Picture Loop\n - This library uses paged drawing to limit RAM use and cope with missing single pixel update support\n - buffer size can be selected in the application by template parameter page_height, see GxEPD2_Example\n - Paged drawing is implemented as picture loop, like in U8G2 (Oliver Kraus)\n - see https://github.com/olikraus/u8glib/wiki/tpictureloop\n - Paged drawing is also available using drawPaged() and drawCallback(), like in GxEPD\n- ` // GxEPD style paged drawing; drawCallback() is called as many times as needed `\n- ` void drawPaged(void (*drawCallback)(const void*), const void* pv) `\n- paged drawing is done using Adafruit_GFX methods inside picture loop or drawCallback\n\n### Full Screen Buffer Support\n - full screen buffer is selected by setting template parameter page_height to display height\n - drawing to full screen buffer is done using Adafruit_GFX methods without picture loop or drawCallback\n - and then calling method display()\n\n### Low Level Bitmap Drawing Support\n - bitmap drawing support to the controller memory and screen is available:\n - either through the template class instance methods that forward calls to the base display class\n - or directly using an instance of a base display class and calling its methods directly\n\n### Supporting Arduino Forum Topics:\n\n- Waveshare e-paper displays with SPI: http://forum.arduino.cc/index.php?topic=487007.0\n- Good Dispay ePaper for Arduino : https://forum.arduino.cc/index.php?topic=436411.0\n\n### Note on documentation\n- GxEPD2 uses Adafruit_GFX for Graphics and Text support, which is well documented there\n- GxEPD2 uses meaningful method names, and has some comments in the header files\n- consult the header files GxEPD2_BW.h, GxEPD2_3C.h and GxEPD2_GFX.h\n- for the concept of paged drawing and picture loop see: \n- https://github.com/olikraus/u8glib/wiki/tpictureloop\n\n### Supported SPI e-paper panels from Good Display:\n- GDEP015OC1     1.54\" b/w\n- GDEW0154Z04    1.54\" b/w/r 200x200\n- GDE0213B1      2.13\" b/w\n- GDEH0213B72    2.13\" b/w, replacement for GDE0213B1\n- GDEH0213B73    2.13\" b/w, new replacement for GDE0213B1, GDEH0213B72\n- GDEW0213I5F    2.13\" b/w flexible\n- GDEW0213Z16    2.13\" b/w/r\n- GDEH029A1      2.9\" b/w\n- GDEW029T5      2.9\" b/w\n- GDEW029Z10     2.9\" b/w/r\n- GDEW026T0      2.6\" b/w\n- GDEW027C44     2.7\" b/w/r\n- GDEW027W3      2.7\" b/w\n- GDEW0371W7     3.7\" b/w\n- GDEW042T2      4.2\" b/w\n- GDEW042Z15     4.2\" b/w/r\n- GDEW0583T7     5.83\" b/w\n- GDEW075T8      7.5\" b/w\n- GDEW075Z09     7.5\" b/w/r\n- GDEW075Z08     7.5\" b/w/r 800x480\n#### Supported SPI e-paper panels & boards from Waveshare: compare with Good Display, same panel\n#### other supported panels\n- ED060SCT        6\" grey levels, on Waveshare e-Paper IT8951 Driver HAT\n\n### Version 1.2.0\n- added \"fast partial update\" (differential update) for GDEW0371W7 3.7\" b/w 240x416\n- improved differential update waveform for GDEW026T0 2.6\" b/w 152x256\n- fixed init code & improved differential update for GDEW042T2 4.2\" b/w 300x400\n- note that all differential refresh waveforms are a compromise (ghosting, big font use)\n- parameters for differential waveform for these display can easily be changed for experimenting\n- GDEW042T2 would have greyed background without sustain phase\n- GDEW042T2 needs multiple full refreshes after extended use of partial updates\n#### Version 1.1.10\n- added support for GDEH0213B73 2.13\" b/w, replacement for GDE0213B1, GDEH0213B72\n- added support for GDEW026T0 2.6\" b/w 152x256\n- added support for GDEW0371W7 3.7\" b/w 240x416\n- added support for GDEW075Z08 7.5\" b/w/r 800x480\n- GDEW075Z08 does allow (slow) partial update, set usePartialUpdate = false to disable for better image\n- changed 4.2\" b/w waveform table, for better result with actual panels\n#### Version 1.1.9\n- note for ESP8266 when using SS for CS: (wiring suggestion) \n- connect 4.7k pull-down from GPIO15 to GND if your board or shield has level converters\n- fixes for large displays (use uint16_t for buffer index)\n#### Version 1.1.8\n- fix for incomplete download in GxEPD2_WiFi_Example\n- added missing method displayWindow() to GxEPD2_GFX base class\n- fix and clean up of initial refresh for panels with differential update\n- initial refresh needs to be full update, not \"fast partial update\", for these panels,\n- as the screen content may differ from the \"previous buffer\" content.\n- add clean of controller buffer(s) on initial write to controller, for partial update.\n#### Version 1.1.7\n- enhanced support for full buffered, non-paged use, for processors with enough RAM\n- use void display(bool partial_update_mode = false); corresponds to update() in  GxEPD\n- use added void displayWindow(uint16_t x, uint16_t y, uint16_t w, uint16_t h);\n- use added writeImagePart(...), drawImagePart(...), used by displayWindow()\n- added example GxEPD2_NotPagedExample.ino\n- several fixes, e.g. parameter range check in setPartialWindow()\n#### Version 1.1.6\n- added support for GDEH0213B72 2.13\" b/w, replacement for GDE0213B1\n- changed SPI speed for IT8951 Driver HAT to 24MHz for write, 10MHz for read\n- minor fixes, e.g. centering of text bounding box in GxEPD2_Example\n#### Version 1.1.5\n- added support for 6\" ED060SCT on Waveshare e-Paper IT8951 Driver HAT\n- uses 3.3V data lines, but 5V supply (~80mA active, ~20mA stand-by, sleep doesn't work)\n- note: 5V supply needs to be exact and strong; 5V over diode from USB (e.g. Wemos D1 mini) doesn't work!\n- note that the IT8951 Driver HAT is panel specific, with flash parameterized by supplier\n- this is an initial version\n#### Version 1.1.4+\n- added GxEPD2_WS_ESP32_Driver example for Waveshare ESP32 Driver Board\n#### Version 1.1.4\n- eliminated double refresh for \"fast partial update\"\n- moved wavetables to the driver classes\n- added one explicit drawImage(...) and writeImage(...) method (for removed default paramter values for 1.1.3)\n- added init method with added parameter  initial, for re-init after processor deep sleep wakeup\n- added init parameter pulldown_rst_mode, for special RST handling (not needed for waveshare shield)\n#### Version 1.1.3\n- fixed wavetables for GDEW029T5 and GDEW0213I5F\n- fixed drawImage(...) overloaded methods signature matching ambiguity\n#### Version 1.1.2\n- added support for GDEW029T5\n- fixed (added) clipping for partial window\n- fixed (added) powerOff() after full update (partial update keeps power on)\n- added hibernate() for minimum power use by displays that support it\n#### Version 1.1.1\n- 2.7\" b/w GDEW027W3 with fast partial update support, based on new demo code wavetable\n- mapping suggestion added for Arduino MEGA\n- NOTE: use voltage divider resistors for 5V Arduinos, series resistor is not reliable enough\n- ConnectingHardware.md updated\n#### Version 1.1.0\n- added  support for GDEW0213I5F for 2.13\" b/w 104x212 flexible display\n- updated GxEPD2_WiFi_Example and GxEPD2_Spiffs_Loader to use BearSSL on ESP8266, for large bitmap downloads\n#### Version 1.0.9\n- add GxEPD2_U8G2_Fonts_Example, e.g. for use of Umlauts ÄÖÜäéöü\n- NOTE: you need to SAVE the modified example to a saveable location for UTF-8 characters to work\n#### Version 1.0.8\n- add GxEPD2_SD_AVR_boards_added.h to GxEPD2_SD_AVR_Example\n- with example definitions for non-AVR boards (low level display class use example)\n#### Version 1.0.7\n- add GxEPD2_boards_added.h to GxEPD2_Example \n- with example definitions for Arduino DUE and MKR1000\n#### Version 1.0.6\n- add buffered drawing option to GxEPD2_WiFi_Example\n- allows use with 1.54\" 3-color 200x200 display, may also be useful for small bitmaps\n#### Version 1.0.5\n- add buffered drawing option to GxEPD2_SD_Example and GxEPD2_Spiffs_Example\n- allows use with 1.54\" 3-color 200x200 display, may also be useful for small bitmaps\n#### Version 1.0.4\n- add GxEPD2_GFX base class support (optional, selectable, uses slightly more code)\n- base class GxEPD2_GFX can be used to pass references or pointers to the display instance as parameter\n- add GxEPD2_GFX_MultiDisplayExample, uses  GxEPD2_GFX reference parameter\n- modify GxEPD2_MultiDisplayExample for ESP8266 (template issue: class expected instead of typename)\n#### Version 1.0.3\n- fix GxEPD2_SD_Example & GxEPD2_SD_AVR_Example\n- add GxEPD2_MultiDisplayExample (preliminary version)\n#### Version 1.0.2\n- initial release version 1.0.2\n- tested with ESP8266, ESP32, STM32F103C8T6, AVR Arduino (Pro Mini 3.3V)\n- 1.54\" 3-color GxEPD2_154c can be used with paging for AVR\n- wave tables in program space,  4.2\" b/w can be used with GxEPD2_SD_AVR_Example\n- issues enabled and welcome, please use Forum Topic for enhancement suggestions\n#### Version 1.0.1\n- pre-release test version\n- GxEPD2_SD_AVR_Example added, has no graphics buffer to reduce RAM usage (base display class use)\n- issues disabled so far, use Arduino Forum Topics instead\n- in this version 1.54\" 3-color GxEPD2_154c can only be used with full size buffer (or with no buffer base display class)\n#### Version 1.0.0\n- preliminary version, under construction\n",
  "allVersions": [
    "1.2.0",
    "1.1.6"
  ]
}