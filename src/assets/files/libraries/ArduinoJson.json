{
  "type": "libraries",
  "id": "ArduinoJson",
  "links": {
    "download": "https://api.particle.io/v1/libraries/ArduinoJson/archive/6.18.3.tar.gz"
  },
  "attributes": {
    "name": "ArduinoJson",
    "version": "6.18.3",
    "installs": 347748,
    "license": "MIT",
    "author": "Benoit Blanchon <blog.benoitblanchon.fr>",
    "maintainer": "Benoit Blanchon <blog.benoitblanchon.fr>",
    "sentence": "A simple and efficient JSON library for embedded C++.",
    "paragraph": "ArduinoJson supports ✔ serialization, ✔ deserialization, ✔ MessagePack, ✔ fixed allocation, ✔ zero-copy, ✔ streams, ✔ filtering, and more. It is the most popular Arduino library on GitHub ❤❤❤❤❤. Check out arduinojson.org for a comprehensive documentation.",
    "category": "Data Processing",
    "url": "https://arduinojson.org/?utm_source=meta&utm_medium=library.properties",
    "repository": "https://github.com/bblanchon/ArduinoJson.git",
    "architectures": [
      "*"
    ],
    "visibility": "public",
    "mine": false
  },
  "kind": "community library",
  "letter": "a",
  "cardUrl": "/cards/libraries/a/ArduinoJson",
  "versions": {
    "6.17.3": {
      "builds": {
        "2.0.1": {
          "photon": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          },
          "electron": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          },
          "argon": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          },
          "boron": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          }
        },
        "1.5.2": {
          "photon": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          },
          "electron": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          },
          "argon": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          },
          "boron": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          }
        }
      }
    },
    "6.18.0": {
      "builds": {
        "2.0.1": {
          "photon": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          },
          "electron": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          },
          "argon": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          },
          "boron": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          }
        },
        "1.5.2": {
          "photon": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          },
          "electron": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          },
          "argon": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          },
          "boron": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          }
        }
      }
    },
    "6.18.3": {
      "builds": {
        "2.0.1": {
          "photon": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          },
          "electron": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          },
          "argon": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          },
          "boron": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          }
        },
        "1.5.2": {
          "photon": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          },
          "electron": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          },
          "argon": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          },
          "boron": {
            "JsonConfigFile": false,
            "JsonFilterExample": false,
            "JsonGeneratorExample": true,
            "JsonHttpClient": false,
            "JsonParserExample": false,
            "JsonServer": false,
            "JsonUdpBeacon": false,
            "MsgPackParser": false,
            "ProgmemExample": true,
            "StringExample": false
          }
        }
      }
    }
  },
  "readme": "![ArduinoJson](banner.svg)\r\n\r\n---\r\n\r\n[![arduino-library-badge](https://www.ardu-badge.com/badge/ArduinoJson.svg?version=6.18.3)](https://www.ardu-badge.com/ArduinoJson/6.18.3)\r\n[![Continuous Integration](https://github.com/bblanchon/ArduinoJson/workflows/Continuous%20Integration/badge.svg?branch=6.x)](https://github.com/bblanchon/ArduinoJson/actions?query=workflow%3A%22Continuous+Integration%22+branch%3A6.x)\r\n[![Continuous Integration](https://ci.appveyor.com/api/projects/status/m7s53wav1l0abssg/branch/6.x?svg=true)](https://ci.appveyor.com/project/bblanchon/arduinojson/branch/6.x)\r\n[![Fuzzing Status](https://oss-fuzz-build-logs.storage.googleapis.com/badges/arduinojson.svg)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=1&q=proj:arduinojson)\r\n[![Coverage Status](https://coveralls.io/repos/github/bblanchon/ArduinoJson/badge.svg?branch=6.x)](https://coveralls.io/github/bblanchon/ArduinoJson?branch=6.x)\r\n[![GitHub stars](https://img.shields.io/github/stars/bblanchon/ArduinoJson?style=flat)](https://github.com/bblanchon/ArduinoJson/stargazers)\r\n\r\nArduinoJson is a C++ JSON library for Arduino and IoT (Internet Of Things).\r\n\r\n## Features\r\n\r\n* [JSON deserialization](https://arduinojson.org/v6/api/json/deserializejson/?utm_source=github&utm_medium=readme)\r\n    * [Optionally decodes UTF-16 escape sequences to UTF-8](https://arduinojson.org/v6/api/config/decode_unicode/?utm_source=github&utm_medium=readme)\r\n    * [Optionally stores links to the input buffer (zero-copy)](https://arduinojson.org/v6/api/json/deserializejson/?utm_source=github&utm_medium=readme)\r\n    * [Optionally supports comments in the input](https://arduinojson.org/v6/api/config/enable_comments/?utm_source=github&utm_medium=readme)\r\n    * [Optionally filters the input to keep only desired values](https://arduinojson.org/v6/api/json/deserializejson/?utm_source=github&utm_medium=readme#filtering)\r\n    * Supports single quotes as a string delimiter\r\n    * Compatible with [NDJSON](http://ndjson.org/) and [JSON Lines](https://jsonlines.org/)\r\n* [JSON serialization](https://arduinojson.org/v6/api/json/serializejson/?utm_source=github&utm_medium=readme)\r\n    * [Can write to a buffer or a stream](https://arduinojson.org/v6/api/json/serializejson/?utm_source=github&utm_medium=readme)\r\n    * [Optionally indents the document (prettified JSON)](https://arduinojson.org/v6/api/json/serializejsonpretty/?utm_source=github&utm_medium=readme)\r\n* [MessagePack serialization](https://arduinojson.org/v6/api/msgpack/serializemsgpack/?utm_source=github&utm_medium=readme)\r\n* [MessagePack deserialization](https://arduinojson.org/v6/api/msgpack/deserializemsgpack/?utm_source=github&utm_medium=readme)\r\n* Efficient\r\n    * [Twice smaller than the \"official\" Arduino_JSON library](https://arduinojson.org/2019/11/19/arduinojson-vs-arduino_json/?utm_source=github&utm_medium=readme)\r\n    * [Almost 10% faster than the \"official\" Arduino_JSON library](https://arduinojson.org/2019/11/19/arduinojson-vs-arduino_json/?utm_source=github&utm_medium=readme)\r\n    * [Consumes roughly 10% less RAM than the \"official\" Arduino_JSON library](https://arduinojson.org/2019/11/19/arduinojson-vs-arduino_json/?utm_source=github&utm_medium=readme)\r\n    * [Fixed memory allocation, no heap fragmentation](https://arduinojson.org/v6/api/jsondocument/?utm_source=github&utm_medium=readme)\r\n    * [Optionally works without heap memory (zero malloc)](https://arduinojson.org/v6/api/staticjsondocument/?utm_source=github&utm_medium=readme)\r\n    * Deduplicates strings\r\n* Versatile\r\n    * Supports [custom allocators (to use external RAM chip, for example)](https://arduinojson.org/v6/how-to/use-external-ram-on-esp32/?utm_source=github&utm_medium=readme)\r\n    * Supports [`String`](https://arduinojson.org/v6/api/config/enable_arduino_string/?utm_source=github&utm_medium=readme), [`std::string`](https://arduinojson.org/v6/api/config/enable_std_string/?utm_source=github&utm_medium=readme) and [`std::string_view`](https://arduinojson.org/v6/api/config/enable_string_view/?utm_source=github&utm_medium=readme)\r\n    * Supports [`Stream`](https://arduinojson.org/v6/api/config/enable_arduino_stream/?utm_source=github&utm_medium=readme) and [`std::istream`/`std::ostream`](https://arduinojson.org/v6/api/config/enable_std_stream/?utm_source=github&utm_medium=readme)\r\n    * Supports [Flash strings](https://arduinojson.org/v6/api/config/enable_progmem/?utm_source=github&utm_medium=readme)\r\n    * Supports [custom readers](https://arduinojson.org/v6/api/json/deserializejson/?utm_source=github&utm_medium=readme#custom-reader) and [custom writers](https://arduinojson.org/v6/api/json/serializejson/?utm_source=github&utm_medium=readme#custom-writer)\r\n    * Supports [custom converters](https://arduinojson.org/news/2021/05/04/version-6-18-0/?utm_source=github&utm_medium=readme)\r\n* Portable\r\n    * Usable on any C++ project (not limited to Arduino)\r\n    * Compatible with C++98, C++11, C++14 and C++17\r\n    * Zero warnings with `-Wall -Wextra -pedantic` and `/W4`\r\n    * [Header-only library](https://en.wikipedia.org/wiki/Header-only)\r\n    * Works with virtually any board\r\n        * Arduino boards: [Uno](https://amzn.to/38aL2ik), [Due](https://amzn.to/36YkWi2), [Micro](https://amzn.to/35WkdwG), [Nano](https://amzn.to/2QTvwRX), [Mega](https://amzn.to/36XWhuf), [Yun](https://amzn.to/30odURc), [Leonardo](https://amzn.to/36XWjlR)...\r\n        * Espressif chips: [ESP8266](https://amzn.to/36YluV8), [ESP32](https://amzn.to/2G4pRCB)\r\n        * Lolin (WeMos) boards: [D1 mini](https://amzn.to/2QUpz7q), [D1 Mini Pro](https://amzn.to/36UsGSs)...\r\n        * Teensy boards: [4.0](https://amzn.to/30ljXGq), [3.2](https://amzn.to/2FT0EuC), [2.0](https://amzn.to/2QXUMXj) \r\n        * Particle boards: [Argon](https://amzn.to/2FQHa9X), [Boron](https://amzn.to/36WgLUd), [Electron](https://amzn.to/30vEc4k), [Photon](https://amzn.to/387F9Cd)...\r\n        * Texas Instruments boards: [MSP430](https://amzn.to/30nJWgg)...\r\n    * Tested on all major development environments\r\n        * [Arduino IDE](https://www.arduino.cc/en/Main/Software)\r\n        * [Atmel Studio](http://www.atmel.com/microsite/atmel-studio/)\r\n        * [Atollic TrueSTUDIO](https://atollic.com/truestudio/)\r\n        * [Energia](http://energia.nu/)\r\n        * [IAR Embedded Workbench](https://www.iar.com/iar-embedded-workbench/)\r\n        * [Keil uVision](http://www.keil.com/)\r\n        * [MPLAB X IDE](http://www.microchip.com/mplab/mplab-x-ide)\r\n        * [Particle](https://www.particle.io/)\r\n        * [PlatformIO](http://platformio.org/)\r\n        * [Sloeber plugin for Eclipse](https://eclipse.baeyens.it/)\r\n        * [Visual Micro](http://www.visualmicro.com/)\r\n        * [Visual Studio](https://www.visualstudio.com/)\r\n    * [Even works with online compilers like wandbox.org](https://wandbox.org/permlink/RlZSKy17DjJ6HcdN)\r\n    * [CMake friendly](https://arduinojson.org/v6/how-to/use-arduinojson-with-cmake/?utm_source=github&utm_medium=readme)\r\n* Well designed\r\n    * [Elegant API](http://arduinojson.org/v6/example/?utm_source=github&utm_medium=readme)\r\n    * [Thread-safe](https://en.wikipedia.org/wiki/Thread_safety)\r\n    * Self-contained (no external dependency)\r\n    * `const` friendly\r\n    * [`for` friendly](https://arduinojson.org/v6/api/jsonobject/begin_end/?utm_source=github&utm_medium=readme)\r\n    * [TMP friendly](https://en.wikipedia.org/wiki/Template_metaprogramming)\r\n    * Handles [integer overflows](https://arduinojson.org/v6/api/jsonvariant/as/?utm_source=github&utm_medium=readme#integer-overflows)\r\n* Well tested\r\n    * [Unit test coverage close to 100%](https://coveralls.io/github/bblanchon/ArduinoJson?branch=6.x)\r\n    * Continuously tested on\r\n        * [Visual Studio 2010, 2012, 2013, 2015, 2017, 2019](https://ci.appveyor.com/project/bblanchon/arduinojson/branch/6.x)\r\n        * [GCC 4.4, 4.6, 4.7, 4.8, 4.9, 5, 6, 7, 8, 9, 10](https://github.com/bblanchon/ArduinoJson/actions?query=workflow%3A%22Continuous+Integration%22)\r\n        * [Clang 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 5.0, 6.0, 7, 8, 9, 10](https://github.com/bblanchon/ArduinoJson/actions?query=workflow%3A%22Continuous+Integration%22)\r\n    * [Continuously fuzzed with Google OSS Fuzz](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=1&q=proj:arduinojson)\r\n    * Passes all default checks of [clang-tidy](https://releases.llvm.org/10.0.0/tools/clang/tools/extra/docs/clang-tidy/)\r\n* Well documented\r\n    * [Tutorials](https://arduinojson.org/v6/doc/deserialization/?utm_source=github&utm_medium=readme)\r\n    * [Examples](https://arduinojson.org/v6/example/?utm_source=github&utm_medium=readme)\r\n    * [How-tos](https://arduinojson.org/v6/example/?utm_source=github&utm_medium=readme)\r\n    * [FAQ](https://arduinojson.org/v6/faq/?utm_source=github&utm_medium=readme)\r\n    * [Troubleshooter](https://arduinojson.org/v6/troubleshooter/?utm_source=github&utm_medium=readme)\r\n    * [Book](https://arduinojson.org/book/?utm_source=github&utm_medium=readme)\r\n    * [Changelog](CHANGELOG.md)\r\n* Vibrant user community\r\n    * Most popular of all Arduino libraries on [GitHub](https://github.com/search?o=desc&q=arduino+library&s=stars&type=Repositories)\r\n    * [Used in hundreds of projects](https://www.hackster.io/search?i=projects&q=arduinojson)\r\n    * [Responsive support](https://github.com/bblanchon/ArduinoJson/issues?q=is%3Aissue+is%3Aclosed)\r\n\r\n## Quickstart\r\n\r\n### Deserialization\r\n\r\nHere is a program that parses a JSON document with ArduinoJson.\r\n\r\n```c++\r\nchar json[] = \"{\\\"sensor\\\":\\\"gps\\\",\\\"time\\\":1351824120,\\\"data\\\":[48.756080,2.302038]}\";\r\n\r\nDynamicJsonDocument doc(1024);\r\ndeserializeJson(doc, json);\r\n\r\nconst char* sensor = doc[\"sensor\"];\r\nlong time          = doc[\"time\"];\r\ndouble latitude    = doc[\"data\"][0];\r\ndouble longitude   = doc[\"data\"][1];\r\n```\r\n\r\nSee the [tutorial on arduinojson.org](https://arduinojson.org/doc/decoding/?utm_source=github&utm_medium=readme)\r\n\r\n### Serialization\r\n\r\nHere is a program that generates a JSON document with ArduinoJson:\r\n\r\n```c++\r\nDynamicJsonDocument doc(1024);\r\n\r\ndoc[\"sensor\"] = \"gps\";\r\ndoc[\"time\"]   = 1351824120;\r\ndoc[\"data\"][0] = 48.756080;\r\ndoc[\"data\"][1] = 2.302038;\r\n\r\nserializeJson(doc, Serial);\r\n// This prints:\r\n// {\"sensor\":\"gps\",\"time\":1351824120,\"data\":[48.756080,2.302038]}\r\n```\r\n\r\nSee the [tutorial on arduinojson.org](https://arduinojson.org/doc/encoding/?utm_source=github&utm_medium=readme)\r\n\r\n## Support the project ❤️\r\n\r\nDo you like this library?  \r\nPlease [star this project on GitHub](https://github.com/bblanchon/ArduinoJson/stargazers)!\r\n\r\nWhat? You don't like it but you *love* it?  \r\nYou can support the project by [purchasing my book](https://arduinojson.org/book/?utm_source=github&utm_medium=readme).\r\nAlternatively, you can make a recurring donation via [GitHub Sponsors](https://github.com/sponsors/bblanchon).  \r\n",
  "allVersions": [
    "6.18.3",
    "6.18.2",
    "6.18.1",
    "6.18.0",
    "6.17.3",
    "6.17.2",
    "6.17.1",
    "6.17.0",
    "6.16.1",
    "6.16.0",
    "6.15.2",
    "6.15.1",
    "6.15.0",
    "6.14.1",
    "6.14.0",
    "6.13.0",
    "6.12.0",
    "6.11.5",
    "6.11.4",
    "6.11.3",
    "6.11.2",
    "6.11.0",
    "6.10.1",
    "6.10.0",
    "6.9.1",
    "5.13.5",
    "5.13.4",
    "5.13.3",
    "5.11.2",
    "5.11.1",
    "5.8.4"
  ]
}