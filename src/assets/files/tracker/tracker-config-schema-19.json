{
	"$schema": "https://particle.io/draft-07/schema#",
	"$id": "https://github.com/particle-iot/tracker-edge/releases/tag/v19",
	"type": "object",
	"title": "Configuration schema for the Tracker Edge firmware from Particle",
	"$comment": "the $id field doesn't strictly mean that this schema only works with that release of tracker-edge, rather, this means that the schema here was created for that version of tracker-edge, and will work on earlier and later versions until a new schema is required.  This means that schema v10 will work with firmware v11, as long as there's no added features in v11 not already mentioned here",
	"description": "",
	"required": [
		"location"
	],
	"properties": {
		"location": {
			"$id": "#/properties/location",
			"type": "object",
			"title": "Location",
			"description": "Configuration for published locations.",
			"default": {},
			"examples": [
				{
					"interval_min": 10.0,
					"interval_max": 120.0,
					"min_publish": true,
					"lock_trigger": false,
					"radius": 50.0
				}
			],
			"required": [
				"radius",
				"interval_min",
				"interval_max",
				"min_publish",
				"lock_trigger"
			],
			"properties": {
				"radius": {
					"$id": "#/properties/location/properties/radius",
					"type": "number",
					"title": "Radius Trigger (meters)",
					"description": "Publish location if it has moved this many meters from the last publish. 0 for unused.",
					"default": 0.0,
					"examples": [
						5.0
					],
					"minimum": 0.0,
					"maximum": 100000.0
				},
				"interval_min": {
					"$id": "#/properties/location/properties/interval_min",
					"type": "integer",
					"title": "Maximum location update frequency (every n seconds)",
					"description": "Never publish location information more often than this setting.",
					"default": 900,
					"examples": [
						1000
					],
					"minimum": 0
				},
				"interval_max": {
					"$id": "#/properties/location/properties/interval_max",
					"type": "integer",
					"title": "Minimum location update frequency (every n seconds)",
					"description": "Always publish location, when possible, this often",
					"default": 3600,
					"examples": [
						7200
					],
					"minimum": 0
				},
				"min_publish": {
					"$id": "#/properties/location/properties/min_publish",
					"type": "boolean",
					"title": "Minimize Data",
					"description": "If enabled, publish minimal location with only latitude and longitude. If disabled, publish additional information including speed, heading, etc.",
					"default": false,
					"examples": [
						true
					]
				},
				"lock_trigger": {
					"$id": "#/properties/location/properties/lock_trigger",
					"type": "boolean",
					"title": "Publish on GPS lock",
					"description": "If enabled, a change in GPS lock status will trigger a location publish, which will happen after the Minimum Interval has passed.",
					"default": true,
					"examples": [
						false
					]
				},
				"loc_ack": {
					"$id": "#/properties/location/properties/loc_ack",
					"type": "boolean",
					"title": "Acknowledge location publishes",
					"description": "If enabled, the device will expect cloud acknowledgement of location publishes and retry sending if cloud is unresponsive.  If disabled, the device will publish location messages and not account for cloud acknowledgement (fire-and-forget).  See https://docs.particle.io/reference/device-cloud/api/#tracker-configuration-events for more information",
					"default": true,
					"minimumFirmwareVersion": 11,
					"examples": [
						true
					]
				},
				"enhance_loc": {
					"$id": "#/properties/location/properties/enhance_loc",
					"type": "boolean",
					"title": "Enhanced location",
					"description": "If enabled, the cloud will process and send enhanced geolocation events based on GNSS, WiFi access points, and cellular tower triangulation.",
					"default": true,
					"minimumFirmwareVersion": 12,
					"examples": [
						true
					]
				},
				"tower": {
					"$id": "#/properties/location/properties/tower",
					"type": "boolean",
					"title": "Publish cellular tower data",
					"description": "If enabled, the device will collect nearby cellular towers and publish details with location events.",
					"default": true,
					"minimumFirmwareVersion": 12,
					"examples": [
						true
					]
				},
				"gnss": {
					"$id": "#/properties/location/properties/gnss",
					"type": "boolean",
					"title": "Publish GNSS data",
					"description": "If enabled, the device will utilize the GNSS module to generate and publish geolocation coordinates with location events.",
					"default": true,
					"minimumFirmwareVersion": 12,
					"examples": [
						true
					]
				},
				"wps": {
					"$id": "#/properties/location/properties/wps",
					"type": "boolean",
					"title": "Publish WiFi access point data",
					"description": "If enabled, the device will collect nearby WiFi access points and publish details with location events.",
					"default": true,
					"minimumFirmwareVersion": 12,
					"examples": [
						true
					]
				},
				"loc_cb": {
					"$id": "#/properties/location/properties/loc_cb",
					"type": "boolean",
					"title": "Call back to device with enhanced location data",
					"description": "If enabled, the cloud will send an enhanced geolocation to the device based on GNSS, WiFi access points, and cellular tower triangulation.",
					"default": false,
					"minimumFirmwareVersion": 12,
					"examples": [
						true
					]
				},
				"satdiag": {
					"$id": "#/properties/location/properties/diag",
					"type": "boolean",
					"title": "Publish extra information to assist with debugging GNSS",
					"description": "If enabled, publish GNSS constellation counts and C/NO characteristics.",
					"default": false,
					"minimumFirmwareVersion": 19,
					"examples": [
						true
					]
				}
			}
		},
		"store": {
			"$id": "#/properties/store",
			"type": "object",
			"title": "Store and Forward",
			"description": "Configuration for Store and Forward.",
			"default": {},
			"minimumFirmwareVersion": 18,
			"properties": {
				"enable": {
					"$id": "#/properties/store/properties/enable",
					"type": "boolean",
					"title": "Store and Forward",
					"description": "If enabled, the device will store unpublished location publishes to the local filesystem when offline and publish them when back online.",
					"default": true,
					"examples": [
						true
					]
				},
				"quota": {
					"$id": "#/properties/store/properties/quota",
					"type": "integer",
					"title": "Storage Size Limit",
					"description": "Size in kilobytes to limit storage on the local filesytem for unpublished messages.",
					"default": 64,
					"minimum": 0,
					"maximum": 4000
				},
				"policy": {
					"$id": "#/properties/store/properties/policy",
					"type": "string",
					"title": "Discard Policy",
					"description": "When storage size limit is exceeded drop_old deletes the oldest logged publish to retry, drop_new deletes the newest",
					"default": "drop_old",
					"enum": [
						"drop_old",
						"drop_new"
					]
				}
			}
		},
		"imu_trig": {
			"$id": "#/properties/imu_trig",
			"type": "object",
			"title": "Motion",
			"description": "Configuration for motion detection.",
			"default": {},
			"properties": {
				"motion": {
					"$id": "#/properties/imu_trig/properties/motion",
					"type": "string",
					"title": "Movement Sensitivity",
					"description": "If not disabled, device will publish location if it detects movement. Low sensitivity requires a large motion to publish.",
					"default": "disable",
					"enum": [
						"disable",
						"low",
						"medium",
						"high"
					]
				},
				"high_g": {
					"$id": "#/properties/imu_trig/properties/accel",
					"type": "string",
					"title": "High-G",
					"description": "If enabled, device will publish location if it detects a High-G acceleration event.",
					"default": "disable",
					"enum": [
						"disable",
						"enable"
					]
				}
			}
		},
		"temp_trig": {
			"$id": "#/properties/temp_trig",
			"type": "object",
			"title": "Temperature",
			"description": "Configuration for temperature thresholding.",
			"default": {},
			"properties": {
				"high": {
					"$id": "#/properties/temp_trig/high",
					"type": "number",
					"title": "High temperature threshold (Celsius)",
					"description": "Publish location once if temperature is greater than or equal to threshold. The temperature will be required to be less than the high threshold minus hysteresis to clear event, when latching, or publish again when latching disabled.  Hysteresis must be valid.",
					"default": 150.0,
					"examples": [
						65.0
					],
					"minimum": -40.0,
					"maximum": 150.0
				},
				"high_en": {
					"$id": "#/properties/temp_trig/high_en",
					"type": "boolean",
					"title": "High temperature monitoring",
					"description": "If enabled, compare current temperature against high threshold.",
					"default": false,
					"examples": [
						true
					]
				},
				"high_latch": {
					"$id": "#/properties/temp_trig/high_latch",
					"type": "boolean",
					"title": "High temperature event latching.",
					"description": "Enable latching of high temperature trigger event until temperature has fallen below hysteresis level; otherwise, generate one high temperature event.",
					"default": false,
					"examples": [
						true
					]
				},
				"low": {
					"$id": "#/properties/temp_trig/low",
					"type": "number",
					"title": "Low temperature threshold (Celsius)",
					"description": "Publish location once if temperature is less than or equal to threshold. The temperature will be required to be more than the low threshold plus hysteresis to clear event, when latching, or publish again when latching disabled. Hysteresis must be valid.",
					"default": -40.0,
					"examples": [
						0.0
					],
					"minimum": -40.0,
					"maximum": 150.0
				},
				"low_en": {
					"$id": "#/properties/temp_trig/low_en",
					"type": "boolean",
					"title": "Low temperature monitoring.",
					"description": "If enabled, compare current temperature against low threshold.",
					"default": false,
					"examples": [
						true
					]
				},
				"low_latch": {
					"$id": "#/properties/temp_trig/low_latch",
					"type": "boolean",
					"title": "Low temperature event latching.",
					"description": "Enable latching of low temperature trigger event until temperature has risen above hysteresis level; otherwise, generate one low temperature event.",
					"default": false,
					"examples": [
						true
					]
				},
				"hyst": {
					"$id": "#/properties/temp_trig/hyst",
					"type": "number",
					"title": "Hysteresis temperature threshold (Celsius)",
					"description": "Hysteresis threshold applied to high and low thresholds to allow further temperature publishes. 0.0 for unused.",
					"default": 0.0,
					"examples": [
						10.0
					],
					"minimum": 0.0,
					"maximum": 190.0
				}
			}
		},
		"rgb": {
			"$id": "#/properties/rgb",
			"type": "object",
			"title": "RGB LED",
			"description": "Configuration for the Particle RGB LED.",
			"default": {},
			"examples": [
				{
					"type": "tracker"
				}
			],
			"required": [
				"type"
			],
			"properties": {
				"type": {
					"$id": "#/properties/rgb/properties/type",
					"type": "string",
					"title": "Type",
					"description": "Can control the LED to be off, default Particle RGB behavior or custom tracker behavior.",
					"default": "particle",
					"enum": [
						"off",
						"particle",
						"tracker"
					]
				}
			}
		},
		"sleep": {
			"$id": "#/properties/sleep",
			"type": "object",
			"title": "Sleep",
			"description": "Configuration for low power operation. Supported in Asset Tracker Firmware v10 and later",
			"default": {},
			"minimumFirmwareVersion": 10,
			"properties": {
				"mode": {
					"$id": "#/properties/sleep/properties/mode",
					"type": "string",
					"title": "Sleep Mode",
					"description": "If enabled, device will operate with low power states during inactive periods.  The device will be inaccessible while in low power states",
					"default": "disable",
					"enum": [
						"disable",
						"enable"
					]
				},
				"exe_min": {
					"$id": "#/properties/sleep/properties/exe_min",
					"type": "number",
					"title": "Post Publish Execution Time",
					"description": "Minimum duration, in seconds, of guaranteed execution time after publishing and before entering sleep.",
					"default": 10.0,
					"examples": [
						10.0
					],
					"minimum": 5.0
				},
				"conn_max": {
					"$id": "#/properties/sleep/properties/conn_max",
					"type": "number",
					"title": "Maximum Connecting Time",
					"description": "Maximum duration, in seconds, to wait for a cellular connected state and GNSS lock before publish.",
					"default": 90.0,
					"examples": [
						120.0
					],
					"minimum": 30.0
				}
			}
		},
		"tracker": {
			"$id": "#/properties/tracker",
			"type": "object",
			"title": "Tracker",
			"description": "Configuration for Tracker specific settings",
			"default": {},
			"properties": {
				"usb_cmd": {
					"$id": "#/properties/tracker/properties/usb_cmd",
					"type": "boolean",
					"title": "USB Command",
					"description": "If enabled, device will parse incoming commands on USB.",
					"default": true,
					"examples": [
						false
					]
				}
			}
		},
		"monitoring": {
			"$id": "#/properties/monitoring",
			"type": "object",
			"title": "Device Monitoring",
			"description": "Configuration for device monitoring specific settings",
			"default": {},
			"minimumFirmwareVersion": 18,
			"properties": {
				"device_monitor": {
					"$id": "#/properties/monitoring/device_monitor",
					"type": "boolean",
					"title": "Device Monitoring",
					"description": "If enabled, device will publish metrics and fault details.",
					"default": false,
					"examples": [
						false
					]
				}
			}
		},
		"geofence": {
			"$id": "#/properties/geofence",
			"type": "object",
			"title": "Geofence",
			"description": "Configuration for geofencing settings",
			"default": {},
			"minimumFirmwareVersion": 17,
			"deviceLevelOnly": true,
			"properties": {
				"interval": {
					"$id": "#/properties/geofence/interval",
					"type": "integer",
					"title": "Wake interval (every n seconds)",
					"description": "If device is configured for sleep, periodic interval to wake in order to evaluate geofences.",
					"default": 0,
					"examples": [
						900
					],
					"minimum": 0
				},
				"zone1": {
					"$id": "#/properties/geofence/zone1",
					"type": "object",
					"title": "Zone 1",
					"description": "Configuration for Zone 1 settings.",
					"default": {},
					"properties": {
						"enable": {
							"$id": "#/properties/geofence/zone1/enable",
							"type": "boolean",
							"title": "Enable",
							"description": "If enabled, the zone will be evaluated by the device.",
							"default": false,
							"examples": [
								true
							]
						},
						"shape_type": {
							"$id": "#/properties/geofence/zone1/shape_type",
							"type": "string",
							"title": "Shape",
							"description": "Shape of the geofence.",
							"default": "circular",
							"enum": [
								"circular"
							]
						},
						"lat": {
							"$id": "#/properties/geofence/zone1/lat",
							"type": "number",
							"title": "Latitude (Degrees)",
							"description": "Latitudinal coordinate for the center point of the geofence.",
							"default": 0,
							"examples": [
								34
							],
							"minimum": -90,
							"maximum": 90
						},
						"lon": {
							"$id": "#/properties/geofence/zone1/lon",
							"type": "number",
							"title": "Longitude (Degrees)",
							"description": "Longitudinal coordinate for the center point of the geofence.",
							"default": 0,
							"examples": [
								121
							],
							"minimum": -180,
							"maximum": 180
						},
						"radius": {
							"$id": "#/properties/geofence/zone1/radius",
							"type": "number",
							"title": "Radius (Meters)",
							"description": "Defines circular area covered by the geofence.",
							"default": 0,
							"examples": [
								1000
							],
							"minimum": 0,
							"maximum": 100000
						},
						"inside": {
							"$id": "#/properties/geofence/zone1/inside",
							"type": "boolean",
							"title": "Publish inside zone",
							"description": "If enabled, publish event when the device is inside the zone.",
							"default": false,
							"examples": [
								true
							]
						},
						"outside": {
							"$id": "#/properties/geofence/zone1/outside",
							"type": "boolean",
							"title": "Publish outside zone",
							"description": "If enabled, publish event when the device is outside the zone.",
							"default": false,
							"examples": [
								true
							]
						},
						"enter": {
							"$id": "#/properties/geofence/zone1/enter",
							"type": "boolean",
							"title": "Publish on enter zone",
							"description": "If enabled, publish event when the device has entered the zone.",
							"default": false,
							"examples": [
								true
							]
						},
						"exit": {
							"$id": "#/properties/geofence/zone1/exit",
							"type": "boolean",
							"title": "Publish on exit zone",
							"description": "If enabled, publish event when the device has exited the zone.",
							"default": false,
							"examples": [
								true
							]
						},
						"verif": {
							"$id": "#/properties/geofence/zone1/verif",
							"type": "integer",
							"title": "Time Before Trigger (Seconds)",
							"description": "Amount of time the device is inside or outside the zone before triggering an event.",
							"default": 0,
							"examples": [
								1
							],
							"minimum": 0
						}
					}
				},
				"zone2": {
					"$id": "#/properties/geofence/zone2",
					"type": "object",
					"title": "Zone 2",
					"description": "Configuration for Zone 2 settings.",
					"default": {},
					"properties": {
						"enable": {
							"$id": "#/properties/geofence/zone2/enable",
							"type": "boolean",
							"title": "Enable",
							"description": "If enabled, the zone will be evaluated by the device.",
							"default": false,
							"examples": [
								true
							]
						},
						"shape_type": {
							"$id": "#/properties/geofence/zone2/shape_type",
							"type": "string",
							"title": "Shape",
							"description": "Shape of the geofence.",
							"default": "circular",
							"enum": [
								"circular"
							]
						},
						"lat": {
							"$id": "#/properties/geofence/zone2/lat",
							"type": "number",
							"title": "Latitude (Degrees)",
							"description": "Latitudinal coordinate for the center point of the geofence.",
							"default": 0,
							"examples": [
								34
							],
							"minimum": -90,
							"maximum": 90
						},
						"lon": {
							"$id": "#/properties/geofence/zone2/lon",
							"type": "number",
							"title": "Longitude (Degrees)",
							"description": "Longitudinal coordinate for the center point of the geofence.",
							"default": 0,
							"examples": [
								121
							],
							"minimum": -180,
							"maximum": 180
						},
						"radius": {
							"$id": "#/properties/geofence/zone2/radius",
							"type": "number",
							"title": "Radius (Meters)",
							"description": "Defines circular area covered by the geofence.",
							"default": 0,
							"examples": [
								1000
							],
							"minimum": 0,
							"maximum": 100000
						},
						"inside": {
							"$id": "#/properties/geofence/zone2/inside",
							"type": "boolean",
							"title": "Publish inside zone",
							"description": "If enabled, publish event when the device is inside the zone.",
							"default": false,
							"examples": [
								true
							]
						},
						"outside": {
							"$id": "#/properties/geofence/zone2/outside",
							"type": "boolean",
							"title": "Publish outside zone",
							"description": "If enabled, publish event when the device is outside the zone.",
							"default": false,
							"examples": [
								true
							]
						},
						"enter": {
							"$id": "#/properties/geofence/zone2/enter",
							"type": "boolean",
							"title": "Publish on enter zone",
							"description": "If enabled, publish event when the device has entered the zone.",
							"default": false,
							"examples": [
								true
							]
						},
						"exit": {
							"$id": "#/properties/geofence/zone2/exit",
							"type": "boolean",
							"title": "Publish on exit zone",
							"description": "If enabled, publish event when the device has exited the zone.",
							"default": false,
							"examples": [
								true
							]
						},
						"verif": {
							"$id": "#/properties/geofence/zone2/verif",
							"type": "integer",
							"title": "Time Before Trigger (Seconds)",
							"description": "Amount of time the device is inside or outside the zone before triggering an event.",
							"default": 0,
							"examples": [
								1
							],
							"minimum": 0
						}
					}
				},
				"zone3": {
					"$id": "#/properties/geofence/zone3",
					"type": "object",
					"title": "Zone 3",
					"description": "Configuration for Zone 3 settings.",
					"default": {},
					"properties": {
						"enable": {
							"$id": "#/properties/geofence/zone3/enable",
							"type": "boolean",
							"title": "Enable",
							"description": "If enabled, the zone will be evaluated by the device.",
							"default": false,
							"examples": [
								true
							]
						},
						"shape_type": {
							"$id": "#/properties/geofence/zone3/shape_type",
							"type": "string",
							"title": "Shape",
							"description": "Shape of the geofence.",
							"default": "circular",
							"enum": [
								"circular"
							]
						},
						"lat": {
							"$id": "#/properties/geofence/zone3/lat",
							"type": "number",
							"title": "Latitude (Degrees)",
							"description": "Latitudinal coordinate for the center point of the geofence.",
							"default": 0,
							"examples": [
								34
							],
							"minimum": -90,
							"maximum": 90
						},
						"lon": {
							"$id": "#/properties/geofence/zone3/lon",
							"type": "number",
							"title": "Longitude (Degrees)",
							"description": "Longitudinal coordinate for the center point of the geofence.",
							"default": 0,
							"examples": [
								121
							],
							"minimum": -180,
							"maximum": 180
						},
						"radius": {
							"$id": "#/properties/geofence/zone3/radius",
							"type": "number",
							"title": "Radius (Meters)",
							"description": "Defines circular area covered by the geofence.",
							"default": 0,
							"examples": [
								1000
							],
							"minimum": 0,
							"maximum": 100000
						},
						"inside": {
							"$id": "#/properties/geofence/zone3/inside",
							"type": "boolean",
							"title": "Publish inside zone",
							"description": "If enabled, publish event when the device is inside the zone.",
							"default": false,
							"examples": [
								true
							]
						},
						"outside": {
							"$id": "#/properties/geofence/zone3/outside",
							"type": "boolean",
							"title": "Publish outside zone",
							"description": "If enabled, publish event when the device is outside the zone.",
							"default": false,
							"examples": [
								true
							]
						},
						"enter": {
							"$id": "#/properties/geofence/zone3/enter",
							"type": "boolean",
							"title": "Publish on enter zone",
							"description": "If enabled, publish event when the device has entered the zone.",
							"default": false,
							"examples": [
								true
							]
						},
						"exit": {
							"$id": "#/properties/geofence/zone3/exit",
							"type": "boolean",
							"title": "Publish on exit zone",
							"description": "If enabled, publish event when the device has exited the zone.",
							"default": false,
							"examples": [
								true
							]
						},
						"verif": {
							"$id": "#/properties/geofence/zone3/verif",
							"type": "integer",
							"title": "Time Before Trigger (Seconds)",
							"description": "Amount of time the device is inside or outside the zone before triggering an event.",
							"default": 0,
							"examples": [
								1
							],
							"minimum": 0
						}
					}
				},
				"zone4": {
					"$id": "#/properties/geofence/zone4",
					"type": "object",
					"title": "Zone 4",
					"description": "Configuration for Zone 1 settings.",
					"default": {},
					"properties": {
						"enable": {
							"$id": "#/properties/geofence/zone4/enable",
							"type": "boolean",
							"title": "Enable",
							"description": "If enabled, the zone will be evaluated by the device.",
							"default": false,
							"examples": [
								true
							]
						},
						"shape_type": {
							"$id": "#/properties/geofence/zone4/shape_type",
							"type": "string",
							"title": "Shape",
							"description": "Shape of the geofence.",
							"default": "circular",
							"enum": [
								"circular"
							]
						},
						"lat": {
							"$id": "#/properties/geofence/zone4/lat",
							"type": "number",
							"title": "Latitude (Degrees)",
							"description": "Latitudinal coordinate for the center point of the geofence.",
							"default": 0,
							"examples": [
								34
							],
							"minimum": -90,
							"maximum": 90
						},
						"lon": {
							"$id": "#/properties/geofence/zone4/lon",
							"type": "number",
							"title": "Longitude (Degrees)",
							"description": "Longitudinal coordinate for the center point of the geofence.",
							"default": 0,
							"examples": [
								121
							],
							"minimum": -180,
							"maximum": 180
						},
						"radius": {
							"$id": "#/properties/geofence/zone4/radius",
							"type": "number",
							"title": "Radius (Meters)",
							"description": "Defines circular area covered by the geofence.",
							"default": 0,
							"examples": [
								1000
							],
							"minimum": 0,
							"maximum": 100000
						},
						"inside": {
							"$id": "#/properties/geofence/zone4/inside",
							"type": "boolean",
							"title": "Publish inside zone",
							"description": "If enabled, publish event when the device is inside the zone.",
							"default": false,
							"examples": [
								true
							]
						},
						"outside": {
							"$id": "#/properties/geofence/zone4/outside",
							"type": "boolean",
							"title": "Publish outside zone",
							"description": "If enabled, publish event when the device is outside the zone.",
							"default": false,
							"examples": [
								true
							]
						},
						"enter": {
							"$id": "#/properties/geofence/zone4/enter",
							"type": "boolean",
							"title": "Publish on enter zone",
							"description": "If enabled, publish event when the device has entered the zone.",
							"default": false,
							"examples": [
								true
							]
						},
						"exit": {
							"$id": "#/properties/geofence/zone4/exit",
							"type": "boolean",
							"title": "Publish on exit zone",
							"description": "If enabled, publish event when the device has exited the zone.",
							"default": false,
							"examples": [
								true
							]
						},
						"verif": {
							"$id": "#/properties/geofence/zone4/verif",
							"type": "integer",
							"title": "Time Before Trigger (Seconds)",
							"description": "Amount of time the device is inside or outside the zone before triggering an event.",
							"default": 0,
							"examples": [
								1
							],
							"minimum": 0
						}
					}
				}
			}
		}
	},
	"additionalProperties": false
}
