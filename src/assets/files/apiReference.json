{
  "l2": {
    "asset-ota": "Asset OTA",
    "battery-voltage": "Battery voltage",
    "bluetooth-le-ble": "Bluetooth LE (BLE)",
    "can-canbus": "CAN (canbus)",
    "cellular": "Cellular",
    "checking-for-features": "Checking for features",
    "chrono-literals": "Chrono Literals",
    "cloud-functions": "Cloud functions",
    "debugging": "Debugging",
    "device-identifiers": "Device identifiers",
    "eeprom": "EEPROM",
    "ethernet": "Ethernet",
    "file-system": "File system",
    "fuelgauge": "FuelGauge",
    "global-object-constructors": "Global object constructors",
    "input-output": "Input/Output",
    "input-output-advanced": "Input/Output - Advanced",
    "interrupts": "Interrupts",
    "introduction": "Introduction",
    "ipaddress": "IPAddress",
    "json": "JSON",
    "keyboard": "Keyboard",
    "language-arduino-compatibility": "Language - Arduino Compatibility",
    "language-syntax": "Language syntax",
    "led-signaling": "LED Signaling",
    "ledger": "Ledger",
    "ledgerdata": "LedgerData",
    "logging": "Logging",
    "low-level-input-output": "Low level input/output",
    "macros": "Macros",
    "map": "Map",
    "math": "Math",
    "memory": "Memory",
    "mouse": "Mouse",
    "network": "Network",
    "nfc": "NFC",
    "ota-updates": "OTA Updates",
    "other-functions": "Other functions",
    "persistent-settings": "Persistent settings",
    "pmic-power-management-ic": "PMIC (Power Management IC)",
    "power-manager": "Power manager",
    "preprocessor": "Preprocessor",
    "random-numbers": "Random numbers",
    "retained-memory": "Retained memory",
    "rgb": "RGB",
    "serial": "Serial",
    "servo": "Servo",
    "sleep-classic-api": "sleep() [ Classic API ]",
    "sleep-sleep": "sleep() [ Sleep ]",
    "softap-http-pages": "SoftAP HTTP pages",
    "software-timers": "Software timers",
    "spi": "SPI",
    "stream-class": "Stream class",
    "string-class": "String class",
    "system-calls": "System calls",
    "system-events": "System events",
    "system-interrupts": "System interrupts",
    "system-modes": "System modes",
    "system-thread": "System thread",
    "tcpclient": "TCPClient",
    "tcpserver": "TCPServer",
    "threading": "Threading",
    "time": "Time",
    "udp": "UDP",
    "variant": "Variant",
    "variantarray": "VariantArray",
    "variantmap": "VariantMap",
    "vector": "Vector",
    "watchdog-application": "Watchdog - Application",
    "watchdog-hardware": "Watchdog - Hardware",
    "wifi": "WiFi",
    "wire-i2c": "Wire (I2C)"
  },
  "l3": {
    "introduction/getting-started": {
      "title": "Getting started - Introduction"
    },
    "introduction/navigation": {
      "title": "Navigation - Introduction"
    },
    "cloud-functions/overview-of-api-field-limits": {
      "title": "Overview of API field limits - Cloud functions"
    },
    "cloud-functions/particle-variable": {
      "title": "Particle.variable() - Cloud functions"
    },
    "cloud-functions/particle-variable-calculated": {
      "title": "Particle.variable() - calculated - Cloud functions"
    },
    "cloud-functions/particle-function": {
      "title": "Particle.function() - Cloud functions"
    },
    "cloud-functions/particle-publish": {
      "title": "Particle.publish() - Cloud functions"
    },
    "cloud-functions/particle-subscribe": {
      "title": "Particle.subscribe() - Cloud functions"
    },
    "cloud-functions/particle-unsubscribe": {
      "title": "Particle.unsubscribe() - Cloud functions"
    },
    "cloud-functions/particle-ledger": {
      "title": "Particle.ledger - Cloud functions"
    },
    "cloud-functions/particle-maxeventdatasize": {
      "title": "Particle.maxEventDataSize() - Cloud functions"
    },
    "cloud-functions/particle-maxvariablevaluesize": {
      "title": "Particle.maxVariableValueSize() - Cloud functions"
    },
    "cloud-functions/particle-maxfunctionargumentsize": {
      "title": "Particle.maxFunctionArgumentSize() - Cloud functions"
    },
    "cloud-functions/particle-publishvitals": {
      "title": "Particle.publishVitals() - Cloud functions"
    },
    "cloud-functions/particle-connect": {
      "title": "Particle.connect() - Cloud functions"
    },
    "cloud-functions/particle-connectioninterface": {
      "title": "Particle.connectionInterface() - Cloud functions"
    },
    "cloud-functions/particle-disconnect": {
      "title": "Particle.disconnect() - Cloud functions"
    },
    "cloud-functions/clear-session": {
      "title": "Clear session - Cloud functions"
    },
    "cloud-functions/particle-connected": {
      "title": "Particle.connected() - Cloud functions"
    },
    "cloud-functions/particle-disconnected": {
      "title": "Particle.disconnected() - Cloud functions"
    },
    "cloud-functions/particle-setdisconnectoptions": {
      "title": "Particle.setDisconnectOptions() - Cloud functions"
    },
    "cloud-functions/particle-keepalive": {
      "title": "Particle.keepAlive() - Cloud functions"
    },
    "cloud-functions/particle-process": {
      "title": "Particle.process() - Cloud functions"
    },
    "cloud-functions/particle-synctime": {
      "title": "Particle.syncTime() - Cloud functions"
    },
    "cloud-functions/particle-synctimedone": {
      "title": "Particle.syncTimeDone() - Cloud functions"
    },
    "cloud-functions/particle-synctimepending": {
      "title": "Particle.syncTimePending() - Cloud functions"
    },
    "cloud-functions/particle-timesyncedlast": {
      "title": "Particle.timeSyncedLast() - Cloud functions"
    },
    "cloud-functions/get-public-ip": {
      "title": "Get public IP - Cloud functions"
    },
    "cloud-functions/get-device-name": {
      "title": "Get device name - Cloud functions"
    },
    "cloud-functions/get-random-seed": {
      "title": "Get random seed - Cloud functions"
    },
    "ethernet/ethernet": {
      "title": "Ethernet"
    },
    "ethernet/pin-configuration-ethernet": {
      "title": "Pin configuration - Ethernet - Ethernet"
    },
    "ethernet/on": {
      "title": "on() - Ethernet"
    },
    "ethernet/off": {
      "title": "off() - Ethernet"
    },
    "ethernet/connect": {
      "title": "connect() - Ethernet"
    },
    "ethernet/disconnect": {
      "title": "disconnect() - Ethernet"
    },
    "ethernet/connecting": {
      "title": "connecting() - Ethernet"
    },
    "ethernet/ready": {
      "title": "ready() - Ethernet"
    },
    "ethernet/setconfig-ethernet": {
      "title": "setConfig() [Ethernet] - Ethernet"
    },
    "ethernet/getconfig-ethernet": {
      "title": "getConfig() [Ethernet] - Ethernet"
    },
    "ethernet/prefer-ethernet": {
      "title": "prefer() [Ethernet] - Ethernet"
    },
    "ethernet/ispreferred-ethernet": {
      "title": "isPreferred() [Ethernet] - Ethernet"
    },
    "ethernet/listen": {
      "title": "listen() - Ethernet"
    },
    "ethernet/listening": {
      "title": "listening() - Ethernet"
    },
    "ethernet/setlistentimeout": {
      "title": "setListenTimeout() - Ethernet"
    },
    "ethernet/getlistentimeout": {
      "title": "getListenTimeout() - Ethernet"
    },
    "ethernet/macaddress": {
      "title": "macAddress() - Ethernet"
    },
    "ethernet/localip": {
      "title": "localIP() - Ethernet"
    },
    "ethernet/subnetmask": {
      "title": "subnetMask() - Ethernet"
    },
    "ethernet/gatewayip": {
      "title": "gatewayIP() - Ethernet"
    },
    "ethernet/dnsserverip": {
      "title": "dnsServerIP() - Ethernet"
    },
    "ethernet/dhcpserverip": {
      "title": "dhcpServerIP() - Ethernet"
    },
    "wifi/wifi": {
      "title": "WiFi"
    },
    "wifi/on": {
      "title": "on() - WiFi"
    },
    "wifi/off": {
      "title": "off() - WiFi"
    },
    "wifi/connect": {
      "title": "connect() - WiFi"
    },
    "wifi/disconnect": {
      "title": "disconnect() - WiFi"
    },
    "wifi/connecting": {
      "title": "connecting() - WiFi"
    },
    "wifi/ready": {
      "title": "ready() - WiFi"
    },
    "wifi/setconfig-wifi": {
      "title": "setConfig() [WiFi] - WiFi"
    },
    "wifi/getconfig-wifi": {
      "title": "getConfig() [WiFi] - WiFi"
    },
    "wifi/selectantenna-antenna": {
      "title": "selectAntenna() [antenna] - WiFi"
    },
    "wifi/getantenna": {
      "title": "getAntenna() - WiFi"
    },
    "wifi/prefer-wifi": {
      "title": "prefer() [WiFi] - WiFi"
    },
    "wifi/ispreferred-wifi": {
      "title": "isPreferred() [WiFi] - WiFi"
    },
    "wifi/listen": {
      "title": "listen() - WiFi"
    },
    "wifi/listening": {
      "title": "listening() - WiFi"
    },
    "wifi/setlistentimeout": {
      "title": "setListenTimeout() - WiFi"
    },
    "wifi/getlistentimeout": {
      "title": "getListenTimeout() - WiFi"
    },
    "wifi/setcredentials": {
      "title": "setCredentials() - WiFi"
    },
    "wifi/getcredentials": {
      "title": "getCredentials() - WiFi"
    },
    "wifi/clearcredentials": {
      "title": "clearCredentials() - WiFi"
    },
    "wifi/hascredentials": {
      "title": "hasCredentials() - WiFi"
    },
    "wifi/macaddress": {
      "title": "macAddress() - WiFi"
    },
    "wifi/ssid": {
      "title": "SSID() - WiFi"
    },
    "wifi/bssid": {
      "title": "BSSID() - WiFi"
    },
    "wifi/rssi": {
      "title": "RSSI() - WiFi"
    },
    "wifi/wifisignal-class": {
      "title": "WiFiSignal Class - WiFi",
      "subsections": [
        {
          "level": 4,
          "anchor": "getstrength-",
          "title": "getStrength()"
        },
        {
          "level": 4,
          "anchor": "getquality-",
          "title": "getQuality()"
        },
        {
          "level": 4,
          "anchor": "getstrengthvalue-",
          "title": "getStrengthValue()"
        },
        {
          "level": 4,
          "anchor": "getqualityvalue-",
          "title": "getQualityValue()"
        }
      ]
    },
    "wifi/ping": {
      "title": "ping() - WiFi"
    },
    "wifi/scan": {
      "title": "scan() - WiFi"
    },
    "wifi/resolve": {
      "title": "resolve() - WiFi"
    },
    "wifi/localip": {
      "title": "localIP() - WiFi"
    },
    "wifi/subnetmask": {
      "title": "subnetMask() - WiFi"
    },
    "wifi/gatewayip": {
      "title": "gatewayIP() - WiFi"
    },
    "wifi/dnsserverip": {
      "title": "dnsServerIP() - WiFi"
    },
    "wifi/dhcpserverip": {
      "title": "dhcpServerIP() - WiFi"
    },
    "wifi/setstaticip": {
      "title": "setStaticIP() - WiFi"
    },
    "wifi/usestaticip": {
      "title": "useStaticIP() - WiFi"
    },
    "wifi/usedynamicip": {
      "title": "useDynamicIP() - WiFi"
    },
    "wifi/sethostname": {
      "title": "setHostname() - WiFi"
    },
    "wifi/hostname": {
      "title": "hostname() - WiFi"
    },
    "wifi/wlan_get_country_code": {
      "title": "wlan_get_country_code - WiFi"
    },
    "wifi/wlan_set_country_code": {
      "title": "wlan_set_country_code - WiFi"
    },
    "wifi/wificredentials-class": {
      "title": "WiFiCredentials class - WiFi",
      "subsections": [
        {
          "level": 4,
          "anchor": "wificredentials-",
          "title": "WiFiCredentials()"
        },
        {
          "level": 4,
          "anchor": "setssid-",
          "title": "setSsid()"
        },
        {
          "level": 4,
          "anchor": "setsecurity-",
          "title": "setSecurity()"
        },
        {
          "level": 4,
          "anchor": "setcipher-",
          "title": "setCipher()"
        },
        {
          "level": 4,
          "anchor": "setpassword-",
          "title": "setPassword()"
        },
        {
          "level": 4,
          "anchor": "sethidden-",
          "title": "setHidden()"
        },
        {
          "level": 4,
          "anchor": "setvalidate-",
          "title": "setValidate()"
        },
        {
          "level": 4,
          "anchor": "setchannel-",
          "title": "setChannel()"
        },
        {
          "level": 4,
          "anchor": "seteaptype-",
          "title": "setEapType()"
        },
        {
          "level": 4,
          "anchor": "setidentity-",
          "title": "setIdentity()"
        },
        {
          "level": 4,
          "anchor": "setouteridentity-",
          "title": "setOuterIdentity()"
        },
        {
          "level": 4,
          "anchor": "setclientcertificate-",
          "title": "setClientCertificate()"
        },
        {
          "level": 4,
          "anchor": "setprivatekey-",
          "title": "setPrivateKey()"
        },
        {
          "level": 4,
          "anchor": "setrootcertificate-",
          "title": "setRootCertificate()"
        }
      ]
    },
    "wifi/wlaneaptype-enum": {
      "title": "WLanEapType Enum - WiFi"
    },
    "wifi/securitytype-enum": {
      "title": "SecurityType Enum - WiFi"
    },
    "wifi/wlansecuritycipher-enum": {
      "title": "WLanSecurityCipher Enum - WiFi"
    },
    "network/network": {
      "title": "Network"
    },
    "network/on-network": {
      "title": "on() [Network] - Network"
    },
    "network/off-network": {
      "title": "off() [Network] - Network"
    },
    "network/connect-network": {
      "title": "connect() [Network] - Network"
    },
    "network/disconnect-network": {
      "title": "disconnect() [Network] - Network"
    },
    "network/connecting-network": {
      "title": "connecting() [Network] - Network"
    },
    "network/ready-network": {
      "title": "ready() [Network] - Network"
    },
    "network/setconfig-network": {
      "title": "setConfig() [Network] - Network"
    },
    "network/getconfig-network": {
      "title": "getConfig() [Network] - Network"
    },
    "network/prefer-network": {
      "title": "prefer() [Network] - Network"
    },
    "network/ispreferred-network": {
      "title": "isPreferred() [Network] - Network"
    },
    "network/listen-network": {
      "title": "listen() [Network] - Network"
    },
    "network/listening-network": {
      "title": "listening() [Network] - Network"
    },
    "network/setlistentimeout-network": {
      "title": "setListenTimeout() [Network] - Network"
    },
    "network/getlistentimeout-network": {
      "title": "getListenTimeout() [Network] - Network"
    },
    "network/networkinterfaceconfig": {
      "title": "NetworkInterfaceConfig - Network",
      "subsections": [
        {
          "level": 4,
          "anchor": "networkinterfaceconfig-source",
          "title": "NetworkInterfaceConfig::source"
        },
        {
          "level": 4,
          "anchor": "networkinterfaceconfig-address",
          "title": "NetworkInterfaceConfig::address"
        },
        {
          "level": 4,
          "anchor": "networkinterfaceconfig-gateway",
          "title": "NetworkInterfaceConfig::gateway"
        },
        {
          "level": 4,
          "anchor": "networkinterfaceconfig-dns",
          "title": "NetworkInterfaceConfig::dns"
        }
      ]
    },
    "softap-http-pages/softap-http-pages": {
      "title": "SoftAP HTTP pages"
    },
    "softap-http-pages/the-page-callback-function": {
      "title": "The page callback function - SoftAP HTTP pages"
    },
    "softap-http-pages/retrieving-the-request-data": {
      "title": "Retrieving the request data - SoftAP HTTP pages"
    },
    "softap-http-pages/sending-a-response": {
      "title": "Sending a response - SoftAP HTTP pages"
    },
    "softap-http-pages/the-default-page": {
      "title": "The default page - SoftAP HTTP pages"
    },
    "softap-http-pages/sending-a-redirect": {
      "title": "Sending a redirect - SoftAP HTTP pages"
    },
    "softap-http-pages/complete-example": {
      "title": "Complete example - SoftAP HTTP pages"
    },
    "cellular/cellular": {
      "title": "Cellular"
    },
    "cellular/on": {
      "title": "on() - Cellular"
    },
    "cellular/off": {
      "title": "off() - Cellular"
    },
    "cellular/ison": {
      "title": "isOn() - Cellular"
    },
    "cellular/isoff": {
      "title": "isOff() - Cellular"
    },
    "cellular/connect": {
      "title": "connect() - Cellular"
    },
    "cellular/disconnect": {
      "title": "disconnect() - Cellular"
    },
    "cellular/connecting": {
      "title": "connecting() - Cellular"
    },
    "cellular/ready": {
      "title": "ready() - Cellular"
    },
    "cellular/prefer-cellular": {
      "title": "prefer() [Cellular] - Cellular"
    },
    "cellular/ispreferred-cellular": {
      "title": "isPreferred() [Cellular] - Cellular"
    },
    "cellular/listen": {
      "title": "listen() - Cellular"
    },
    "cellular/listening": {
      "title": "listening() - Cellular"
    },
    "cellular/setlistentimeout": {
      "title": "setListenTimeout() - Cellular"
    },
    "cellular/getlistentimeout": {
      "title": "getListenTimeout() - Cellular"
    },
    "cellular/lock": {
      "title": "lock() - Cellular"
    },
    "cellular/unlock": {
      "title": "unlock() - Cellular"
    },
    "cellular/setcredentials": {
      "title": "setCredentials() - Cellular"
    },
    "cellular/clearcredentials": {
      "title": "clearCredentials() - Cellular"
    },
    "cellular/setactivesim": {
      "title": "setActiveSim() - Cellular"
    },
    "cellular/getactivesim": {
      "title": "getActiveSim() - Cellular"
    },
    "cellular/getdatausage": {
      "title": "getDataUsage() - Cellular"
    },
    "cellular/setdatausage": {
      "title": "setDataUsage() - Cellular"
    },
    "cellular/resetdatausage": {
      "title": "resetDataUsage() - Cellular"
    },
    "cellular/rssi": {
      "title": "RSSI() - Cellular"
    },
    "cellular/cellularsignal-class": {
      "title": "CellularSignal Class - Cellular",
      "subsections": [
        {
          "level": 4,
          "anchor": "getaccesstechnology-",
          "title": "getAccessTechnology()"
        },
        {
          "level": 4,
          "anchor": "getstrength-",
          "title": "getStrength()"
        },
        {
          "level": 4,
          "anchor": "getquality-",
          "title": "getQuality()"
        },
        {
          "level": 4,
          "anchor": "getstrengthvalue-",
          "title": "getStrengthValue()"
        },
        {
          "level": 4,
          "anchor": "getqualityvalue-",
          "title": "getQualityValue()"
        }
      ]
    },
    "cellular/getbandavailable": {
      "title": "getBandAvailable() - Cellular"
    },
    "cellular/getbandselect": {
      "title": "getBandSelect() - Cellular"
    },
    "cellular/setbandselect": {
      "title": "setBandSelect() - Cellular"
    },
    "cellular/resolve": {
      "title": "resolve() - Cellular"
    },
    "cellular/localip": {
      "title": "localIP() - Cellular"
    },
    "cellular/command": {
      "title": "command() - Cellular"
    },
    "battery-voltage/battery-voltage-photon-2": {
      "title": "Battery Voltage - Photon 2 - Battery voltage"
    },
    "battery-voltage/battery-voltage-argon": {
      "title": "Battery Voltage - Argon - Battery voltage"
    },
    "fuelgauge/fuelgauge": {
      "title": "FuelGauge"
    },
    "fuelgauge/getvcell": {
      "title": "getVCell() - FuelGauge"
    },
    "fuelgauge/getsoc": {
      "title": "getSoC() - FuelGauge"
    },
    "fuelgauge/getnormalizedsoc": {
      "title": "getNormalizedSoC() - FuelGauge"
    },
    "fuelgauge/getversion": {
      "title": "getVersion() - FuelGauge"
    },
    "fuelgauge/getcompensatevalue": {
      "title": "getCompensateValue() - FuelGauge"
    },
    "fuelgauge/getalertthreshold": {
      "title": "getAlertThreshold() - FuelGauge"
    },
    "fuelgauge/setalertthreshold": {
      "title": "setAlertThreshold() - FuelGauge"
    },
    "fuelgauge/getalert": {
      "title": "getAlert() - FuelGauge"
    },
    "fuelgauge/clearalert": {
      "title": "clearAlert() - FuelGauge"
    },
    "fuelgauge/reset": {
      "title": "reset() - FuelGauge"
    },
    "fuelgauge/quickstart": {
      "title": "quickStart() - FuelGauge"
    },
    "fuelgauge/sleep": {
      "title": "sleep() - FuelGauge"
    },
    "fuelgauge/wakeup": {
      "title": "wakeup() - FuelGauge"
    },
    "input-output/input-output": {
      "title": "Input/Output"
    },
    "input-output/pinmode": {
      "title": "pinMode() - Input/Output"
    },
    "input-output/getpinmode-pin": {
      "title": "getPinMode(pin) - Input/Output"
    },
    "input-output/digitalwrite": {
      "title": "digitalWrite() - Input/Output"
    },
    "input-output/digitalread": {
      "title": "digitalRead() - Input/Output"
    },
    "input-output/pinsetdrivestrength": {
      "title": "pinSetDriveStrength() - Input/Output"
    },
    "input-output/analogwrite-pwm": {
      "title": "analogWrite() (PWM) - Input/Output"
    },
    "input-output/analogwriteresolution-pwm": {
      "title": "analogWriteResolution() (PWM) - Input/Output"
    },
    "input-output/analogwritemaxfrequency-pwm": {
      "title": "analogWriteMaxFrequency() (PWM) - Input/Output"
    },
    "input-output/analog-output-dac": {
      "title": "Analog Output (DAC) - Input/Output"
    },
    "input-output/analogread-adc": {
      "title": "analogRead() (ADC) - Input/Output"
    },
    "input-output/setadcsampletime": {
      "title": "setADCSampleTime() - Input/Output"
    },
    "input-output/analogsetreference": {
      "title": "analogSetReference - Input/Output"
    },
    "input-output/analoggetreference": {
      "title": "analogGetReference - Input/Output"
    },
    "low-level-input-output/low-level-input-output": {
      "title": "Low level input/output"
    },
    "low-level-input-output/pinsetfast": {
      "title": "pinSetFast() - Low level input/output"
    },
    "low-level-input-output/pinresetfast": {
      "title": "pinResetFast() - Low level input/output"
    },
    "low-level-input-output/digitalwritefast": {
      "title": "digitalWriteFast() - Low level input/output"
    },
    "low-level-input-output/pinreadfast": {
      "title": "pinReadFast() - Low level input/output"
    },
    "input-output-advanced/tone": {
      "title": "tone() - Input/Output - Advanced"
    },
    "input-output-advanced/notone": {
      "title": "noTone() - Input/Output - Advanced"
    },
    "input-output-advanced/shiftout": {
      "title": "shiftOut() - Input/Output - Advanced"
    },
    "input-output-advanced/shiftin": {
      "title": "shiftIn() - Input/Output - Advanced"
    },
    "input-output-advanced/pulsein": {
      "title": "pulseIn() - Input/Output - Advanced"
    },
    "power-manager/power-manager": {
      "title": "Power manager"
    },
    "power-manager/powersourcemaxcurrent": {
      "title": "powerSourceMaxCurrent - Power manager"
    },
    "power-manager/powersourceminvoltage": {
      "title": "powerSourceMinVoltage - Power manager"
    },
    "power-manager/batterychargecurrent": {
      "title": "batteryChargeCurrent - Power manager"
    },
    "power-manager/batterychargevoltage": {
      "title": "batteryChargeVoltage - Power manager"
    },
    "power-manager/systempowerfeature": {
      "title": "SystemPowerFeature - Power manager",
      "subsections": [
        {
          "level": 4,
          "anchor": "systempowerfeature-pmic_detection",
          "title": "SystemPowerFeature::PMIC_DETECTION"
        },
        {
          "level": 4,
          "anchor": "systempowerfeature-use_vin_settings_with_usb_host",
          "title": "SystemPowerFeature::USE_VIN_SETTINGS_WITH_USB_HOST"
        },
        {
          "level": 4,
          "anchor": "systempowerfeature-disable_charging",
          "title": "SystemPowerFeature::DISABLE_CHARGING"
        },
        {
          "level": 4,
          "anchor": "systempowerfeature-disable",
          "title": "SystemPowerFeature::DISABLE"
        }
      ]
    },
    "power-manager/b-series-som": {
      "title": "B-Series SoM - Power manager"
    },
    "pmic-power-management-ic/pmic-power-management-ic": {
      "title": "PMIC (Power Management IC)"
    },
    "pmic-power-management-ic/pmic-constructor": {
      "title": "PMIC() constructor - PMIC (Power Management IC)"
    },
    "pmic-power-management-ic/begin": {
      "title": "begin() - PMIC (Power Management IC)"
    },
    "pmic-power-management-ic/getversion": {
      "title": "getVersion() - PMIC (Power Management IC)"
    },
    "pmic-power-management-ic/getsystemstatus": {
      "title": "getSystemStatus() - PMIC (Power Management IC)"
    },
    "pmic-power-management-ic/getfault": {
      "title": "getFault() - PMIC (Power Management IC)"
    },
    "pmic-power-management-ic/lock": {
      "title": "lock() - PMIC (Power Management IC)"
    },
    "pmic-power-management-ic/unlock": {
      "title": "unlock() - PMIC (Power Management IC)"
    },
    "pmic-power-management-ic/input-source-control-register": {
      "title": "Input source control register - PMIC (Power Management IC)",
      "subsections": [
        {
          "level": 4,
          "anchor": "readinputsourceregister-",
          "title": "readInputSourceRegister()"
        },
        {
          "level": 4,
          "anchor": "enablebuck-",
          "title": "enableBuck()"
        },
        {
          "level": 4,
          "anchor": "disablebuck-",
          "title": "disableBuck()"
        },
        {
          "level": 4,
          "anchor": "setinputcurrentlimit-",
          "title": "setInputCurrentLimit()"
        },
        {
          "level": 4,
          "anchor": "getinputcurrentlimit-",
          "title": "getInputCurrentLimit()"
        },
        {
          "level": 4,
          "anchor": "setinputvoltagelimit-",
          "title": "setInputVoltageLimit()"
        },
        {
          "level": 4,
          "anchor": "getinputvoltagelimit-",
          "title": "getInputVoltageLimit()"
        }
      ]
    },
    "pmic-power-management-ic/power-on-configuration-reg": {
      "title": "Power on configuration reg - PMIC (Power Management IC)",
      "subsections": [
        {
          "level": 4,
          "anchor": "enablecharging-",
          "title": "enableCharging()"
        },
        {
          "level": 4,
          "anchor": "disablecharging-",
          "title": "disableCharging()"
        },
        {
          "level": 4,
          "anchor": "enableotg-",
          "title": "enableOTG()"
        },
        {
          "level": 4,
          "anchor": "disableotg-",
          "title": "disableOTG()"
        },
        {
          "level": 4,
          "anchor": "resetwatchdog-",
          "title": "resetWatchdog()"
        },
        {
          "level": 4,
          "anchor": "setminimumsystemvoltage-",
          "title": "setMinimumSystemVoltage()"
        },
        {
          "level": 4,
          "anchor": "getminimumsystemvoltage-",
          "title": "getMinimumSystemVoltage()"
        },
        {
          "level": 4,
          "anchor": "readpoweronregister-",
          "title": "readPowerONRegister()"
        }
      ]
    },
    "pmic-power-management-ic/charge-current-control-reg": {
      "title": "Charge current control reg - PMIC (Power Management IC)",
      "subsections": [
        {
          "level": 4,
          "anchor": "setchargecurrent-",
          "title": "setChargeCurrent()"
        },
        {
          "level": 4,
          "anchor": "getchargecurrent-",
          "title": "getChargeCurrent()"
        }
      ]
    },
    "pmic-power-management-ic/precharge-termination-current-control-reg": {
      "title": "Precharge/termination current control reg - PMIC (Power Management IC)",
      "subsections": [
        {
          "level": 4,
          "anchor": "setprechargecurrent-",
          "title": "setPreChargeCurrent()"
        },
        {
          "level": 4,
          "anchor": "getprechargecurrent-",
          "title": "getPreChargeCurrent()"
        },
        {
          "level": 4,
          "anchor": "settermchargecurrent-",
          "title": "setTermChargeCurrent()"
        },
        {
          "level": 4,
          "anchor": "gettermchargecurrent-",
          "title": "getTermChargeCurrent()"
        }
      ]
    },
    "pmic-power-management-ic/charge-voltage-control-reg": {
      "title": "Charge voltage control reg - PMIC (Power Management IC)",
      "subsections": [
        {
          "level": 4,
          "anchor": "setchargevoltage-",
          "title": "setChargeVoltage()"
        },
        {
          "level": 4,
          "anchor": "getchargevoltagevalue-",
          "title": "getChargeVoltageValue()"
        },
        {
          "level": 4,
          "anchor": "getchargevoltage-",
          "title": "getChargeVoltage()"
        }
      ]
    },
    "pmic-power-management-ic/charge-timer-control-reg": {
      "title": "Charge timer control reg - PMIC (Power Management IC)",
      "subsections": [
        {
          "level": 4,
          "anchor": "readchargetermregister-",
          "title": "readChargeTermRegister()"
        },
        {
          "level": 4,
          "anchor": "disablewatchdog-",
          "title": "disableWatchdog()"
        },
        {
          "level": 4,
          "anchor": "setwatchdog-",
          "title": "setWatchdog()"
        }
      ]
    },
    "pmic-power-management-ic/thermal-regulation-control-reg": {
      "title": "Thermal regulation control reg - PMIC (Power Management IC)",
      "subsections": [
        {
          "level": 4,
          "anchor": "setthermalregulation-",
          "title": "setThermalRegulation()"
        },
        {
          "level": 4,
          "anchor": "getthermalregulation-",
          "title": "getThermalRegulation()"
        }
      ]
    },
    "pmic-power-management-ic/misc-operation-control-reg": {
      "title": "Misc operation control reg - PMIC (Power Management IC)",
      "subsections": [
        {
          "level": 4,
          "anchor": "readopcontrolregister-",
          "title": "readOpControlRegister()"
        },
        {
          "level": 4,
          "anchor": "enabledpdm-",
          "title": "enableDPDM()"
        },
        {
          "level": 4,
          "anchor": "disabledpdm-",
          "title": "disableDPDM()"
        },
        {
          "level": 4,
          "anchor": "enablebatfet-",
          "title": "enableBATFET()"
        },
        {
          "level": 4,
          "anchor": "disablebatfet-",
          "title": "disableBATFET()"
        },
        {
          "level": 4,
          "anchor": "safetytimer-",
          "title": "safetyTimer()"
        },
        {
          "level": 4,
          "anchor": "enablechargefaultint-",
          "title": "enableChargeFaultINT()"
        },
        {
          "level": 4,
          "anchor": "disablechargefaultint-",
          "title": "disableChargeFaultINT()"
        },
        {
          "level": 4,
          "anchor": "enablebatfaultint-",
          "title": "enableBatFaultINT()"
        },
        {
          "level": 4,
          "anchor": "disablebatfaultint-",
          "title": "disableBatFaultINT()"
        }
      ]
    },
    "pmic-power-management-ic/system-status-register": {
      "title": "System status register - PMIC (Power Management IC)",
      "subsections": [
        {
          "level": 4,
          "anchor": "getvbusstat-",
          "title": "getVbusStat()"
        },
        {
          "level": 4,
          "anchor": "getchargingstat-",
          "title": "getChargingStat()"
        },
        {
          "level": 4,
          "anchor": "getdpmstat-",
          "title": "getDPMStat()"
        },
        {
          "level": 4,
          "anchor": "ispowergood-",
          "title": "isPowerGood()"
        },
        {
          "level": 4,
          "anchor": "ishot-",
          "title": "isHot()"
        },
        {
          "level": 4,
          "anchor": "getvsysstat-",
          "title": "getVsysStat()"
        }
      ]
    },
    "serial/serial": {
      "title": "Serial"
    },
    "serial/begin": {
      "title": "begin() - Serial"
    },
    "serial/end": {
      "title": "end() - Serial"
    },
    "serial/available": {
      "title": "available() - Serial"
    },
    "serial/availableforwrite": {
      "title": "availableForWrite() - Serial"
    },
    "serial/acquireserialbuffer": {
      "title": "acquireSerialBuffer() - Serial"
    },
    "serial/acquireserial1buffer": {
      "title": "acquireSerial1Buffer() - Serial"
    },
    "serial/blockonoverrun": {
      "title": "blockOnOverrun() - Serial"
    },
    "serial/serialevent": {
      "title": "serialEvent() - Serial"
    },
    "serial/peek": {
      "title": "peek() - Serial"
    },
    "serial/write": {
      "title": "write() - Serial"
    },
    "serial/read": {
      "title": "read() - Serial"
    },
    "serial/print": {
      "title": "print() - Serial"
    },
    "serial/println": {
      "title": "println() - Serial"
    },
    "serial/printf": {
      "title": "printf() - Serial"
    },
    "serial/printlnf": {
      "title": "printlnf() - Serial"
    },
    "serial/flush": {
      "title": "flush() - Serial"
    },
    "serial/halfduplex": {
      "title": "halfduplex() - Serial"
    },
    "serial/isconnected": {
      "title": "isConnected() - Serial"
    },
    "serial/lock": {
      "title": "lock() - Serial"
    },
    "serial/unlock": {
      "title": "unlock() - Serial"
    },
    "mouse/mouse": {
      "title": "Mouse"
    },
    "mouse/begin": {
      "title": "begin() - Mouse"
    },
    "mouse/end": {
      "title": "end() - Mouse"
    },
    "mouse/move": {
      "title": "move() - Mouse"
    },
    "mouse/moveto": {
      "title": "moveTo() - Mouse"
    },
    "mouse/scroll": {
      "title": "scroll() - Mouse"
    },
    "mouse/click": {
      "title": "click() - Mouse"
    },
    "mouse/press": {
      "title": "press() - Mouse"
    },
    "mouse/release": {
      "title": "release() - Mouse"
    },
    "mouse/ispressed": {
      "title": "isPressed() - Mouse"
    },
    "mouse/screensize": {
      "title": "screenSize() - Mouse"
    },
    "mouse/enablemoveto": {
      "title": "enableMoveTo() - Mouse"
    },
    "keyboard/keyboard": {
      "title": "Keyboard"
    },
    "keyboard/begin": {
      "title": "begin() - Keyboard"
    },
    "keyboard/end": {
      "title": "end() - Keyboard"
    },
    "keyboard/write": {
      "title": "write() - Keyboard"
    },
    "keyboard/click": {
      "title": "click() - Keyboard"
    },
    "keyboard/press": {
      "title": "press() - Keyboard"
    },
    "keyboard/release": {
      "title": "release() - Keyboard"
    },
    "keyboard/releaseall": {
      "title": "releaseAll() - Keyboard"
    },
    "keyboard/print": {
      "title": "print() - Keyboard"
    },
    "keyboard/println": {
      "title": "println() - Keyboard"
    },
    "keyboard/printf": {
      "title": "printf() - Keyboard"
    },
    "keyboard/printlnf": {
      "title": "printlnf() - Keyboard"
    },
    "spi/spi": {
      "title": "SPI"
    },
    "spi/begin": {
      "title": "begin() - SPI"
    },
    "spi/begin-spi_mode-uint16_t": {
      "title": "begin(SPI_Mode, uint16_t) - SPI"
    },
    "spi/end": {
      "title": "end() - SPI"
    },
    "spi/setbitorder": {
      "title": "setBitOrder() - SPI"
    },
    "spi/setclockspeed": {
      "title": "setClockSpeed - SPI"
    },
    "spi/setclockdividerreference": {
      "title": "setClockDividerReference - SPI"
    },
    "spi/setclockdivider": {
      "title": "setClockDivider() - SPI"
    },
    "spi/setdatamode": {
      "title": "setDataMode() - SPI"
    },
    "spi/transfer": {
      "title": "transfer() - SPI"
    },
    "spi/transfer-void-void-size_t-std-function": {
      "title": "transfer(void\\*, void\\*, size_t, std::function) - SPI"
    },
    "spi/transfercancel": {
      "title": "transferCancel() - SPI"
    },
    "spi/onselect": {
      "title": "onSelect() - SPI"
    },
    "spi/available": {
      "title": "available() - SPI"
    },
    "spi/spisettings": {
      "title": "SPISettings - SPI"
    },
    "spi/begintransaction": {
      "title": "beginTransaction() - SPI"
    },
    "spi/endtransaction": {
      "title": "endTransaction() - SPI"
    },
    "wire-i2c/wire-i2c": {
      "title": "Wire (I2C)"
    },
    "wire-i2c/pull-up-resistors-i2c": {
      "title": "Pull-up resistors (I2C) - Wire (I2C)"
    },
    "wire-i2c/pins-i2c": {
      "title": "Pins (I2C) - Wire (I2C)"
    },
    "wire-i2c/setspeed": {
      "title": "setSpeed() - Wire (I2C)"
    },
    "wire-i2c/stretchclock": {
      "title": "stretchClock() - Wire (I2C)"
    },
    "wire-i2c/begin": {
      "title": "begin() - Wire (I2C)"
    },
    "wire-i2c/slave-mode-i2c": {
      "title": "Slave mode (I2C) - Wire (I2C)"
    },
    "wire-i2c/end": {
      "title": "end() - Wire (I2C)"
    },
    "wire-i2c/isenabled": {
      "title": "isEnabled() - Wire (I2C)"
    },
    "wire-i2c/requestfrom": {
      "title": "requestFrom() - Wire (I2C)"
    },
    "wire-i2c/reset": {
      "title": "reset() - Wire (I2C)"
    },
    "wire-i2c/begintransmission": {
      "title": "beginTransmission() - Wire (I2C)"
    },
    "wire-i2c/endtransmission": {
      "title": "endTransmission() - Wire (I2C)"
    },
    "wire-i2c/write": {
      "title": "write() - Wire (I2C)"
    },
    "wire-i2c/available": {
      "title": "available() - Wire (I2C)"
    },
    "wire-i2c/read": {
      "title": "read() - Wire (I2C)"
    },
    "wire-i2c/peek": {
      "title": "peek() - Wire (I2C)"
    },
    "wire-i2c/lock": {
      "title": "lock() - Wire (I2C)"
    },
    "wire-i2c/unlock": {
      "title": "unlock() - Wire (I2C)"
    },
    "wire-i2c/onreceive": {
      "title": "onReceive() - Wire (I2C)"
    },
    "wire-i2c/onrequest": {
      "title": "onRequest() - Wire (I2C)"
    },
    "wire-i2c/acquirewirebuffer": {
      "title": "acquireWireBuffer - Wire (I2C)"
    },
    "can-canbus/can-canbus": {
      "title": "CAN (canbus)"
    },
    "can-canbus/canmessage": {
      "title": "CANMessage - CAN (canbus)"
    },
    "can-canbus/canchannel": {
      "title": "CANChannel - CAN (canbus)"
    },
    "can-canbus/begin": {
      "title": "begin() - CAN (canbus)"
    },
    "can-canbus/end": {
      "title": "end() - CAN (canbus)"
    },
    "can-canbus/available": {
      "title": "available() - CAN (canbus)"
    },
    "can-canbus/receive": {
      "title": "receive() - CAN (canbus)"
    },
    "can-canbus/transmit": {
      "title": "transmit() - CAN (canbus)"
    },
    "can-canbus/addfilter": {
      "title": "addFilter() - CAN (canbus)"
    },
    "can-canbus/clearfilters": {
      "title": "clearFilters() - CAN (canbus)"
    },
    "can-canbus/isenabled": {
      "title": "isEnabled() - CAN (canbus)"
    },
    "can-canbus/errorstatus": {
      "title": "errorStatus() - CAN (canbus)"
    },
    "ipaddress/ipaddress": {
      "title": "IPAddress"
    },
    "bluetooth-le-ble/bluetooth-le-ble": {
      "title": "Bluetooth LE (BLE)"
    },
    "bluetooth-le-ble/ble-class": {
      "title": "BLE Class - Bluetooth LE (BLE)",
      "subsections": [
        {
          "level": 4,
          "anchor": "ble-advertise-",
          "title": "BLE.advertise()"
        },
        {
          "level": 4,
          "anchor": "ble-advertise-ibeacon-",
          "title": "BLE.advertise(iBeacon)"
        },
        {
          "level": 4,
          "anchor": "ble-advertise-",
          "title": "BLE.advertise()"
        },
        {
          "level": 4,
          "anchor": "ble-stopadvertising-",
          "title": "BLE.stopAdvertising()"
        },
        {
          "level": 4,
          "anchor": "ble-advertising-",
          "title": "BLE.advertising()"
        },
        {
          "level": 4,
          "anchor": "ble-getadvertisingdata-",
          "title": "BLE.getAdvertisingData()"
        },
        {
          "level": 4,
          "anchor": "ble-setadvertisingdata-",
          "title": "BLE.setAdvertisingData()"
        },
        {
          "level": 4,
          "anchor": "ble-setadvertisinginterval-",
          "title": "BLE.setAdvertisingInterval()"
        },
        {
          "level": 4,
          "anchor": "ble-setadvertisingtimeout-",
          "title": "BLE.setAdvertisingTimeout()"
        },
        {
          "level": 4,
          "anchor": "ble-setadvertisingtype-",
          "title": "BLE.setAdvertisingType()"
        },
        {
          "level": 4,
          "anchor": "ble-getadvertisingparameters-",
          "title": "BLE.getAdvertisingParameters()"
        },
        {
          "level": 4,
          "anchor": "ble-setadvertisingparameters-",
          "title": "BLE.setAdvertisingParameters()"
        },
        {
          "level": 4,
          "anchor": "ble-setadvertisingparameters-bleadvertisingparams-",
          "title": "BLE.setAdvertisingParameters(BleAdvertisingParams)"
        },
        {
          "level": 4,
          "anchor": "ble-setadvertisingphy-",
          "title": "BLE.setAdvertisingPhy()"
        },
        {
          "level": 4,
          "anchor": "ble-getscanresponsedata-",
          "title": "BLE.getScanResponseData()"
        },
        {
          "level": 4,
          "anchor": "ble-setscanresponsedata-",
          "title": "BLE.setScanResponseData()"
        },
        {
          "level": 4,
          "anchor": "ble-addcharacteristic-characteristic-",
          "title": "BLE.addCharacteristic(characteristic)"
        },
        {
          "level": 4,
          "anchor": "ble-addcharacteristic-parameters-",
          "title": "BLE.addCharacteristic(parameters)"
        },
        {
          "level": 4,
          "anchor": "ble-scan-array-",
          "title": "BLE.scan(array)"
        },
        {
          "level": 4,
          "anchor": "ble-scan-vector-",
          "title": "BLE.scan(Vector)"
        },
        {
          "level": 4,
          "anchor": "ble-scan-callback-",
          "title": "BLE.scan(callback)"
        },
        {
          "level": 4,
          "anchor": "ble-scanwithfilter-",
          "title": "BLE.scanWithFilter()"
        },
        {
          "level": 4,
          "anchor": "ble-stopscanning-",
          "title": "BLE.stopScanning()"
        },
        {
          "level": 4,
          "anchor": "ble-setscantimeout-",
          "title": "BLE.setScanTimeout()"
        },
        {
          "level": 4,
          "anchor": "ble-getscanparameters-",
          "title": "BLE.getScanParameters()"
        },
        {
          "level": 4,
          "anchor": "ble-setscanparameters-",
          "title": "BLE.setScanParameters()"
        },
        {
          "level": 4,
          "anchor": "ble-setscanphy-",
          "title": "BLE.setScanPhy()"
        },
        {
          "level": 4,
          "anchor": "ble-connect-",
          "title": "BLE.connect()"
        },
        {
          "level": 4,
          "anchor": "ble-connect-options-",
          "title": "BLE.connect(options)"
        },
        {
          "level": 4,
          "anchor": "ble-setppcp-",
          "title": "BLE.setPPCP()"
        },
        {
          "level": 4,
          "anchor": "ble-connected-",
          "title": "BLE.connected()"
        },
        {
          "level": 4,
          "anchor": "ble-disconnect-",
          "title": "BLE.disconnect()"
        },
        {
          "level": 4,
          "anchor": "ble-disconnect-peripheral-",
          "title": "BLE.disconnect(peripheral)"
        },
        {
          "level": 4,
          "anchor": "ble-on-",
          "title": "BLE.on()"
        },
        {
          "level": 4,
          "anchor": "ble-off-",
          "title": "BLE.off()"
        },
        {
          "level": 4,
          "anchor": "ble-begin-",
          "title": "BLE.begin()"
        },
        {
          "level": 4,
          "anchor": "ble-end-",
          "title": "BLE.end()"
        },
        {
          "level": 4,
          "anchor": "ble-onconnected-",
          "title": "BLE.onConnected()"
        },
        {
          "level": 4,
          "anchor": "ble-ondisconnected-",
          "title": "BLE.onDisconnected()"
        },
        {
          "level": 4,
          "anchor": "ble-settxpower-",
          "title": "BLE.setTxPower()"
        },
        {
          "level": 4,
          "anchor": "ble-txpower-",
          "title": "BLE.txPower()"
        },
        {
          "level": 4,
          "anchor": "ble-address-",
          "title": "BLE.address()"
        },
        {
          "level": 4,
          "anchor": "ble-selectantenna-",
          "title": "BLE.selectAntenna()"
        },
        {
          "level": 4,
          "anchor": "ble-setpairingiocaps-",
          "title": "BLE.setPairingIoCaps()"
        },
        {
          "level": 4,
          "anchor": "ble-setpairingalgorithm-",
          "title": "BLE.setPairingAlgorithm()"
        },
        {
          "level": 4,
          "anchor": "ble-startpairing-",
          "title": "BLE.startPairing()"
        },
        {
          "level": 4,
          "anchor": "ble-rejectpairing-",
          "title": "BLE.rejectPairing()"
        },
        {
          "level": 4,
          "anchor": "ble-setpairingnumericcomparison-",
          "title": "BLE.setPairingNumericComparison()"
        },
        {
          "level": 4,
          "anchor": "ble-setpairingpasskey-",
          "title": "BLE.setPairingPasskey()"
        },
        {
          "level": 4,
          "anchor": "ble-ispairing-",
          "title": "BLE.isPairing()"
        },
        {
          "level": 4,
          "anchor": "ble-ispaired-",
          "title": "BLE.isPaired()"
        },
        {
          "level": 4,
          "anchor": "ble-onpairingevent-",
          "title": "BLE.onPairingEvent()",
          "subsections": [
            {
              "level": 5,
              "anchor": "blepairingevent",
              "title": "BLEPairingEvent"
            },
            {
              "level": 5,
              "anchor": "blepairingeventpayload",
              "title": "BlePairingEventPayload"
            },
            {
              "level": 5,
              "anchor": "blepairingstatus",
              "title": "BlePairingStatus"
            }
          ]
        },
        {
          "level": 4,
          "anchor": "ble-setprovisioningsvcuuid",
          "title": "BLE.setProvisioningSvcUuid"
        },
        {
          "level": 4,
          "anchor": "ble-setprovisioningtxuuid",
          "title": "BLE.setProvisioningTxUuid"
        },
        {
          "level": 4,
          "anchor": "ble-setprovisioningrxuuid",
          "title": "BLE.setProvisioningRxUuid"
        },
        {
          "level": 4,
          "anchor": "ble-setprovisioningveruuid",
          "title": "BLE.setProvisioningVerUuid"
        },
        {
          "level": 4,
          "anchor": "ble-setdevicename",
          "title": "BLE.setDeviceName"
        },
        {
          "level": 4,
          "anchor": "ble-getdevicename",
          "title": "BLE.getDeviceName"
        },
        {
          "level": 4,
          "anchor": "ble-setprovisioningcompanyid",
          "title": "BLE.setProvisioningCompanyId"
        },
        {
          "level": 4,
          "anchor": "ble-provisioningmode",
          "title": "BLE.provisioningMode"
        },
        {
          "level": 4,
          "anchor": "ble-getprovisioningstatus",
          "title": "BLE.getProvisioningStatus"
        }
      ]
    },
    "bluetooth-le-ble/blescanfilter": {
      "title": "BLEScanFilter - Bluetooth LE (BLE)",
      "subsections": [
        {
          "level": 4,
          "anchor": "devicename-blescanfilter-",
          "title": "deviceName (BLEScanFilter)"
        },
        {
          "level": 4,
          "anchor": "serviceuuid-blescanfilter-",
          "title": "serviceUUID (BLEScanFilter)"
        },
        {
          "level": 4,
          "anchor": "address-blescanfilter-",
          "title": "address (BleScanFilter)"
        },
        {
          "level": 4,
          "anchor": "appearance-blescanfilter-",
          "title": "appearance (BleScanFilter)"
        },
        {
          "level": 4,
          "anchor": "rssi-blescanfilter-",
          "title": "rssi (BleScanFilter)"
        },
        {
          "level": 4,
          "anchor": "customdata-blescanfilter-",
          "title": "customData (BleScanFilter)"
        }
      ]
    },
    "bluetooth-le-ble/ble-services": {
      "title": "BLE Services - Bluetooth LE (BLE)"
    },
    "bluetooth-le-ble/blecharacteristic": {
      "title": "BleCharacteristic - Bluetooth LE (BLE)",
      "subsections": [
        {
          "level": 4,
          "anchor": "blecharacteristic-",
          "title": "BleCharacteristic()"
        },
        {
          "level": 4,
          "anchor": "blecharacteristic-peripheral-",
          "title": "BleCharacteristic (peripheral)"
        },
        {
          "level": 4,
          "anchor": "blecharacteristic-peripheral-with-data-received-",
          "title": "BleCharacteristic (peripheral with data received)"
        },
        {
          "level": 4,
          "anchor": "uuid-",
          "title": "UUID()"
        },
        {
          "level": 4,
          "anchor": "properties-",
          "title": "properties()"
        },
        {
          "level": 4,
          "anchor": "getvalue-buf-len-",
          "title": "getValue(buf, len)"
        },
        {
          "level": 4,
          "anchor": "getvalue-string-",
          "title": "getValue(String)"
        },
        {
          "level": 4,
          "anchor": "getvalue-pointer-",
          "title": "getValue(pointer)"
        },
        {
          "level": 4,
          "anchor": "setvalue-buf-len-",
          "title": "setValue(buf, len)"
        },
        {
          "level": 4,
          "anchor": "setvalue-string-",
          "title": "setValue(string)"
        },
        {
          "level": 4,
          "anchor": "setvalue-pointer-",
          "title": "setValue(pointer)"
        },
        {
          "level": 4,
          "anchor": "ondatareceived-",
          "title": "onDataReceived()"
        }
      ]
    },
    "bluetooth-le-ble/blecharacteristicproperty": {
      "title": "BleCharacteristicProperty - Bluetooth LE (BLE)"
    },
    "bluetooth-le-ble/bleuuid": {
      "title": "BleUuid - Bluetooth LE (BLE)",
      "subsections": [
        {
          "level": 4,
          "anchor": "type-",
          "title": "type()"
        },
        {
          "level": 4,
          "anchor": "isvalid-",
          "title": "isValid()"
        },
        {
          "level": 4,
          "anchor": "equality",
          "title": "equality"
        },
        {
          "level": 4,
          "anchor": "rawbytes",
          "title": "rawBytes"
        },
        {
          "level": 4,
          "anchor": "operator-",
          "title": "operator[]"
        },
        {
          "level": 4,
          "anchor": "constructors",
          "title": "Constructors"
        },
        {
          "level": 4,
          "anchor": "setters",
          "title": "Setters"
        }
      ]
    },
    "bluetooth-le-ble/bleadvertisingdata": {
      "title": "BleAdvertisingData - Bluetooth LE (BLE)",
      "subsections": [
        {
          "level": 4,
          "anchor": "bleadvertisingdata-",
          "title": "BleAdvertisingData()"
        },
        {
          "level": 4,
          "anchor": "append-",
          "title": "append()"
        },
        {
          "level": 4,
          "anchor": "appendcustomdata",
          "title": "appendCustomData"
        },
        {
          "level": 4,
          "anchor": "appendlocalname-",
          "title": "appendLocalName()"
        },
        {
          "level": 4,
          "anchor": "appendserviceuuid-",
          "title": "appendServiceUUID()"
        },
        {
          "level": 4,
          "anchor": "clear-",
          "title": "clear()"
        },
        {
          "level": 4,
          "anchor": "remove-",
          "title": "remove()"
        },
        {
          "level": 4,
          "anchor": "set-",
          "title": "set()"
        },
        {
          "level": 4,
          "anchor": "get-type-buffer-",
          "title": "get(type, buffer)"
        },
        {
          "level": 4,
          "anchor": "get-buffer-",
          "title": "get(buffer)"
        },
        {
          "level": 4,
          "anchor": "length-",
          "title": "length()"
        },
        {
          "level": 4,
          "anchor": "operator-",
          "title": "operator[]"
        },
        {
          "level": 4,
          "anchor": "devicename-",
          "title": "deviceName()"
        },
        {
          "level": 4,
          "anchor": "devicename-buf-",
          "title": "deviceName(buf)"
        },
        {
          "level": 4,
          "anchor": "serviceuuid-",
          "title": "serviceUUID()"
        },
        {
          "level": 4,
          "anchor": "customdata-",
          "title": "customData()"
        },
        {
          "level": 4,
          "anchor": "contains-",
          "title": "contains()"
        }
      ]
    },
    "bluetooth-le-ble/bleadvertisingdatatype": {
      "title": "BleAdvertisingDataType - Bluetooth LE (BLE)"
    },
    "bluetooth-le-ble/bleadvertisingdatatype-flags": {
      "title": "BleAdvertisingDataType::FLAGS - Bluetooth LE (BLE)"
    },
    "bluetooth-le-ble/blepeerdevice": {
      "title": "BlePeerDevice - Bluetooth LE (BLE)",
      "subsections": [
        {
          "level": 4,
          "anchor": "connected-",
          "title": "connected()"
        },
        {
          "level": 4,
          "anchor": "address-",
          "title": "address()"
        },
        {
          "level": 4,
          "anchor": "getcharacteristicbyuuid-",
          "title": "getCharacteristicByUUID()"
        },
        {
          "level": 4,
          "anchor": "getcharacteristicbydescription-",
          "title": "getCharacteristicByDescription()"
        },
        {
          "level": 4,
          "anchor": "blescanresult",
          "title": "BleScanResult"
        },
        {
          "level": 4,
          "anchor": "discoverallcharacteristics",
          "title": "discoverAllCharacteristics"
        }
      ]
    },
    "bluetooth-le-ble/bleaddress": {
      "title": "BleAddress - Bluetooth LE (BLE)",
      "subsections": [
        {
          "level": 4,
          "anchor": "copy-bleaddress-",
          "title": "copy (BleAddress)"
        },
        {
          "level": 4,
          "anchor": "address-byte-bleaddress-",
          "title": "address byte (BleAddress)"
        },
        {
          "level": 4,
          "anchor": "tostring-bleaddress-",
          "title": "toString (BleAddress)"
        },
        {
          "level": 4,
          "anchor": "equality-bleaddress-",
          "title": "equality (BleAddress)"
        },
        {
          "level": 4,
          "anchor": "valid-bleaddress-",
          "title": "valid (BleAddress)"
        },
        {
          "level": 4,
          "anchor": "getters",
          "title": "Getters"
        },
        {
          "level": 4,
          "anchor": "constructor-",
          "title": "Constructor"
        },
        {
          "level": 4,
          "anchor": "setters",
          "title": "Setters"
        }
      ]
    },
    "bluetooth-le-ble/bleaddresstype": {
      "title": "BleAddressType - Bluetooth LE (BLE)"
    },
    "bluetooth-le-ble/bleadvertisingeventtype": {
      "title": "BleAdvertisingEventType - Bluetooth LE (BLE)"
    },
    "bluetooth-le-ble/bleadvertisingparams": {
      "title": "BleAdvertisingParams - Bluetooth LE (BLE)"
    },
    "bluetooth-le-ble/blescanparams": {
      "title": "BleScanParams - Bluetooth LE (BLE)"
    },
    "bluetooth-le-ble/ibeacon": {
      "title": "iBeacon - Bluetooth LE (BLE)"
    },
    "ledger/ledger": {
      "title": "Ledger"
    },
    "ledger/set-ledger-class": {
      "title": "set() [Ledger class] - Ledger"
    },
    "ledger/setmode-ledger-class": {
      "title": "SetMode [Ledger class] - Ledger"
    },
    "ledger/ledger-synchronization": {
      "title": "Ledger synchronization - Ledger"
    },
    "ledger/get-ledger-class": {
      "title": "get() [Ledger class] - Ledger"
    },
    "ledger/lastupdated-ledger-class": {
      "title": "lastUpdated() [Ledger class] - Ledger"
    },
    "ledger/lastsynced-ledger-class": {
      "title": "lastSynced() [Ledger class] - Ledger"
    },
    "ledger/datasize-ledger-class": {
      "title": "dataSize [Ledger class] - Ledger"
    },
    "ledger/name-ledger-class": {
      "title": "name() [Ledger class] - Ledger"
    },
    "ledger/scope-ledger-class": {
      "title": "scope() [Ledger class] - Ledger"
    },
    "ledger/ledgerscope-ledger-class": {
      "title": "LedgerScope [Ledger class] - Ledger"
    },
    "ledger/iswritable-ledger-class": {
      "title": "isWritable() [Ledger class] - Ledger"
    },
    "ledger/onsync-onsynccallback-ledger-class": {
      "title": "onSync(OnSyncCallback) [Ledger class] - Ledger"
    },
    "ledger/onsync-onsyncfunction-ledger-class": {
      "title": "onSync(OnSyncFunction) [Ledger class] - Ledger"
    },
    "ledger/remove-ledger-class": {
      "title": "remove() [Ledger class] - Ledger"
    },
    "ledger/removeall-ledger-class": {
      "title": "removeAll() [Ledger class] - Ledger"
    },
    "ledgerdata/ledgerdata": {
      "title": "LedgerData"
    },
    "ledgerdata/constructor-variant-ledgerdata-class": {
      "title": "constructor (Variant) [LedgerData class] - LedgerData"
    },
    "ledgerdata/constructor-std-initializer_list-ledgerdata-class": {
      "title": "constructor (std::initializer_list<Entry>) [LedgerData class] - LedgerData"
    },
    "ledgerdata/set-ledgerdata-class": {
      "title": "set() [LedgerData class] - LedgerData"
    },
    "ledgerdata/remove-ledgerdata-class": {
      "title": "remove() [LedgerData class] - LedgerData"
    },
    "ledgerdata/get-ledgerdata-class": {
      "title": "get() [LedgerData class] - LedgerData"
    },
    "ledgerdata/operator-name-ledgerdata-class": {
      "title": "operator[name] [LedgerData class] - LedgerData"
    },
    "ledgerdata/has-ledgerdata-class": {
      "title": "has() [LedgerData class] - LedgerData"
    },
    "ledgerdata/isempty-ledgerdata-class": {
      "title": "isEmpty() [LedgerData class] - LedgerData"
    },
    "variant/variant": {
      "title": "Variant"
    },
    "variant/set-variant-class": {
      "title": "set() [Variant class] - Variant"
    },
    "variant/variant-type": {
      "title": "Variant::Type - Variant"
    },
    "variant/constructor-variant-class": {
      "title": "constructor [Variant class] - Variant"
    },
    "variant/value-variant-class": {
      "title": "value() [Variant class] - Variant"
    },
    "variant/value-as-and-to-variant-class": {
      "title": "value, as, and to [Variant class] - Variant"
    },
    "variant/type-variant-class": {
      "title": "type() [Variant class] - Variant"
    },
    "variant/isxxx-variant-class": {
      "title": "isXXX() [Variant class] - Variant"
    },
    "variant/tobool-variant-class": {
      "title": "toBool() [Variant class] - Variant"
    },
    "variant/asbool-variant-class": {
      "title": "asBool() [Variant class] - Variant"
    },
    "variant/toint-variant-class": {
      "title": "toInt() [Variant class] - Variant"
    },
    "variant/asint-variant-class": {
      "title": "asInt() [Variant class] - Variant"
    },
    "variant/touint-variant-class": {
      "title": "toUInt() [Variant class] - Variant"
    },
    "variant/asuint-variant-class": {
      "title": "asUInt() [Variant class] - Variant"
    },
    "variant/toint64-variant-class": {
      "title": "toInt64() [Variant class] - Variant"
    },
    "variant/asint64-variant-class": {
      "title": "asInt64() [Variant class] - Variant"
    },
    "variant/touint64-variant-class": {
      "title": "toUInt64() [Variant class] - Variant"
    },
    "variant/asuint64-variant-class": {
      "title": "asUInt64() [Variant class] - Variant"
    },
    "variant/todouble-variant-class": {
      "title": "toDouble() [Variant class] - Variant"
    },
    "variant/asdouble-variant-class": {
      "title": "asDouble() [Variant class] - Variant"
    },
    "variant/tostring-variant-class": {
      "title": "toString() [Variant class] - Variant"
    },
    "variant/asstring-variant-class": {
      "title": "asString() [Variant class] - Variant"
    },
    "variant/toarray-variant-class": {
      "title": "toArray() [Variant class] - Variant"
    },
    "variant/asarray-variant-class": {
      "title": "asArray() [Variant class] - Variant"
    },
    "variant/tomap-variant-class": {
      "title": "toMap() [Variant class] - Variant"
    },
    "variant/asmap-variant-class": {
      "title": "asMap() [Variant class] - Variant"
    },
    "variant/tojson-variant-class": {
      "title": "toJSON [Variant class] - Variant"
    },
    "variant/fromjson-variant-class": {
      "title": "fromJSON [Variant class] - Variant"
    },
    "variantarray/variantarray": {
      "title": "VariantArray"
    },
    "variantarray/append-variantarray": {
      "title": "append() [VariantArray] - VariantArray"
    },
    "variantarray/prepend-variantarray": {
      "title": "prepend() [VariantArray] - VariantArray"
    },
    "variantarray/insertat-variantarray": {
      "title": "insertAt() [VariantArray] - VariantArray"
    },
    "variantarray/removeat-variantarray": {
      "title": "removeAt() [VariantArray] - VariantArray"
    },
    "variantarray/at-variantarray": {
      "title": "at() [VariantArray] - VariantArray"
    },
    "variantmap/variantmap": {
      "title": "VariantMap"
    },
    "variantmap/set-variantmap": {
      "title": "set() [VariantMap] - VariantMap"
    },
    "variantmap/remove-variantmap": {
      "title": "remove() [VariantMap] - VariantMap"
    },
    "variantmap/get-variantmap": {
      "title": "get() [VariantMap] - VariantMap"
    },
    "variantmap/has-variantmap": {
      "title": "has() [VariantMap] - VariantMap"
    },
    "map/map": {
      "title": "Map"
    },
    "map/map-map-template": {
      "title": "Map() [Map template] - Map"
    },
    "map/map-std-initializer_list-entries-map-template": {
      "title": "Map(std::initializer_list<Entry> entries) [Map template] - Map"
    },
    "map/map-const-map-amp-map-map-template": {
      "title": "Map(const Map&amp; map) [Map template] - Map"
    },
    "map/set-const-t-amp-key-valuet-val-map-template": {
      "title": "set(const T&amp; key, ValueT val) [Map template] - Map"
    },
    "map/get-const-t-amp-key-map-template": {
      "title": "get(const T&amp; key) [Map template] - Map"
    },
    "map/get-const-t-amp-key-const-valuet-amp-defaultval-map-template": {
      "title": "get(const T&amp; key, const ValueT&amp; defaultVal) [Map template] - Map"
    },
    "map/has-const-t-amp-key-map-template": {
      "title": "has(const T&amp; key) [Map template] - Map"
    },
    "map/find-const-t-amp-key-map-template": {
      "title": "find(const T&amp; key) [Map template] - Map"
    },
    "map/begin-map-template": {
      "title": "begin() [Map template] - Map"
    },
    "map/end-map-template": {
      "title": "end() [Map template] - Map"
    },
    "map/erase-constiterator-pos-map-template": {
      "title": "erase(ConstIterator pos) [Map template] - Map"
    },
    "map/remove-const-t-amp-key-map-template": {
      "title": "remove(const T&amp; key) [Map template] - Map"
    },
    "map/clear-map-template": {
      "title": "clear() [Map template] - Map"
    },
    "map/size-map-template": {
      "title": "size() [Map template] - Map"
    },
    "map/isempty-map-template": {
      "title": "isEmpty() [Map template] - Map"
    },
    "map/operator-key-map-template": {
      "title": "operator[] (key) [Map template] - Map"
    },
    "vector/vector": {
      "title": "Vector"
    },
    "vector/vector-vector-template": {
      "title": "Vector() [Vector template] - Vector"
    },
    "vector/vector-int-n-vector-template": {
      "title": "Vector(int n) [Vector template] - Vector"
    },
    "vector/vector-int-n-const-t-amp-value-vector-template": {
      "title": "Vector(int n, const T&amp; value) [Vector template] - Vector"
    },
    "vector/vector-std-initializer_list-values-vector-template": {
      "title": "Vector(std::initializer_list<T> values) [Vector template] - Vector"
    },
    "vector/vector-const-vector-amp-vector-vector-template": {
      "title": "Vector(const Vector<T, AllocatorT>&amp; vector) [Vector template] - Vector"
    },
    "vector/append-t-value-vector-template": {
      "title": "append(T value) [Vector template] - Vector"
    },
    "vector/append-int-n-const-t-amp-value-vector-template": {
      "title": "append(int n, const T&amp; value) [Vector template] - Vector"
    },
    "vector/append-const-t-values-int-n-vector-template": {
      "title": "append(const T* values, int n) [Vector template] - Vector"
    },
    "vector/append-const-vector-amp-vecto-vector-template": {
      "title": "append(const Vector<T, AllocatorT>&amp; vecto) [Vector template] - Vector"
    },
    "vector/prepend-t-value-vector-template": {
      "title": "prepend(T value) [Vector template] - Vector"
    },
    "vector/prepend-int-n-const-t-amp-value-vector-template": {
      "title": "prepend(int n, const T&amp; value) [Vector template] - Vector"
    },
    "vector/prepend-const-t-values-int-n-vector-template": {
      "title": "prepend(const T* values, int n) [Vector template] - Vector"
    },
    "vector/prepend-const-vector-amp-vector-vector-template": {
      "title": "prepend(const Vector<T, AllocatorT>&amp; vector) [Vector template] - Vector"
    },
    "vector/insert-int-i-t-value-vector-template": {
      "title": "insert(int i, T value) [Vector template] - Vector"
    },
    "vector/insert-int-i-int-n-const-t-amp-value-vector-template": {
      "title": "insert(int i, int n, const T&amp; value) [Vector template] - Vector"
    },
    "vector/insert-int-i-const-t-values-int-n-vector-template": {
      "title": "insert(int i, const T* values, int n) [Vector template] - Vector"
    },
    "vector/insert-const-vector-amp-vector-vector-template": {
      "title": "insert(const Vector<T, AllocatorT>&amp; vector) [Vector template] - Vector"
    },
    "vector/removeat-removeat-int-i-int-n-1-vector-template": {
      "title": "removeAt(removeAt(int i, int n = 1) [Vector template] - Vector"
    },
    "vector/bool-removeone-const-t-amp-value-vector-template": {
      "title": "bool removeOne(const T&amp; value) [Vector template] - Vector"
    },
    "vector/bool-removeall-const-t-amp-value-vector-template": {
      "title": "bool removeAll(const T&amp; value) [Vector template] - Vector"
    },
    "vector/t-takefirst-vector-template": {
      "title": "T takeFirst() [Vector template] - Vector"
    },
    "vector/t-takelast-vector-template": {
      "title": "T takeLast() [Vector template] - Vector"
    },
    "vector/t-takeat-int-i-vector-template": {
      "title": "T takeAt(int i) [Vector template] - Vector"
    },
    "vector/t-first-vector-template": {
      "title": "T first() [Vector template] - Vector"
    },
    "vector/t-last-vector-template": {
      "title": "T last() [Vector template] - Vector"
    },
    "vector/t-at-int-i-vector-template": {
      "title": "T at(int i) [Vector template] - Vector"
    },
    "vector/operator-int-i-vector-template": {
      "title": "operator[] (int i) [Vector template] - Vector"
    },
    "vector/indexof-const-t-amp-value-int-i-0-vector-template": {
      "title": "indexOf(const T&amp; value, int i = 0) [Vector template] - Vector"
    },
    "vector/lastindexof-const-t-amp-value-vector-template": {
      "title": "lastIndexOf(const T&amp; value) [Vector template] - Vector"
    },
    "vector/lastindexof-const-t-amp-value-int-i-vector-template": {
      "title": "lastIndexOf(const T&amp; value, int i) [Vector template] - Vector"
    },
    "vector/contains-const-t-amp-value-vector-template": {
      "title": "contains(const T&amp; value) [Vector template] - Vector"
    },
    "vector/size-vector-template": {
      "title": "size() [Vector template] - Vector"
    },
    "vector/isempty-vector-template": {
      "title": "isEmpty() [Vector template] - Vector"
    },
    "vector/begin-vector-template": {
      "title": "begin() [Vector template] - Vector"
    },
    "vector/end-vector-template": {
      "title": "end() [Vector template] - Vector"
    },
    "vector/insert-constiterator-pos-t-value-vector-template": {
      "title": "insert(ConstIterator pos, T value) [Vector template] - Vector"
    },
    "nfc/nfc": {
      "title": "NFC"
    },
    "nfc/example-app": {
      "title": "Example app - NFC"
    },
    "nfc/nfc-on": {
      "title": "NFC.on() - NFC"
    },
    "nfc/nfc-off": {
      "title": "NFC.off() - NFC"
    },
    "nfc/nfc-update": {
      "title": "NFC.update() - NFC"
    },
    "nfc/nfc-settext": {
      "title": "NFC.setText() - NFC"
    },
    "nfc/nfc-seturi": {
      "title": "NFC.setUri() - NFC"
    },
    "nfc/nfc-setlaunchapp": {
      "title": "NFC.setLaunchApp() - NFC"
    },
    "nfc/nfc-setcustomdata": {
      "title": "NFC.setCustomData() - NFC"
    },
    "nfc/record-nfc": {
      "title": "Record (NFC) - NFC",
      "subsections": [
        {
          "level": 4,
          "anchor": "settnf-",
          "title": "setTnf();"
        },
        {
          "level": 4,
          "anchor": "settype-",
          "title": "setType()"
        },
        {
          "level": 4,
          "anchor": "setid-",
          "title": "setId()"
        },
        {
          "level": 4,
          "anchor": "setpayload-",
          "title": "setPayload()"
        }
      ]
    },
    "tcpserver/tcpserver": {
      "title": "TCPServer"
    },
    "tcpserver/begin": {
      "title": "begin() - TCPServer"
    },
    "tcpserver/available": {
      "title": "available() - TCPServer"
    },
    "tcpserver/write": {
      "title": "write() - TCPServer"
    },
    "tcpserver/print": {
      "title": "print() - TCPServer"
    },
    "tcpserver/println": {
      "title": "println() - TCPServer"
    },
    "tcpserver/getwriteerror": {
      "title": "getWriteError() - TCPServer"
    },
    "tcpserver/clearwriteerror": {
      "title": "clearWriteError() - TCPServer"
    },
    "tcpclient/tcpclient": {
      "title": "TCPClient"
    },
    "tcpclient/connected": {
      "title": "connected() - TCPClient"
    },
    "tcpclient/status": {
      "title": "status() - TCPClient"
    },
    "tcpclient/connect": {
      "title": "connect() - TCPClient"
    },
    "tcpclient/write": {
      "title": "write() - TCPClient"
    },
    "tcpclient/print": {
      "title": "print() - TCPClient"
    },
    "tcpclient/println": {
      "title": "println() - TCPClient"
    },
    "tcpclient/available": {
      "title": "available() - TCPClient"
    },
    "tcpclient/read": {
      "title": "read() - TCPClient"
    },
    "tcpclient/flush": {
      "title": "flush() - TCPClient"
    },
    "tcpclient/remoteip": {
      "title": "remoteIP() - TCPClient"
    },
    "tcpclient/stop": {
      "title": "stop() - TCPClient"
    },
    "tcpclient/getwriteerror": {
      "title": "getWriteError() - TCPClient"
    },
    "tcpclient/clearwriteerror": {
      "title": "clearWriteError() - TCPClient"
    },
    "udp/udp": {
      "title": "UDP"
    },
    "udp/begin": {
      "title": "begin() - UDP"
    },
    "udp/available": {
      "title": "available() - UDP"
    },
    "udp/beginpacket": {
      "title": "beginPacket() - UDP"
    },
    "udp/endpacket": {
      "title": "endPacket() - UDP"
    },
    "udp/write": {
      "title": "write() - UDP"
    },
    "udp/receivepacket": {
      "title": "receivePacket() - UDP"
    },
    "udp/parsepacket": {
      "title": "parsePacket() - UDP"
    },
    "udp/read": {
      "title": "read() - UDP"
    },
    "udp/flush": {
      "title": "flush() - UDP"
    },
    "udp/stop": {
      "title": "stop() - UDP"
    },
    "udp/remoteip": {
      "title": "remoteIP() - UDP"
    },
    "udp/remoteport": {
      "title": "remotePort() - UDP"
    },
    "udp/setbuffer": {
      "title": "setBuffer() - UDP"
    },
    "udp/releasebuffer": {
      "title": "releaseBuffer() - UDP"
    },
    "udp/sendpacket": {
      "title": "sendPacket() - UDP"
    },
    "udp/joinmulticast": {
      "title": "joinMulticast() - UDP"
    },
    "udp/leavemulticast": {
      "title": "leaveMulticast() - UDP"
    },
    "servo/servo": {
      "title": "Servo"
    },
    "servo/attach": {
      "title": "attach() - Servo"
    },
    "servo/write": {
      "title": "write() - Servo"
    },
    "servo/writemicroseconds": {
      "title": "writeMicroseconds() - Servo"
    },
    "servo/read": {
      "title": "read() - Servo"
    },
    "servo/attached": {
      "title": "attached() - Servo"
    },
    "servo/detach": {
      "title": "detach() - Servo"
    },
    "servo/settrim": {
      "title": "setTrim() - Servo"
    },
    "rgb/rgb": {
      "title": "RGB"
    },
    "rgb/control-user_control": {
      "title": "control(user_control) - RGB"
    },
    "rgb/controlled": {
      "title": "controlled() - RGB"
    },
    "rgb/color-red-green-blue": {
      "title": "color(red, green, blue) - RGB"
    },
    "rgb/brightness-val": {
      "title": "brightness(val) - RGB"
    },
    "rgb/brightness": {
      "title": "brightness() - RGB"
    },
    "rgb/onchange-handler": {
      "title": "onChange(handler) - RGB"
    },
    "rgb/mirrorto": {
      "title": "mirrorTo() - RGB"
    },
    "rgb/mirrordisable": {
      "title": "mirrorDisable() - RGB"
    },
    "led-signaling/led-signaling": {
      "title": "LED Signaling"
    },
    "led-signaling/ledstatus-class": {
      "title": "LEDStatus Class - LED Signaling",
      "subsections": [
        {
          "level": 4,
          "anchor": "ledstatus-",
          "title": "LEDStatus()"
        },
        {
          "level": 4,
          "anchor": "setcolor-",
          "title": "setColor()"
        },
        {
          "level": 4,
          "anchor": "color-",
          "title": "color()"
        },
        {
          "level": 4,
          "anchor": "setpattern-",
          "title": "setPattern()"
        },
        {
          "level": 4,
          "anchor": "pattern-",
          "title": "pattern()"
        },
        {
          "level": 4,
          "anchor": "setspeed-",
          "title": "setSpeed()"
        },
        {
          "level": 4,
          "anchor": "setperiod-",
          "title": "setPeriod()"
        },
        {
          "level": 4,
          "anchor": "period-",
          "title": "period()"
        },
        {
          "level": 4,
          "anchor": "setpriority-",
          "title": "setPriority()"
        },
        {
          "level": 4,
          "anchor": "priority-",
          "title": "priority()"
        },
        {
          "level": 4,
          "anchor": "on-",
          "title": "on()"
        },
        {
          "level": 4,
          "anchor": "off-",
          "title": "off()"
        },
        {
          "level": 4,
          "anchor": "toggle-",
          "title": "toggle()"
        },
        {
          "level": 4,
          "anchor": "ison-",
          "title": "isOn()"
        },
        {
          "level": 4,
          "anchor": "isoff-",
          "title": "isOff()"
        },
        {
          "level": 4,
          "anchor": "setactive-",
          "title": "setActive()"
        },
        {
          "level": 4,
          "anchor": "isactive-",
          "title": "isActive()"
        },
        {
          "level": 4,
          "anchor": "custom-patterns",
          "title": "Custom patterns"
        }
      ]
    },
    "led-signaling/ledsystemtheme-class": {
      "title": "LEDSystemTheme Class - LED Signaling",
      "subsections": [
        {
          "level": 4,
          "anchor": "ledsystemtheme-",
          "title": "LEDSystemTheme()"
        },
        {
          "level": 4,
          "anchor": "setcolor-",
          "title": "setColor()"
        },
        {
          "level": 4,
          "anchor": "color-",
          "title": "color()"
        },
        {
          "level": 4,
          "anchor": "setpattern-",
          "title": "setPattern()"
        },
        {
          "level": 4,
          "anchor": "pattern-",
          "title": "pattern()"
        },
        {
          "level": 4,
          "anchor": "setspeed-",
          "title": "setSpeed()"
        },
        {
          "level": 4,
          "anchor": "setperiod-",
          "title": "setPeriod()"
        },
        {
          "level": 4,
          "anchor": "period-",
          "title": "period()"
        },
        {
          "level": 4,
          "anchor": "setsignal-",
          "title": "setSignal()"
        },
        {
          "level": 4,
          "anchor": "apply-",
          "title": "apply()"
        },
        {
          "level": 4,
          "anchor": "restoredefault-",
          "title": "restoreDefault()"
        }
      ]
    },
    "led-signaling/ledsignal-enum": {
      "title": "LEDSignal Enum - LED Signaling"
    },
    "led-signaling/ledpriority-enum": {
      "title": "LEDPriority enum - LED Signaling"
    },
    "led-signaling/ledpattern-enum": {
      "title": "LEDPattern enum - LED Signaling"
    },
    "led-signaling/ledspeed-enum": {
      "title": "LEDSpeed enum - LED Signaling"
    },
    "led-signaling/rgb-colors": {
      "title": "RGB Colors - LED Signaling"
    },
    "time/time": {
      "title": "Time"
    },
    "time/millis": {
      "title": "millis() - Time"
    },
    "time/micros": {
      "title": "micros() - Time"
    },
    "time/delay": {
      "title": "delay() - Time"
    },
    "time/delaymicroseconds": {
      "title": "delayMicroseconds() - Time"
    },
    "time/hour": {
      "title": "hour() - Time"
    },
    "time/hourformat12": {
      "title": "hourFormat12() - Time"
    },
    "time/isam": {
      "title": "isAM() - Time"
    },
    "time/ispm": {
      "title": "isPM() - Time"
    },
    "time/minute": {
      "title": "minute() - Time"
    },
    "time/second": {
      "title": "second() - Time"
    },
    "time/day": {
      "title": "day() - Time"
    },
    "time/weekday": {
      "title": "weekday() - Time"
    },
    "time/month": {
      "title": "month() - Time"
    },
    "time/year": {
      "title": "year() - Time"
    },
    "time/now": {
      "title": "now() - Time"
    },
    "time/local": {
      "title": "local() - Time"
    },
    "time/zone": {
      "title": "zone() - Time"
    },
    "time/isdst": {
      "title": "isDST() - Time"
    },
    "time/getdstoffset": {
      "title": "getDSTOffset() - Time"
    },
    "time/setdstoffset": {
      "title": "setDSTOffset() - Time"
    },
    "time/begindst": {
      "title": "beginDST() - Time"
    },
    "time/enddst": {
      "title": "endDST() - Time"
    },
    "time/settime": {
      "title": "setTime() - Time"
    },
    "time/timestr": {
      "title": "timeStr() - Time"
    },
    "time/format": {
      "title": "format() - Time"
    },
    "time/setformat": {
      "title": "setFormat() - Time"
    },
    "time/getformat": {
      "title": "getFormat() - Time"
    },
    "time/isvalid": {
      "title": "isValid() - Time"
    },
    "time/advanced": {
      "title": "Advanced - Time"
    },
    "chrono-literals/chrono-literals": {
      "title": "Chrono Literals"
    },
    "interrupts/interrupts": {
      "title": "interrupts() - Interrupts"
    },
    "interrupts/attachinterrupt": {
      "title": "attachInterrupt() - Interrupts"
    },
    "interrupts/detachinterrupt": {
      "title": "detachInterrupt() - Interrupts"
    },
    "interrupts/nointerrupts": {
      "title": "noInterrupts() - Interrupts"
    },
    "software-timers/software-timers": {
      "title": "Software timers"
    },
    "software-timers/class-member-callbacks": {
      "title": "Class member callbacks - Software timers"
    },
    "software-timers/start": {
      "title": "start() - Software timers"
    },
    "software-timers/stop": {
      "title": "stop() - Software timers"
    },
    "software-timers/changeperiod": {
      "title": "changePeriod() - Software timers"
    },
    "software-timers/reset": {
      "title": "reset() - Software timers"
    },
    "software-timers/startfromisr": {
      "title": "startFromISR() - Software timers"
    },
    "software-timers/stopfromisr": {
      "title": "stopFromISR() - Software timers"
    },
    "software-timers/resetfromisr": {
      "title": "resetFromISR() - Software timers"
    },
    "software-timers/changeperiodfromisr": {
      "title": "changePeriodFromISR() - Software timers"
    },
    "software-timers/dispose": {
      "title": "dispose() - Software timers"
    },
    "software-timers/isactive": {
      "title": "isActive() - Software timers"
    },
    "watchdog-hardware/watchdog-hardware": {
      "title": "Watchdog - Hardware"
    },
    "watchdog-hardware/sleep-considerations": {
      "title": "Sleep considerations - Watchdog - Hardware",
      "subsections": [
        {
          "level": 4,
          "anchor": "watchdog-capabilities",
          "title": "Watchdog capabilities"
        }
      ]
    },
    "watchdog-hardware/watchdog-init": {
      "title": "Watchdog.init - Watchdog - Hardware"
    },
    "watchdog-hardware/watchdog-start": {
      "title": "Watchdog.start - Watchdog - Hardware"
    },
    "watchdog-hardware/watchdog-stop": {
      "title": "Watchdog.stop - Watchdog - Hardware"
    },
    "watchdog-hardware/watchdog-refresh": {
      "title": "Watchdog.refresh - Watchdog - Hardware",
      "subsections": [
        {
          "level": 4,
          "anchor": "watchdog-sleep_running",
          "title": "Watchdog SLEEP_RUNNING"
        }
      ]
    },
    "watchdog-hardware/watchdog-onexpired": {
      "title": "Watchdog.onExpired - Watchdog - Hardware"
    },
    "watchdog-application/watchdog-application": {
      "title": "Watchdog - Application"
    },
    "math/math": {
      "title": "Math"
    },
    "math/min": {
      "title": "min() - Math"
    },
    "math/max": {
      "title": "max() - Math"
    },
    "math/abs": {
      "title": "abs() - Math"
    },
    "math/constrain": {
      "title": "constrain() - Math"
    },
    "math/map-value-tranformation": {
      "title": "map() [value tranformation] - Math"
    },
    "math/pow": {
      "title": "pow() - Math"
    },
    "math/sqrt": {
      "title": "sqrt() - Math"
    },
    "random-numbers/random-numbers": {
      "title": "Random numbers"
    },
    "random-numbers/random": {
      "title": "random() - Random numbers"
    },
    "random-numbers/randomseed": {
      "title": "randomSeed() - Random numbers"
    },
    "random-numbers/hal_rng_getrandomnumber": {
      "title": "HAL_RNG_GetRandomNumber() - Random numbers"
    },
    "eeprom/eeprom": {
      "title": "EEPROM"
    },
    "eeprom/length": {
      "title": "length() - EEPROM"
    },
    "eeprom/put": {
      "title": "put() - EEPROM"
    },
    "eeprom/get": {
      "title": "get() - EEPROM"
    },
    "eeprom/read": {
      "title": "read() - EEPROM"
    },
    "eeprom/write": {
      "title": "write() - EEPROM"
    },
    "eeprom/clear": {
      "title": "clear() - EEPROM"
    },
    "eeprom/haspendingerase": {
      "title": "hasPendingErase() - EEPROM"
    },
    "eeprom/performpendingerase": {
      "title": "performPendingErase() - EEPROM"
    },
    "retained-memory/retained-memory": {
      "title": "Retained memory"
    },
    "retained-memory/storing-data-in-backup-ram-sram": {
      "title": "Storing data in Backup RAM (SRAM) - Retained memory"
    },
    "retained-memory/dynamically-allocated-objects": {
      "title": "Dynamically allocated objects - Retained memory"
    },
    "retained-memory/retained-data-validation": {
      "title": "Retained data validation - Retained memory"
    },
    "retained-memory/enabling-backup-ram-sram": {
      "title": "Enabling backup RAM (SRAM) - Retained memory"
    },
    "persistent-settings/persistent-settings": {
      "title": "Persistent settings"
    },
    "macros/startup": {
      "title": "STARTUP() - Macros"
    },
    "macros/product_version": {
      "title": "PRODUCT_VERSION() - Macros"
    },
    "macros/product_id": {
      "title": "PRODUCT_ID() - Macros",
      "subsections": [
        {
          "level": 4,
          "anchor": "device-os-4-0-and-later",
          "title": "Device OS 4.0 and later"
        },
        {
          "level": 4,
          "anchor": "device-os-before-3-x-and-earlier",
          "title": "Device OS before 3.x and earlier"
        },
        {
          "level": 4,
          "anchor": "device-os-1-5-3-to-3-x-wildcard",
          "title": "Device OS 1.5.3 to 3.x Wildcard"
        }
      ]
    },
    "sleep-sleep/sleep-sleep": {
      "title": "sleep() [ Sleep ]"
    },
    "sleep-sleep/mode-systemsleepconfiguration": {
      "title": "mode() (SystemSleepConfiguration) - sleep() [ Sleep ]"
    },
    "sleep-sleep/stop-systemsleepmode": {
      "title": "STOP (SystemSleepMode) - sleep() [ Sleep ]"
    },
    "sleep-sleep/ultra_low_power-systemsleepmode": {
      "title": "ULTRA_LOW_POWER (SystemSleepMode) - sleep() [ Sleep ]"
    },
    "sleep-sleep/hibernate-systemsleepmode": {
      "title": "HIBERNATE (SystemSleepMode) - sleep() [ Sleep ]"
    },
    "sleep-sleep/duration-systemsleepconfiguration": {
      "title": "duration() (SystemSleepConfiguration) - sleep() [ Sleep ]"
    },
    "sleep-sleep/gpio-systemsleepconfiguration": {
      "title": "gpio() (SystemSleepConfiguration) - sleep() [ Sleep ]"
    },
    "sleep-sleep/flag-systemsleepconfiguration": {
      "title": "flag() (SystemSleepConfiguration) - sleep() [ Sleep ]"
    },
    "sleep-sleep/network-systemsleepconfiguration": {
      "title": "network() (SystemSleepConfiguration) - sleep() [ Sleep ]"
    },
    "sleep-sleep/analog-systemsleepconfiguration": {
      "title": "analog() (SystemSleepConfiguration) - sleep() [ Sleep ]"
    },
    "sleep-sleep/usart-systemsleepconfiguration": {
      "title": "usart (SystemSleepConfiguration) - sleep() [ Sleep ]"
    },
    "sleep-sleep/ble-systemsleepconfiguration": {
      "title": "ble() (SystemSleepConfiguration) - sleep() [ Sleep ]"
    },
    "sleep-sleep/systemsleepresult-class": {
      "title": "SystemSleepResult class - sleep() [ Sleep ]",
      "subsections": [
        {
          "level": 4,
          "anchor": "wakeupreason-systemsleepresult-",
          "title": "wakeupReason() (SystemSleepResult)"
        },
        {
          "level": 4,
          "anchor": "wakeuppin-systemsleepresult-",
          "title": "wakeupPin() (SystemSleepResult)"
        },
        {
          "level": 4,
          "anchor": "error-systemsleepresult-",
          "title": "error() (SystemSleepResult)"
        },
        {
          "level": 4,
          "anchor": "tosleepresult-systemsleepresult-",
          "title": "toSleepResult() (SystemSleepResult)"
        }
      ]
    },
    "sleep-sleep/sleep-and-gpio-outputs": {
      "title": "Sleep and GPIO outputs - sleep() [ Sleep ]"
    },
    "sleep-classic-api/sleep-classic-api": {
      "title": "sleep() [ Classic API ]"
    },
    "sleep-classic-api/sleep-transitioning-from-classic-api": {
      "title": "Sleep [transitioning from classic API] - sleep() [ Classic API ]"
    },
    "sleep-classic-api/sleepresult-class": {
      "title": "SleepResult class - sleep() [ Classic API ]",
      "subsections": [
        {
          "level": 4,
          "anchor": "reason-",
          "title": "reason()"
        },
        {
          "level": 4,
          "anchor": "wokenupbypin-",
          "title": "wokenUpByPin()"
        },
        {
          "level": 4,
          "anchor": "wokenupbyrtc-",
          "title": "wokenUpByRtc()"
        },
        {
          "level": 4,
          "anchor": "rtc-",
          "title": "rtc()"
        },
        {
          "level": 4,
          "anchor": "pin-",
          "title": "pin()"
        },
        {
          "level": 4,
          "anchor": "error-",
          "title": "error()"
        }
      ]
    },
    "sleep-classic-api/sleepresult": {
      "title": "sleepResult() - sleep() [ Classic API ]"
    },
    "sleep-classic-api/wakeupreason": {
      "title": "wakeUpReason() - sleep() [ Classic API ]"
    },
    "sleep-classic-api/wokenupbypin": {
      "title": "wokenUpByPin() - sleep() [ Classic API ]"
    },
    "sleep-classic-api/wokenupbyrtc": {
      "title": "wokenUpByRtc() - sleep() [ Classic API ]"
    },
    "sleep-classic-api/wakeuppin": {
      "title": "wakeUpPin() - sleep() [ Classic API ]"
    },
    "sleep-classic-api/sleeperror": {
      "title": "sleepError() - sleep() [ Classic API ]"
    },
    "system-events/system-events": {
      "title": "System events"
    },
    "system-events/system-events-overview": {
      "title": "System events overview - System events",
      "subsections": [
        {
          "level": 4,
          "anchor": "registering-multiple-events-with-the-same-handler",
          "title": "Registering multiple events with the same handler"
        }
      ]
    },
    "system-events/system-events-reference": {
      "title": "System events reference - System events",
      "subsections": [
        {
          "level": 4,
          "anchor": "network_credentials-16-param-values",
          "title": "network_credentials (16) param values"
        },
        {
          "level": 4,
          "anchor": "network_status-32-param-values",
          "title": "network_status (32) param values"
        },
        {
          "level": 4,
          "anchor": "cloud_status-64-parameter-values",
          "title": "cloud_status (64) parameter values"
        }
      ]
    },
    "system-events/firmware_update-256-parameter-values": {
      "title": "firmware_update (256) parameter values - System events",
      "subsections": [
        {
          "level": 4,
          "anchor": "time_changed-16384-param-values-param-values",
          "title": "time_changed (16384) param values param values"
        },
        {
          "level": 4,
          "anchor": "ble_prov_mode-param-values",
          "title": "ble_prov_mode param values"
        }
      ]
    },
    "system-modes/system-modes": {
      "title": "System modes"
    },
    "system-modes/automatic-mode": {
      "title": "Automatic mode - System modes"
    },
    "system-modes/automatic-mode-threading-enabled": {
      "title": "Automatic mode (threading enabled) - System modes"
    },
    "system-modes/semi-automatic-mode": {
      "title": "Semi-automatic mode - System modes"
    },
    "system-modes/manual-mode": {
      "title": "Manual mode - System modes"
    },
    "system-thread/system-thread": {
      "title": "System thread"
    },
    "system-thread/system-threading-behavior": {
      "title": "System threading behavior - System thread"
    },
    "system-thread/system-functions": {
      "title": "System functions - System thread"
    },
    "system-thread/task-switching": {
      "title": "Task switching - System thread"
    },
    "system-thread/single_threaded_block": {
      "title": "SINGLE_THREADED_BLOCK() - System thread"
    },
    "system-thread/atomic_block": {
      "title": "ATOMIC_BLOCK() - System thread"
    },
    "system-thread/synchronizing-access-to-shared-system-resources": {
      "title": "Synchronizing access to shared system resources - System thread"
    },
    "system-thread/waiting-for-the-system": {
      "title": "Waiting for the system - System thread",
      "subsections": [
        {
          "level": 4,
          "anchor": "waituntil-",
          "title": "waitUntil()"
        },
        {
          "level": 4,
          "anchor": "waituntilnot-",
          "title": "waitUntilNot()"
        },
        {
          "level": 4,
          "anchor": "waitfor-",
          "title": "waitFor()"
        },
        {
          "level": 4,
          "anchor": "waitfornot-",
          "title": "waitForNot()"
        }
      ]
    },
    "threading/threading": {
      "title": "Threading"
    },
    "threading/os_thread_prio_t-threading": {
      "title": "os_thread_prio_t - Threading - Threading"
    },
    "threading/thread-stack-size-threading": {
      "title": "Thread stack size - Threading - Threading"
    },
    "threading/thread-functions-threading": {
      "title": "Thread functions - Threading - Threading"
    },
    "threading/yielding-to-other-threds-threading": {
      "title": "Yielding to other threds - Threading - Threading"
    },
    "threading/thread-class-threading": {
      "title": "Thread class - Threading - Threading",
      "subsections": [
        {
          "level": 4,
          "anchor": "thread-constructor-os_thread_fn_t-threading",
          "title": "Thread constructor os_thread_fn_t - Threading"
        },
        {
          "level": 4,
          "anchor": "thread-constructor-wiring_thread_fn_t-threading",
          "title": "Thread constructor wiring_thread_fn_t - Threading"
        }
      ]
    },
    "threading/thread-dispose-threading": {
      "title": "Thread::dispose - Threading - Threading"
    },
    "threading/thread-isvalid-threading": {
      "title": "Thread::isValid - Threading - Threading"
    },
    "threading/thread-iscurrent-threading": {
      "title": "Thread::isCurrent - Threading - Threading"
    },
    "threading/thread-isrunning-threading": {
      "title": "Thread::isRunning - Threading - Threading"
    },
    "threading/mutex-class-threading": {
      "title": "Mutex class - Threading - Threading",
      "subsections": [
        {
          "level": 4,
          "anchor": "mutex-constructor-threading",
          "title": "Mutex constructor - Threading"
        },
        {
          "level": 4,
          "anchor": "mutex-lock-threading",
          "title": "Mutex::lock - Threading"
        },
        {
          "level": 4,
          "anchor": "mutex-trylock-threading",
          "title": "Mutex::trylock - Threading"
        },
        {
          "level": 4,
          "anchor": "mutex-unlock-threading",
          "title": "Mutex::unlock - Threading"
        }
      ]
    },
    "threading/recursivemutex-class-threading": {
      "title": "RecursiveMutex class - Threading - Threading",
      "subsections": [
        {
          "level": 4,
          "anchor": "recursivemutex-constructor-threading",
          "title": "RecursiveMutex constructor - Threading"
        },
        {
          "level": 4,
          "anchor": "recursivemutex-lock-threading",
          "title": "RecursiveMutex::lock - Threading"
        },
        {
          "level": 4,
          "anchor": "recursivemutex-trylock-threading",
          "title": "RecursiveMutex::trylock - Threading"
        },
        {
          "level": 4,
          "anchor": "recursivemutexmutex-unlock-threading",
          "title": "RecursiveMutexMutex::unlock - Threading"
        }
      ]
    },
    "threading/locking-threading": {
      "title": "Locking - Threading - Threading"
    },
    "threading/serial-debugging-threading": {
      "title": "Serial debugging - Threading - Threading"
    },
    "system-calls/version": {
      "title": "version() - System calls"
    },
    "system-calls/versionnumber": {
      "title": "versionNumber() - System calls"
    },
    "system-calls/buttonpushed": {
      "title": "buttonPushed() - System calls"
    },
    "system-calls/system-cycle-counter": {
      "title": "System cycle counter - System calls",
      "subsections": [
        {
          "level": 4,
          "anchor": "ticks-",
          "title": "ticks()"
        },
        {
          "level": 4,
          "anchor": "tickspermicrosecond-",
          "title": "ticksPerMicrosecond();"
        },
        {
          "level": 4,
          "anchor": "ticksdelay-",
          "title": "ticksDelay()"
        }
      ]
    },
    "system-calls/freememory": {
      "title": "freeMemory() - System calls"
    },
    "system-calls/reset": {
      "title": "reset() - System calls"
    },
    "system-calls/dfu": {
      "title": "dfu() - System calls"
    },
    "system-calls/entersafemode": {
      "title": "enterSafeMode() - System calls"
    },
    "system-calls/deviceid": {
      "title": "deviceID() - System calls"
    },
    "system-calls/system-millis": {
      "title": "System.millis() - System calls"
    },
    "system-calls/system-uptime": {
      "title": "System.uptime() - System calls"
    },
    "system-calls/powersource": {
      "title": "powerSource() - System calls"
    },
    "system-calls/batterystate": {
      "title": "batteryState() - System calls"
    },
    "system-calls/batterycharge": {
      "title": "batteryCharge() - System calls"
    },
    "system-calls/onassetota-system": {
      "title": "onAssetOta - System - System calls"
    },
    "system-calls/assetshandled-system": {
      "title": "assetsHandled - System - System calls"
    },
    "system-calls/assetsavailable-system": {
      "title": "assetsAvailable - System - System calls"
    },
    "system-calls/disablereset": {
      "title": "disableReset() - System calls"
    },
    "system-calls/enablereset": {
      "title": "enableReset() - System calls"
    },
    "system-calls/resetpending": {
      "title": "resetPending() - System calls"
    },
    "system-calls/reset-reason": {
      "title": "Reset reason - System calls"
    },
    "system-calls/backupramsync": {
      "title": "backupRamSync - System calls"
    },
    "system-calls/system-config-set": {
      "title": "System config [ set ] - System calls"
    },
    "system-calls/system-flags-disable": {
      "title": "System flags [ disable ] - System calls"
    },
    "system-calls/system-enablefeature": {
      "title": "System.enableFeature - System calls"
    },
    "system-calls/system-disablefeature": {
      "title": "System.disableFeature - System calls"
    },
    "system-calls/system-featureenabled": {
      "title": "System.featureEnabled - System calls",
      "subsections": [
        {
          "level": 4,
          "anchor": "feature_disable_listening_mode",
          "title": "FEATURE_DISABLE_LISTENING_MODE"
        }
      ]
    },
    "system-calls/system-setcontrolrequestfilter": {
      "title": "System.setControlRequestFilter - System calls",
      "subsections": [
        {
          "level": 4,
          "anchor": "systemcontrolrequestaclaction",
          "title": "SystemControlRequestAclAction"
        },
        {
          "level": 4,
          "anchor": "systemcontrolrequestacl",
          "title": "SystemControlRequestAcl"
        },
        {
          "level": 4,
          "anchor": "ctrl_request_type",
          "title": "ctrl_request_type"
        }
      ]
    },
    "system-interrupts/system-interrupts": {
      "title": "System interrupts"
    },
    "system-interrupts/attachsysteminterrupt": {
      "title": "attachSystemInterrupt() - System interrupts"
    },
    "system-interrupts/detachsysteminterrupt": {
      "title": "detachSystemInterrupt() - System interrupts"
    },
    "system-interrupts/attachinteruptdirect": {
      "title": "attachInteruptDirect() - System interrupts"
    },
    "system-interrupts/detachinterruptdirect": {
      "title": "detachInterruptDirect() - System interrupts"
    },
    "system-interrupts/buttonmirror": {
      "title": "buttonMirror() - System interrupts"
    },
    "system-interrupts/disablebuttonmirror": {
      "title": "disableButtonMirror() - System interrupts"
    },
    "system-interrupts/system-features": {
      "title": "System features - System interrupts",
      "subsections": [
        {
          "level": 4,
          "anchor": "feature_retained_memory",
          "title": "FEATURE_RETAINED_MEMORY"
        },
        {
          "level": 4,
          "anchor": "feature_wifi_powersave_clock",
          "title": "FEATURE_WIFI_POWERSAVE_CLOCK"
        }
      ]
    },
    "file-system/file-system": {
      "title": "File system"
    },
    "file-system/file-system-open": {
      "title": "File system open - File system"
    },
    "file-system/file-system-write": {
      "title": "File system write - File system"
    },
    "file-system/file-system-read": {
      "title": "File system read - File system"
    },
    "file-system/file-system-lseek": {
      "title": "File system lseek - File system"
    },
    "file-system/file-system-close": {
      "title": "File system close - File system"
    },
    "file-system/file-system-fsync": {
      "title": "File system fsync - File system"
    },
    "file-system/file-system-truncate": {
      "title": "File system truncate - File system"
    },
    "file-system/file-system-ftruncate": {
      "title": "File system ftruncate - File system"
    },
    "file-system/file-system-fstat": {
      "title": "File system fstat - File system"
    },
    "file-system/file-system-stat": {
      "title": "File system stat - File system"
    },
    "file-system/file-system-mkdir": {
      "title": "File system mkdir - File system"
    },
    "file-system/file-system-rmdir": {
      "title": "File system rmdir - File system"
    },
    "file-system/file-system-unlink": {
      "title": "File system unlink - File system"
    },
    "file-system/file-system-rename": {
      "title": "File system rename - File system"
    },
    "file-system/file-system-opendir": {
      "title": "File system opendir - File system"
    },
    "file-system/file-system-readdir": {
      "title": "File system readdir - File system"
    },
    "file-system/file-system-telldir": {
      "title": "File system telldir - File system"
    },
    "file-system/file-system-seekdir": {
      "title": "File system seekdir - File system"
    },
    "file-system/file-system-rewinddir": {
      "title": "File system rewinddir - File system"
    },
    "file-system/file-system-readdir_r": {
      "title": "File system readdir_r - File system"
    },
    "file-system/file-system-closedir": {
      "title": "File system closedir - File system"
    },
    "ota-updates/ota-updates": {
      "title": "OTA Updates"
    },
    "ota-updates/controlling-ota-availability": {
      "title": "Controlling OTA availability - OTA Updates"
    },
    "ota-updates/system-disableupdates": {
      "title": "System.disableUpdates() - OTA Updates"
    },
    "ota-updates/system-enableupdates": {
      "title": "System.enableUpdates() - OTA Updates"
    },
    "ota-updates/system-updatesenabled": {
      "title": "System.updatesEnabled() - OTA Updates"
    },
    "ota-updates/system-updatespending": {
      "title": "System.updatesPending() - OTA Updates"
    },
    "ota-updates/system-updatesforced": {
      "title": "System.updatesForced() - OTA Updates"
    },
    "asset-ota/asset-ota": {
      "title": "Asset OTA"
    },
    "asset-ota/applicationasset": {
      "title": "ApplicationAsset - Asset OTA",
      "subsections": [
        {
          "level": 4,
          "anchor": "name-applicationasset",
          "title": "name() - ApplicationAsset"
        },
        {
          "level": 4,
          "anchor": "hash-applicationasset",
          "title": "hash() - ApplicationAsset"
        },
        {
          "level": 4,
          "anchor": "size-applicationasset",
          "title": "size() - ApplicationAsset"
        },
        {
          "level": 4,
          "anchor": "storagesize-applicationasset",
          "title": "storageSize() - ApplicationAsset"
        },
        {
          "level": 4,
          "anchor": "isvalid-applicationasset",
          "title": "isValid() - ApplicationAsset"
        },
        {
          "level": 4,
          "anchor": "isreadable-applicationasset",
          "title": "isReadable() - ApplicationAsset"
        },
        {
          "level": 4,
          "anchor": "available-applicationasset",
          "title": "available() - ApplicationAsset"
        },
        {
          "level": 4,
          "anchor": "read-applicationasset",
          "title": "read() - ApplicationAsset"
        },
        {
          "level": 4,
          "anchor": "peek-applicationasset",
          "title": "peek() - ApplicationAsset"
        },
        {
          "level": 4,
          "anchor": "skip-applicationasset",
          "title": "skip() - ApplicationAsset"
        },
        {
          "level": 4,
          "anchor": "reset-applicationasset",
          "title": "reset() - ApplicationAsset"
        }
      ]
    },
    "asset-ota/assethash": {
      "title": "AssetHash - Asset OTA",
      "subsections": [
        {
          "level": 4,
          "anchor": "constructor-assethash",
          "title": "Constructor - AssetHash"
        },
        {
          "level": 4,
          "anchor": "type-assethash",
          "title": "type() - AssetHash"
        },
        {
          "level": 4,
          "anchor": "hash-assethash",
          "title": "hash() - AssetHash"
        },
        {
          "level": 4,
          "anchor": "isvalid-assethash",
          "title": "isValid() - AssetHash"
        },
        {
          "level": 4,
          "anchor": "tostring-assethash",
          "title": "toString() - AssetHash"
        },
        {
          "level": 4,
          "anchor": "operator-assethash",
          "title": "operator==() - AssetHash"
        },
        {
          "level": 4,
          "anchor": "operator-assethash",
          "title": "operator!=() - AssetHash"
        }
      ]
    },
    "checking-for-features/checking-for-features": {
      "title": "Checking for features"
    },
    "checking-for-features/checking-device-os-version": {
      "title": "Checking Device OS Version - Checking for features"
    },
    "checking-for-features/checking-platform-id": {
      "title": "Checking Platform ID - Checking for features"
    },
    "language-arduino-compatibility/language-arduino-compatibility": {
      "title": "Language - Arduino Compatibility"
    },
    "language-arduino-compatibility/enabling-extended-arduino-sdk-compatibility": {
      "title": "Enabling extended Arduino SDK compatibility - Language - Arduino Compatibility"
    },
    "language-arduino-compatibility/arduino-apis-added-by-firmware-version": {
      "title": "Arduino APIs added by firmware version - Language - Arduino Compatibility"
    },
    "language-arduino-compatibility/adding-arduino-symbols-to-applications-and-libraries": {
      "title": "Adding Arduino symbols to applications and libraries - Language - Arduino Compatibility"
    },
    "string-class/string-class": {
      "title": "String class"
    },
    "string-class/string": {
      "title": "String() - String class"
    },
    "string-class/charat": {
      "title": "charAt() - String class"
    },
    "string-class/compareto": {
      "title": "compareTo() - String class"
    },
    "string-class/comparison-operators-string": {
      "title": "comparison operators (String) - String class"
    },
    "string-class/concat": {
      "title": "concat() - String class"
    },
    "string-class/concatenation-operators-string": {
      "title": "Concatenation operators (String) - String class"
    },
    "string-class/endswith": {
      "title": "endsWith() - String class"
    },
    "string-class/equals": {
      "title": "equals() - String class"
    },
    "string-class/equality-operators-string": {
      "title": "Equality operators (String) - String class"
    },
    "string-class/equalsignorecase": {
      "title": "equalsIgnoreCase() - String class"
    },
    "string-class/format": {
      "title": "format() - String class"
    },
    "string-class/getbytes": {
      "title": "getBytes() - String class"
    },
    "string-class/c_str": {
      "title": "c_str() - String class"
    },
    "string-class/indexof": {
      "title": "indexOf() - String class"
    },
    "string-class/lastindexof": {
      "title": "lastIndexOf() - String class"
    },
    "string-class/length": {
      "title": "length() - String class"
    },
    "string-class/remove": {
      "title": "remove() - String class"
    },
    "string-class/replace": {
      "title": "replace() - String class"
    },
    "string-class/reserve": {
      "title": "reserve() - String class"
    },
    "string-class/setcharat": {
      "title": "setCharAt() - String class"
    },
    "string-class/startswith": {
      "title": "startsWith() - String class"
    },
    "string-class/substring": {
      "title": "substring() - String class"
    },
    "string-class/tochararray": {
      "title": "toCharArray() - String class"
    },
    "string-class/tofloat": {
      "title": "toFloat() - String class"
    },
    "string-class/toint": {
      "title": "toInt() - String class"
    },
    "string-class/tolowercase": {
      "title": "toLowerCase() - String class"
    },
    "string-class/touppercase": {
      "title": "toUpperCase() - String class"
    },
    "string-class/trim": {
      "title": "trim() - String class"
    },
    "stream-class/stream-class": {
      "title": "Stream class"
    },
    "stream-class/settimeout": {
      "title": "setTimeout() - Stream class"
    },
    "stream-class/find": {
      "title": "find() - Stream class"
    },
    "stream-class/finduntil": {
      "title": "findUntil() - Stream class"
    },
    "stream-class/readbytes": {
      "title": "readBytes() - Stream class"
    },
    "stream-class/readbytesuntil": {
      "title": "readBytesUntil() - Stream class"
    },
    "stream-class/readstring": {
      "title": "readString() - Stream class"
    },
    "stream-class/readstringuntil": {
      "title": "readStringUntil() - Stream class"
    },
    "stream-class/parseint": {
      "title": "parseInt() - Stream class"
    },
    "stream-class/parsefloat": {
      "title": "parseFloat() - Stream class"
    },
    "json/json": {
      "title": "JSON"
    },
    "json/jsonwriter": {
      "title": "JSONWriter - JSON",
      "subsections": [
        {
          "level": 4,
          "anchor": "jsonwriter-beginarray-",
          "title": "JSONWriter::beginArray()"
        },
        {
          "level": 4,
          "anchor": "jsonwriter-endarray-",
          "title": "JSONWriter::endArray()"
        },
        {
          "level": 4,
          "anchor": "jsonwriter-beginobject-",
          "title": "JSONWriter::beginObject()"
        },
        {
          "level": 4,
          "anchor": "jsonwriter-endobject-",
          "title": "JSONWriter::endObject()"
        },
        {
          "level": 4,
          "anchor": "jsonwriter-name-const-char-name-",
          "title": "JSONWriter::name(const char *name)"
        },
        {
          "level": 4,
          "anchor": "jsonwriter-name-const-char-name-size_t-size-",
          "title": "JSONWriter::name(const char *name, size_t size)"
        },
        {
          "level": 4,
          "anchor": "jsonwriter-name-const-string-amp-name-",
          "title": "JSONWriter::name(const String &name)"
        },
        {
          "level": 4,
          "anchor": "jsonwriter-value-bool-val-",
          "title": "JsonWriter::value(bool val)"
        },
        {
          "level": 4,
          "anchor": "jsonwriter-value-int-val-",
          "title": "JsonWriter::value(int val)"
        },
        {
          "level": 4,
          "anchor": "jsonwriter-value-unsigned-val-",
          "title": "JsonWriter::value(unsigned val)"
        },
        {
          "level": 4,
          "anchor": "jsonwriter-value-double-val-int-precision-",
          "title": "JsonWriter::value(double val, int precision)"
        },
        {
          "level": 4,
          "anchor": "jsonwriter-value-double-val-",
          "title": "JsonWriter::value(double val)"
        },
        {
          "level": 4,
          "anchor": "jsonwriter-value-const-char-val-",
          "title": "JsonWriter::value(const char *val)"
        },
        {
          "level": 4,
          "anchor": "jsonwriter-value-const-char-val-size_t-size-",
          "title": "JsonWriter::value(const char *val, size_t size)"
        },
        {
          "level": 4,
          "anchor": "jsonwriter-value-const-string-amp-val-",
          "title": "JsonWriter::value(const String &val)"
        },
        {
          "level": 4,
          "anchor": "jsonwriter-nullvalue-",
          "title": "JsonWriter::nullValue()"
        }
      ]
    },
    "json/jsonbufferwriter": {
      "title": "JSONBufferWriter - JSON",
      "subsections": [
        {
          "level": 4,
          "anchor": "jsonbufferwriter-jsonbufferwriter-char-buf-size_t-size-",
          "title": "JSONBufferWriter::JSONBufferWriter(char *buf, size_t size)"
        },
        {
          "level": 4,
          "anchor": "jsonbufferwriter-buffer-",
          "title": "JSONBufferWriter::buffer()"
        },
        {
          "level": 4,
          "anchor": "jsonbufferwriter-buffersize-",
          "title": "JSONBufferWriter::bufferSize()"
        },
        {
          "level": 4,
          "anchor": "jsonbufferwriter-datasize-",
          "title": "JSONBufferWriter::dataSize()"
        }
      ]
    },
    "json/jsonstreamwriter": {
      "title": "JSONStreamWriter - JSON",
      "subsections": [
        {
          "level": 4,
          "anchor": "jsonstreamwriter-jsonstreamwriter-print-amp-stream-",
          "title": "JSONStreamWriter::JSONStreamWriter(Print &stream)"
        },
        {
          "level": 4,
          "anchor": "jsonstreamwriter-stream-",
          "title": "JSONStreamWriter::stream()"
        }
      ]
    },
    "json/parsing": {
      "title": "Parsing - JSON"
    },
    "json/jsonvalue": {
      "title": "JSONValue - JSON",
      "subsections": [
        {
          "level": 4,
          "anchor": "jsonvalue-isnull-",
          "title": "JSONValue::isNull()"
        },
        {
          "level": 4,
          "anchor": "jsonvalue-isbool-",
          "title": "JSONValue::isBool()"
        },
        {
          "level": 4,
          "anchor": "jsonvalue-isnumber-",
          "title": "JSONValue::isNumber()"
        },
        {
          "level": 4,
          "anchor": "jsonvalue-isstring-",
          "title": "JSONValue::isString()"
        },
        {
          "level": 4,
          "anchor": "jsonvalue-isarray-",
          "title": "JSONValue::isArray()"
        },
        {
          "level": 4,
          "anchor": "jsonvalue-isobject-",
          "title": "JSONValue::isObject()"
        },
        {
          "level": 4,
          "anchor": "jsonvalue-type-",
          "title": "JSONValue::type()"
        },
        {
          "level": 4,
          "anchor": "jsonvalue-tobool-",
          "title": "JSONValue::toBool()"
        },
        {
          "level": 4,
          "anchor": "jsonvalue-toint-",
          "title": "JSONValue::toInt()"
        },
        {
          "level": 4,
          "anchor": "jsonvalue-todouble-",
          "title": "JSONValue::toDouble()"
        },
        {
          "level": 4,
          "anchor": "jsonvalue-tostring-",
          "title": "JSONValue::toString()"
        },
        {
          "level": 4,
          "anchor": "jsonvalue-isvalid-",
          "title": "JSONValue::isValid()"
        }
      ]
    },
    "json/jsonstring": {
      "title": "JSONString - JSON",
      "subsections": [
        {
          "level": 4,
          "anchor": "jsonstring-jsonstring-const-jsonvalue-amp-value-",
          "title": "JSONString::JSONString(const JSONValue &value);"
        },
        {
          "level": 4,
          "anchor": "jsonstring-data-",
          "title": "JSONString::data()"
        },
        {
          "level": 4,
          "anchor": "jsonstring-operator-const-char-",
          "title": "JSONString::operator const char *()"
        },
        {
          "level": 4,
          "anchor": "jsonstring-operator-string-",
          "title": "JSONString::operator String()"
        },
        {
          "level": 4,
          "anchor": "jsonstring-size-",
          "title": "JSONString::size()"
        },
        {
          "level": 4,
          "anchor": "jsonstring-isempty-",
          "title": "JSONString::isEmpty()"
        },
        {
          "level": 4,
          "anchor": "jsonstring-operator-",
          "title": "JSONString::operator==()"
        },
        {
          "level": 4,
          "anchor": "jsonstring-operator-",
          "title": "JSONString::operator!=()"
        }
      ]
    },
    "json/jsonobjectiterator": {
      "title": "JSONObjectIterator - JSON",
      "subsections": [
        {
          "level": 4,
          "anchor": "jsonobjectiterator-jsonobjectiterator-const-jsonvalue-amp-value-",
          "title": "JSONObjectIterator::JSONObjectIterator(const JSONValue &value)"
        },
        {
          "level": 4,
          "anchor": "jsonobjectiterator-next-",
          "title": "JSONObjectIterator::next()"
        },
        {
          "level": 4,
          "anchor": "jsonobjectiterator-name-",
          "title": "JSONObjectIterator::name()"
        },
        {
          "level": 4,
          "anchor": "jsonobjectiterator-value-",
          "title": "JSONObjectIterator::value()"
        },
        {
          "level": 4,
          "anchor": "jsonobjectiterator-count-",
          "title": "JSONObjectIterator::count()"
        }
      ]
    },
    "json/jsonarrayiterator": {
      "title": "JSONArrayIterator - JSON",
      "subsections": [
        {
          "level": 4,
          "anchor": "jsonarrayiterator-jsonarrayiterator-const-jsonvalue-amp-value-",
          "title": "JSONArrayIterator::JSONArrayIterator(const JSONValue &value)"
        },
        {
          "level": 4,
          "anchor": "jsonarrayiterator-next-",
          "title": "JSONArrayIterator::next()"
        },
        {
          "level": 4,
          "anchor": "jsonarrayiterator-value-",
          "title": "JSONArrayIterator::value()"
        },
        {
          "level": 4,
          "anchor": "jsonarrayiterator-count-",
          "title": "JSONArrayIterator::count()"
        }
      ]
    },
    "debugging/debugging": {
      "title": "Debugging"
    },
    "debugging/using-a-serial-terminal": {
      "title": "Using a serial terminal - Debugging"
    },
    "debugging/serial-print-vs-log-info": {
      "title": "Serial.print vs. Log.info - Debugging"
    },
    "debugging/waiting-for-serial": {
      "title": "Waiting for serial - Debugging"
    },
    "debugging/comm-protocol-errors": {
      "title": "comm.protocol errors - Debugging"
    },
    "debugging/system-errors": {
      "title": "System errors - Debugging"
    },
    "logging/logging": {
      "title": "Logging"
    },
    "logging/logging-levels": {
      "title": "Logging levels - Logging"
    },
    "logging/logging-categories": {
      "title": "Logging categories - Logging"
    },
    "logging/additional-attributes": {
      "title": "Additional attributes - Logging"
    },
    "logging/log-handlers": {
      "title": "Log handlers - Logging",
      "subsections": [
        {
          "level": 4,
          "anchor": "community-log-handlers",
          "title": "Community log handlers"
        }
      ]
    },
    "logging/logger-class": {
      "title": "Logger class - Logging"
    },
    "device-identifiers/device-identifiers": {
      "title": "Device identifiers"
    },
    "device-identifiers/device-id": {
      "title": "Device ID - Device identifiers"
    },
    "device-identifiers/serial-number": {
      "title": "Serial number - Device identifiers"
    },
    "device-identifiers/data-matrix-sticker": {
      "title": "Data matrix sticker - Device identifiers"
    },
    "device-identifiers/iccid": {
      "title": "ICCID - Device identifiers"
    },
    "device-identifiers/imei": {
      "title": "IMEI - Device identifiers"
    },
    "device-identifiers/imsi": {
      "title": "IMSI - Device identifiers"
    },
    "device-identifiers/mobile-secret": {
      "title": "Mobile secret - Device identifiers"
    },
    "device-identifiers/device-name": {
      "title": "Device name - Device identifiers"
    },
    "device-identifiers/mac-address": {
      "title": "MAC address - Device identifiers"
    },
    "global-object-constructors/global-object-constructors": {
      "title": "Global object constructors"
    },
    "language-syntax/language-syntax": {
      "title": "Language syntax"
    },
    "language-syntax/structure": {
      "title": "Structure - Language syntax",
      "subsections": [
        {
          "level": 4,
          "anchor": "setup-",
          "title": "setup()"
        },
        {
          "level": 4,
          "anchor": "loop-",
          "title": "loop()"
        }
      ]
    },
    "language-syntax/control-structures": {
      "title": "Control structures - Language syntax",
      "subsections": [
        {
          "level": 4,
          "anchor": "if",
          "title": "if"
        },
        {
          "level": 4,
          "anchor": "comparison-operators",
          "title": "Comparison operators"
        },
        {
          "level": 4,
          "anchor": "if-else",
          "title": "if...else"
        },
        {
          "level": 4,
          "anchor": "for",
          "title": "for"
        },
        {
          "level": 4,
          "anchor": "switch-case",
          "title": "switch case"
        },
        {
          "level": 4,
          "anchor": "while",
          "title": "while"
        },
        {
          "level": 4,
          "anchor": "do-while",
          "title": "do... while"
        },
        {
          "level": 4,
          "anchor": "break",
          "title": "break"
        },
        {
          "level": 4,
          "anchor": "continue",
          "title": "continue"
        },
        {
          "level": 4,
          "anchor": "return",
          "title": "return"
        },
        {
          "level": 4,
          "anchor": "goto",
          "title": "goto"
        }
      ]
    },
    "language-syntax/further-syntax": {
      "title": "Further syntax - Language syntax",
      "subsections": [
        {
          "level": 4,
          "anchor": "-semicolon-",
          "title": "; (semicolon)"
        },
        {
          "level": 4,
          "anchor": "-curly-braces-",
          "title": "{} (curly braces)"
        },
        {
          "level": 4,
          "anchor": "-single-line-comment-",
          "title": "// (single line comment)"
        },
        {
          "level": 4,
          "anchor": "-multi-line-comment-",
          "title": "/\\* \\*/ (multi-line comment)"
        },
        {
          "level": 4,
          "anchor": "-define",
          "title": "#define"
        },
        {
          "level": 4,
          "anchor": "-include",
          "title": "#include"
        }
      ]
    },
    "language-syntax/arithmetic-operators": {
      "title": "Arithmetic operators - Language syntax",
      "subsections": [
        {
          "level": 4,
          "anchor": "-assignment-operator-",
          "title": "= (assignment operator)"
        },
        {
          "level": 4,
          "anchor": "-addition-subtraction-multiplication-division-",
          "title": "+ - * / (addition subtraction multiplication division)"
        },
        {
          "level": 4,
          "anchor": "-modulo-",
          "title": "% (modulo)"
        }
      ]
    },
    "language-syntax/boolean-operators": {
      "title": "Boolean operators - Language syntax",
      "subsections": [
        {
          "level": 4,
          "anchor": "-amp-amp-and-",
          "title": "&& (and)"
        },
        {
          "level": 4,
          "anchor": "-or-",
          "title": "|| (or)"
        },
        {
          "level": 4,
          "anchor": "-not-",
          "title": "! (not)"
        }
      ]
    },
    "language-syntax/bitwise-operators": {
      "title": "Bitwise operators - Language syntax",
      "subsections": [
        {
          "level": 4,
          "anchor": "-amp-bitwise-and-",
          "title": "& (bitwise and)"
        },
        {
          "level": 4,
          "anchor": "-bitwise-or-",
          "title": "| (bitwise or)"
        },
        {
          "level": 4,
          "anchor": "-bitwise-xor-",
          "title": "^ (bitwise xor)"
        },
        {
          "level": 4,
          "anchor": "-bitwise-not-",
          "title": "~ (bitwise not)"
        },
        {
          "level": 4,
          "anchor": "bitwise-shift",
          "title": "bitwise shift"
        }
      ]
    },
    "language-syntax/compound-operators": {
      "title": "Compound operators - Language syntax",
      "subsections": [
        {
          "level": 4,
          "anchor": "-increment-decrement-",
          "title": "++ (increment), -- (decrement)"
        },
        {
          "level": 4,
          "anchor": "compound-arithmetic",
          "title": "compound arithmetic"
        },
        {
          "level": 4,
          "anchor": "-amp-compound-bitwise-and-",
          "title": "&= (compound bitwise and)"
        },
        {
          "level": 4,
          "anchor": "-compound-bitwise-or-",
          "title": "|= (compound bitwise or)"
        }
      ]
    },
    "language-syntax/variables": {
      "title": "Variables - Language syntax",
      "subsections": [
        {
          "level": 4,
          "anchor": "high-low",
          "title": "HIGH | LOW"
        },
        {
          "level": 4,
          "anchor": "input-output-input_pullup-input_pulldown",
          "title": "INPUT, OUTPUT, INPUT_PULLUP, INPUT_PULLDOWN"
        },
        {
          "level": 4,
          "anchor": "true-false",
          "title": "true | false"
        }
      ]
    },
    "language-syntax/data-types": {
      "title": "Data types - Language syntax",
      "subsections": [
        {
          "level": 4,
          "anchor": "void",
          "title": "void"
        },
        {
          "level": 4,
          "anchor": "boolean",
          "title": "boolean"
        },
        {
          "level": 4,
          "anchor": "char",
          "title": "char"
        },
        {
          "level": 4,
          "anchor": "unsigned-char",
          "title": "unsigned char"
        },
        {
          "level": 4,
          "anchor": "byte",
          "title": "byte"
        },
        {
          "level": 4,
          "anchor": "int",
          "title": "int"
        },
        {
          "level": 4,
          "anchor": "unsigned-int",
          "title": "unsigned int"
        },
        {
          "level": 4,
          "anchor": "word",
          "title": "word"
        },
        {
          "level": 4,
          "anchor": "long",
          "title": "long"
        },
        {
          "level": 4,
          "anchor": "unsigned-long",
          "title": "unsigned long"
        },
        {
          "level": 4,
          "anchor": "short",
          "title": "short"
        },
        {
          "level": 4,
          "anchor": "float",
          "title": "float"
        },
        {
          "level": 4,
          "anchor": "double",
          "title": "double"
        },
        {
          "level": 4,
          "anchor": "string-char-array",
          "title": "string - char array"
        },
        {
          "level": 4,
          "anchor": "string-object",
          "title": "String - object"
        },
        {
          "level": 4,
          "anchor": "array",
          "title": "array"
        }
      ]
    },
    "language-syntax/exceptions": {
      "title": "Exceptions - Language syntax"
    },
    "other-functions/other-functions": {
      "title": "Other functions"
    },
    "other-functions/sprintf": {
      "title": "sprintf - Other functions"
    },
    "other-functions/sscanf": {
      "title": "sscanf - Other functions"
    },
    "preprocessor/preprocessor": {
      "title": "Preprocessor"
    },
    "memory/memory": {
      "title": "Memory"
    },
    "memory/stack": {
      "title": "Stack - Memory",
      "subsections": [
        {
          "level": 4,
          "anchor": "release-notes-wrapper",
          "title": "release-notes-wrapper",
          "subsections": [
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-0if",
              "title": "@FW_VER@0.5.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-0endif",
              "title": "@FW_VER@0.5.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-1if",
              "title": "@FW_VER@0.5.1if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-1endif",
              "title": "@FW_VER@0.5.1endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-2if",
              "title": "@FW_VER@0.5.2if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-2endif",
              "title": "@FW_VER@0.5.2endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-3if",
              "title": "@FW_VER@0.5.3if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-3endif",
              "title": "@FW_VER@0.5.3endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-4if",
              "title": "@FW_VER@0.5.4if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-4endif",
              "title": "@FW_VER@0.5.4endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-5if",
              "title": "@FW_VER@0.5.5if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-5endif",
              "title": "@FW_VER@0.5.5endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-6-0if",
              "title": "@FW_VER@0.6.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-6-0endif",
              "title": "@FW_VER@0.6.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-6-1if",
              "title": "@FW_VER@0.6.1if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-6-1endif",
              "title": "@FW_VER@0.6.1endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-6-2if",
              "title": "@FW_VER@0.6.2if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-6-2endif",
              "title": "@FW_VER@0.6.2endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-6-3if",
              "title": "@FW_VER@0.6.3if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-6-3endif",
              "title": "@FW_VER@0.6.3endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-6-4if",
              "title": "@FW_VER@0.6.4if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-6-4endif",
              "title": "@FW_VER@0.6.4endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-7-0if",
              "title": "@FW_VER@0.7.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-7-0endif",
              "title": "@FW_VER@0.7.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-1-1if",
              "title": "@FW_VER@1.1.1if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-1-1endif",
              "title": "@FW_VER@1.1.1endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-2-1if",
              "title": "@FW_VER@1.2.1if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-2-1endif",
              "title": "@FW_VER@1.2.1endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-3-1if",
              "title": "@FW_VER@1.3.1if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-3-1endif",
              "title": "@FW_VER@1.3.1endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-0if",
              "title": "@FW_VER@1.4.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-0endif",
              "title": "@FW_VER@1.4.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-1if",
              "title": "@FW_VER@1.4.1if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-1endif",
              "title": "@FW_VER@1.4.1endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-2if",
              "title": "@FW_VER@1.4.2if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-2endif",
              "title": "@FW_VER@1.4.2endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-3if",
              "title": "@FW_VER@1.4.3if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-3endif",
              "title": "@FW_VER@1.4.3endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-4if",
              "title": "@FW_VER@1.4.4if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-4endif",
              "title": "@FW_VER@1.4.4endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-5-0if",
              "title": "@FW_VER@1.5.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-5-0endif",
              "title": "@FW_VER@1.5.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-5-1if",
              "title": "@FW_VER@1.5.1if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-5-1endif",
              "title": "@FW_VER@1.5.1endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-5-2if",
              "title": "@FW_VER@1.5.2if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-5-2endif",
              "title": "@FW_VER@1.5.2endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-5-4if",
              "title": "@FW_VER@1.5.4if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-5-4endif",
              "title": "@FW_VER@1.5.4endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-2-0-0if",
              "title": "@FW_VER@2.0.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-2-0-0endif",
              "title": "@FW_VER@2.0.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-2-1-0if",
              "title": "@FW_VER@2.1.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-2-1-0endif",
              "title": "@FW_VER@2.1.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-2-2-0if",
              "title": "@FW_VER@2.2.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-2-2-0endif",
              "title": "@FW_VER@2.2.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-2-3-0if",
              "title": "@FW_VER@2.3.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-2-3-0endif",
              "title": "@FW_VER@2.3.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-3-0-0if",
              "title": "@FW_VER@3.0.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-3-0-0endif",
              "title": "@FW_VER@3.0.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-3-1-0if",
              "title": "@FW_VER@3.1.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-3-1-0endif",
              "title": "@FW_VER@3.1.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-3-2-0if",
              "title": "@FW_VER@3.2.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-3-2-0endif",
              "title": "@FW_VER@3.2.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-3-3-0if",
              "title": "@FW_VER@3.3.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-3-3-0endif",
              "title": "@FW_VER@3.3.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-4-0-0if",
              "title": "@FW_VER@4.0.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-4-0-0endif",
              "title": "@FW_VER@4.0.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-4-0-1if",
              "title": "@FW_VER@4.0.1if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-4-0-1endif",
              "title": "@FW_VER@4.0.1endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-4-0-2if",
              "title": "@FW_VER@4.0.2if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-4-0-2endif",
              "title": "@FW_VER@4.0.2endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-4-1-0if",
              "title": "@FW_VER@4.1.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-4-1-0endif",
              "title": "@FW_VER@4.1.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-4-2-0if",
              "title": "@FW_VER@4.2.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-4-2-0endif",
              "title": "@FW_VER@4.2.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-0-0if",
              "title": "@FW_VER@5.0.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-0-0endif",
              "title": "@FW_VER@5.0.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-0-1if",
              "title": "@FW_VER@5.0.1if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-0-1endif",
              "title": "@FW_VER@5.0.1endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-1-0if",
              "title": "@FW_VER@5.1.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-1-0endif",
              "title": "@FW_VER@5.1.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-2-0if",
              "title": "@FW_VER@5.2.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-2-0endif",
              "title": "@FW_VER@5.2.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-3-0if",
              "title": "@FW_VER@5.3.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-3-0endif",
              "title": "@FW_VER@5.3.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-3-1if",
              "title": "@FW_VER@5.3.1if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-3-1endif",
              "title": "@FW_VER@5.3.1endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-3-2if",
              "title": "@FW_VER@5.3.2if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-3-2endif",
              "title": "@FW_VER@5.3.2endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-4-0if",
              "title": "@FW_VER@5.4.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-4-0endif",
              "title": "@FW_VER@5.4.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-4-1if",
              "title": "@FW_VER@5.4.1if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-4-1endif",
              "title": "@FW_VER@5.4.1endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-5-0if",
              "title": "@FW_VER@5.5.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-5-0endif",
              "title": "@FW_VER@5.5.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-6-0if",
              "title": "@FW_VER@5.6.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-6-0endif",
              "title": "@FW_VER@5.6.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-7-0if",
              "title": "@FW_VER@5.7.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-7-0endif",
              "title": "@FW_VER@5.7.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-8-0if",
              "title": "@FW_VER@5.8.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-5-8-0endif",
              "title": "@FW_VER@5.8.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-15-0if",
              "title": "@CLI_VER@1.15.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-15-0endif",
              "title": "@CLI_VER@1.15.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-17-0if",
              "title": "@CLI_VER@1.17.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-17-0endif",
              "title": "@CLI_VER@1.17.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-18-0if",
              "title": "@CLI_VER@1.18.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-18-0endif",
              "title": "@CLI_VER@1.18.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-20-1if",
              "title": "@CLI_VER@1.20.1if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-20-1endif",
              "title": "@CLI_VER@1.20.1endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-21-0if",
              "title": "@CLI_VER@1.21.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-21-0endif",
              "title": "@CLI_VER@1.21.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-22-0if",
              "title": "@CLI_VER@1.22.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-22-0endif",
              "title": "@CLI_VER@1.22.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-23-1if",
              "title": "@CLI_VER@1.23.1if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-23-1endif",
              "title": "@CLI_VER@1.23.1endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-24-1if",
              "title": "@CLI_VER@1.24.1if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-24-1endif",
              "title": "@CLI_VER@1.24.1endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-25-0if",
              "title": "@CLI_VER@1.25.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-25-0endif",
              "title": "@CLI_VER@1.25.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-26-2if",
              "title": "@CLI_VER@1.26.2if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-26-2endif",
              "title": "@CLI_VER@1.26.2endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-29-0if",
              "title": "@CLI_VER@1.29.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-29-0endif",
              "title": "@CLI_VER@1.29.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-32-1if",
              "title": "@CLI_VER@1.32.1if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-32-1endif",
              "title": "@CLI_VER@1.32.1endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-32-4if",
              "title": "@CLI_VER@1.32.4if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-32-4endif",
              "title": "@CLI_VER@1.32.4endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-33-0if",
              "title": "@CLI_VER@1.33.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-33-0endif",
              "title": "@CLI_VER@1.33.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-35-0if",
              "title": "@CLI_VER@1.35.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-35-0endif",
              "title": "@CLI_VER@1.35.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-36-3if",
              "title": "@CLI_VER@1.36.3if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-36-3endif",
              "title": "@CLI_VER@1.36.3endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-37-0if",
              "title": "@CLI_VER@1.37.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-37-0endif",
              "title": "@CLI_VER@1.37.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-38-0if",
              "title": "@CLI_VER@1.38.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-38-0endif",
              "title": "@CLI_VER@1.38.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-39-0if",
              "title": "@CLI_VER@1.39.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-39-0endif",
              "title": "@CLI_VER@1.39.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-40-0if",
              "title": "@CLI_VER@1.40.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-40-0endif",
              "title": "@CLI_VER@1.40.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-41-0if",
              "title": "@CLI_VER@1.41.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-41-0endif",
              "title": "@CLI_VER@1.41.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-41-1if",
              "title": "@CLI_VER@1.41.1if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-41-1endif",
              "title": "@CLI_VER@1.41.1endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-41-2if",
              "title": "@CLI_VER@1.41.2if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-41-2endif",
              "title": "@CLI_VER@1.41.2endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-42-0if",
              "title": "@CLI_VER@1.42.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-42-0endif",
              "title": "@CLI_VER@1.42.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-43-0if",
              "title": "@CLI_VER@1.43.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-43-0endif",
              "title": "@CLI_VER@1.43.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-43-1if",
              "title": "@CLI_VER@1.43.1if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-43-1endif",
              "title": "@CLI_VER@1.43.1endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-43-3if",
              "title": "@CLI_VER@1.43.3if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-43-3endif",
              "title": "@CLI_VER@1.43.3endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-46-1if",
              "title": "@CLI_VER@1.46.1if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-46-1endif",
              "title": "@CLI_VER@1.46.1endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-47-0if",
              "title": "@CLI_VER@1.47.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-47-0endif",
              "title": "@CLI_VER@1.47.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-48-0if",
              "title": "@CLI_VER@1.48.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-48-0endif",
              "title": "@CLI_VER@1.48.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-49-0if",
              "title": "@CLI_VER@1.49.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-49-0endif",
              "title": "@CLI_VER@1.49.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-52-0if",
              "title": "@CLI_VER@1.52.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-52-0endif",
              "title": "@CLI_VER@1.52.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-53-0if",
              "title": "@CLI_VER@1.53.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-1-53-0endif",
              "title": "@CLI_VER@1.53.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-1-0if",
              "title": "@CLI_VER@2.1.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-1-0endif",
              "title": "@CLI_VER@2.1.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-3-0if",
              "title": "@CLI_VER@2.3.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-3-0endif",
              "title": "@CLI_VER@2.3.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-5-0if",
              "title": "@CLI_VER@2.5.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-5-0endif",
              "title": "@CLI_VER@2.5.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-6-0if",
              "title": "@CLI_VER@2.6.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-6-0endif",
              "title": "@CLI_VER@2.6.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-7-2if",
              "title": "@CLI_VER@2.7.2if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-7-2endif",
              "title": "@CLI_VER@2.7.2endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-8-1if",
              "title": "@CLI_VER@2.8.1if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-8-1endif",
              "title": "@CLI_VER@2.8.1endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-9-0if",
              "title": "@CLI_VER@2.9.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-9-0endif",
              "title": "@CLI_VER@2.9.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-10-0if",
              "title": "@CLI_VER@2.10.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-10-0endif",
              "title": "@CLI_VER@2.10.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-10-1if",
              "title": "@CLI_VER@2.10.1if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-10-1endif",
              "title": "@CLI_VER@2.10.1endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-11-0if",
              "title": "@CLI_VER@2.11.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-11-0endif",
              "title": "@CLI_VER@2.11.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-12-0if",
              "title": "@CLI_VER@2.12.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-12-0endif",
              "title": "@CLI_VER@2.12.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-16-0if",
              "title": "@CLI_VER@2.16.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-2-16-0endif",
              "title": "@CLI_VER@2.16.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-1-0if",
              "title": "@CLI_VER@3.1.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-1-0endif",
              "title": "@CLI_VER@3.1.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-4-0if",
              "title": "@CLI_VER@3.4.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-4-0endif",
              "title": "@CLI_VER@3.4.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-5-0if",
              "title": "@CLI_VER@3.5.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-5-0endif",
              "title": "@CLI_VER@3.5.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-7-0if",
              "title": "@CLI_VER@3.7.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-7-0endif",
              "title": "@CLI_VER@3.7.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-10-1if",
              "title": "@CLI_VER@3.10.1if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-10-1endif",
              "title": "@CLI_VER@3.10.1endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-11-0if",
              "title": "@CLI_VER@3.11.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-11-0endif",
              "title": "@CLI_VER@3.11.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-11-3if",
              "title": "@CLI_VER@3.11.3if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-11-3endif",
              "title": "@CLI_VER@3.11.3endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-13-0if",
              "title": "@CLI_VER@3.13.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-13-0endif",
              "title": "@CLI_VER@3.13.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-14-0if",
              "title": "@CLI_VER@3.14.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-14-0endif",
              "title": "@CLI_VER@3.14.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-19-0if",
              "title": "@CLI_VER@3.19.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-19-0endif",
              "title": "@CLI_VER@3.19.0endif"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-21-0if",
              "title": "@CLI_VER@3.21.0if"
            },
            {
              "level": 5,
              "anchor": "-cli_ver-3-21-0endif",
              "title": "@CLI_VER@3.21.0endif"
            },
            {
              "level": 5,
              "anchor": "-electron_parts-2if",
              "title": "@ELECTRON_PARTS@2if"
            },
            {
              "level": 5,
              "anchor": "-electron_parts-2endif",
              "title": "@ELECTRON_PARTS@2endif"
            },
            {
              "level": 5,
              "anchor": "-electron_parts-3if",
              "title": "@ELECTRON_PARTS@3if"
            },
            {
              "level": 5,
              "anchor": "-electron_parts-3endif",
              "title": "@ELECTRON_PARTS@3endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-3if",
              "title": "@FW_VER@0.5.3if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-3endif",
              "title": "@FW_VER@0.5.3endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-4if",
              "title": "@FW_VER@0.5.4if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-4endif",
              "title": "@FW_VER@0.5.4endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-3if",
              "title": "@FW_VER@0.5.3if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-3endif",
              "title": "@FW_VER@0.5.3endif"
            },
            {
              "level": 5,
              "anchor": "-electron_parts-3if",
              "title": "@ELECTRON_PARTS@3if"
            },
            {
              "level": 5,
              "anchor": "-electron_parts-3endif",
              "title": "@ELECTRON_PARTS@3endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-4if",
              "title": "@FW_VER@0.5.4if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-4endif",
              "title": "@FW_VER@0.5.4endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-5if",
              "title": "@FW_VER@0.5.5if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-5endif",
              "title": "@FW_VER@0.5.5endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-6-0if",
              "title": "@FW_VER@0.6.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-6-0endif",
              "title": "@FW_VER@0.6.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-7-0if",
              "title": "@FW_VER@0.7.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-7-0endif",
              "title": "@FW_VER@0.7.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-1-1if",
              "title": "@FW_VER@1.1.1if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-1-1endif",
              "title": "@FW_VER@1.1.1endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-2-1if",
              "title": "@FW_VER@1.2.1if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-2-1endif",
              "title": "@FW_VER@1.2.1endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-3-1if",
              "title": "@FW_VER@1.3.1if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-3-1endif",
              "title": "@FW_VER@1.3.1endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-0if",
              "title": "@FW_VER@1.4.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-0endif",
              "title": "@FW_VER@1.4.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-1if",
              "title": "@FW_VER@1.4.1if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-1endif",
              "title": "@FW_VER@1.4.1endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-2if",
              "title": "@FW_VER@1.4.2if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-2endif",
              "title": "@FW_VER@1.4.2endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-3if",
              "title": "@FW_VER@1.4.3if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-3endif",
              "title": "@FW_VER@1.4.3endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-4if",
              "title": "@FW_VER@1.4.4if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-4-4endif",
              "title": "@FW_VER@1.4.4endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-5-0if",
              "title": "@FW_VER@1.5.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-1-5-0endif",
              "title": "@FW_VER@1.5.0endif"
            },
            {
              "level": 5,
              "anchor": "-electron_parts-2if",
              "title": "@ELECTRON_PARTS@2if"
            },
            {
              "level": 5,
              "anchor": "-electron_parts-2endif",
              "title": "@ELECTRON_PARTS@2endif"
            },
            {
              "level": 5,
              "anchor": "-electron_parts-3if",
              "title": "@ELECTRON_PARTS@3if"
            },
            {
              "level": 5,
              "anchor": "-electron_parts-3endif",
              "title": "@ELECTRON_PARTS@3endif"
            },
            {
              "level": 5,
              "anchor": "-electron_parts-2if",
              "title": "@ELECTRON_PARTS@2if"
            },
            {
              "level": 5,
              "anchor": "-electron_parts-2endif",
              "title": "@ELECTRON_PARTS@2endif"
            },
            {
              "level": 5,
              "anchor": "-electron_parts-3if",
              "title": "@ELECTRON_PARTS@3if"
            },
            {
              "level": 5,
              "anchor": "-electron_parts-3endif",
              "title": "@ELECTRON_PARTS@3endif"
            },
            {
              "level": 5,
              "anchor": "-electron_parts-2if",
              "title": "@ELECTRON_PARTS@2if"
            },
            {
              "level": 5,
              "anchor": "-electron_parts-2endif",
              "title": "@ELECTRON_PARTS@2endif"
            },
            {
              "level": 5,
              "anchor": "-electron_parts-3if",
              "title": "@ELECTRON_PARTS@3if"
            },
            {
              "level": 5,
              "anchor": "-electron_parts-3endif",
              "title": "@ELECTRON_PARTS@3endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-1if",
              "title": "@FW_VER@0.5.1if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-1endif",
              "title": "@FW_VER@0.5.1endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-2if",
              "title": "@FW_VER@0.5.2if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-5-2endif",
              "title": "@FW_VER@0.5.2endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-7-0if",
              "title": "@FW_VER@0.7.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-7-0endif",
              "title": "@FW_VER@0.7.0endif"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-7-0if",
              "title": "@FW_VER@0.7.0if"
            },
            {
              "level": 5,
              "anchor": "-fw_ver-0-7-0endif",
              "title": "@FW_VER@0.7.0endif"
            }
          ]
        },
        {
          "level": 4,
          "anchor": "release-notes-wrapper",
          "title": "release-notes-wrapper"
        }
      ]
    }
  }
}