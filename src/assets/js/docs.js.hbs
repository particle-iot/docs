/* eslint-env browser */
/* global jQuery, Handlebars, prettyPrint */
/*!

Documentation middleware.
Created by Zach Supalla.
(c) 2016 Particle Industries, Inc. MIT licensed.

*/

(function($) {
  var exports = this;

  /**
   * Basic Docs module.
   */

  var Docs = exports.Docs = {};

  Docs.transform = function() {
    this.tagImages();
    this.prettifyCode();
  };

  /**
   * Tags paragraphs that include images.
   */

  Docs.tagImages = function() {
    $('.content').find('p:has(img)').each(function() {
      var $el = $(this);
      $el.addClass('img');
    });
  };

  /**
   * Make code prettier
   */

  Docs.prettifyCode = function() {
    $('.content').find('pre code').each(function() {
      if (!$(this).hasClass('lang-none')) {
        $(this).addClass('prettyprint');
      }
    });
  };


  Docs.rememberDevices = function() {
    if (typeof Storage !== 'undefined') {
      var currentPath = window.location.pathname;
      if (currentPath.indexOf('photon') > -1) {
        localStorage.setItem('lastDevice', 'photon');
      } else if (currentPath.indexOf('core') > -1) {
        localStorage.setItem('lastDevice', 'core');
      } else if (currentPath.indexOf('electron') > -1) {
        localStorage.setItem('lastDevice', 'electron');
      } else if (currentPath.indexOf('argon') > -1) {
        localStorage.setItem('lastDevice', 'argon');
      } else if (currentPath.indexOf('boron') > -1) {
        localStorage.setItem('lastDevice', 'boron');
      } else if (currentPath.indexOf('xenon') > -1) {
        localStorage.setItem('lastDevice', 'xenon');
      } else if (currentPath.indexOf('tracker-som') > -1) {
        localStorage.setItem('lastDevice', 'tracker-som');
      }
    }
  };

  Docs.scrollToElement = function(element) {
    var $element = $(element);
    if ($element.length === 1) {
      var position = $element.position().top + 10;
      $('.content-inner').scrollTop(position);
    }
  };

  Docs.scrollToInternalLinks = function() {
    var $internalLinks = $('.menubar a[href^="#"], a.header-permalinks');
    $internalLinks.on('click', function() {
      var href = $(this).attr('href');
      if (window.history) {
        history.pushState({hash: href}, 'New Hash', href);
      }
    });

    window.onpopstate = function(e) {
      if (e.state && e.state.hash) {
        Docs.scrollToElement(e.state.hash);
      }
    };
  };


  Docs._removeEmptyTokens = function removeEmptyTokens(token) {
    if (token.length > 0) {
      return token;
    };
  };

  Docs.resultsAdded = 0;

  Docs.buildSearch = function() {

    $('body').on('click', function() {
      $('.search-results').hide();
    });
    $('.search-results').on('click', function(e) {
      e.stopPropagation();
    });
  };
  Docs.emptyResults = function() {
    $('.search-results ul.results').empty();
    Docs.resultsAdded = 0;
  };

  Docs.titleize = function(string) {
    var stringNoDashes = string.replace(/-/g, ' ');
    var stringToTitleCase = stringNoDashes.replace(/\w\S*/g, function(txt){
      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
    });
    return stringToTitleCase;
  };

  Docs.toggleShowing = function() {
    $('span.popupLink, span.footnoteLink').on('click', function() {
      $(this).toggleClass('showing');
    });
  };

  Docs.toggleNav = function() {
    var $root = $(".content-root");
    $('.toggle-navigation').on('click', function(e) {
      e.preventDefault();
      toggleNav();
      updateBackdrop();
    });

    $root.on('click', '.menubar-backdrop', function(e) {
      e.preventDefault();
      closeNav();
      updateBackdrop();
    });

    function toggleNav() {
      $root.toggleClass('menubar-show');
    }

    function closeNav() {
      $root.removeClass('menubar-show');
    }

    function updateBackdrop() {
      if($root.hasClass('menubar-show')) {
        $root.prepend('<div class="menubar-backdrop"></div>');
      } else {
        $('.menubar-backdrop').remove();
      }
    }
  };

  Docs.catchRedirectLinks = function() {
    $(document).on('click', 'a', function (e) {
      var components = ($(this).attr('href')||'').split("#");
      var href = components[0].replace(/\/$/, '');
      var hash = components[1];
      var redirect = applyRedirect(href);
      redirect = applyDeviceRedirect(redirect);
      if (href !== redirect) {
        e.preventDefault();
        window.location.href = redirect + '/' + (hash ? '#' + hash : '');
      }
    });
  };
  
  /*
  Docs.enableZendeskWidget = function() {
	// Enable only for wide displays, typically desktop.
    if ($(document).width() >= 750) {
        $('head').append('<script id="ze-snippet" src="https://static.zdassets.com/ekr/snippet.js?key=21252a40-c7b8-4de4-9b39-1d22e8786070"> </script>');
    } 
  };
  */
  
  function applyRedirect(href) {
    for (var link in redirects) {
      if (href === link) {
        return redirects[link];
      }
    }
    return href;
  }

  function applyDeviceRedirect(href) {
    for (var link in deviceLinks) {
      if (href === link) {
        var lastDevice = localStorage.getItem('lastDevice');
        if (deviceLinks[link].indexOf(lastDevice) >= 0) {
          return link + '/' + lastDevice;
        }
      }
    }
    return href;
  }

  var deviceLinks = {{{ json forkList }}};
  var redirects = {{{ json redirectList }}};

  // Ok, then let's do it!
  Docs.rememberDevices();
  Docs.transform();
  Docs.scrollToInternalLinks();
  Docs.buildSearch();
  Docs.toggleNav();
  Docs.toggleShowing();
  Docs.catchRedirectLinks();
  //Docs.enableZendeskWidget();
  if (prettyPrint) {
    prettyPrint();
  }

  {{#if development}}
  // Make sure to scroll the element after live reload
  Docs.scrollToElement(window.location.hash);
  {{/if}}
})(jQuery);
