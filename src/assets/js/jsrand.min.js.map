{
  "version": 3,
  "sources": [
    "../../../../../usr/lib/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "src/jsrand.js",
    "src/jsrand_browser.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "/** @format @flow */\n/*!\n * jsrand - https://github.com/DomenicoDeFelice/jsrand\n *\n * Copyright (c) 2014-2020 Domenico De Felice\n * Released under the MIT License\n *\n * @license\n */\n\n'use strict';\n\ntype State = {|\n  seed: number,\n  mz: number,\n  mw: number,\n|};\n\nfunction Srand(seed?: number) {\n  if (seed != null) {\n    this.seed(seed);\n  } else {\n    this.randomize();\n  }\n}\n\nSrand.prototype = {};\n\n/**\n * Set or get (if no argument is given) the seed for the pseudo-random\n * number generator. The seed can be any float or integer number.\n */\nSrand.seed = Srand.prototype.seed = function (seed?: number): number {\n  if (seed == null) {\n    return this._seed;\n  }\n\n  // Use only one seed (mw), mz is fixed.\n  // Must not be zero, nor 0x9068ffff.\n  this._mz = 123456789;\n\n  return (this._mw = this._seed = seed);\n};\n\n/**\n * Set and return a random seed.\n */\nSrand.randomize = Srand.prototype.randomize = function (): number {\n  return this.seed(1 + Math.floor(Math.random() * 0xffffffff));\n};\n\n/**\n * Return an object with the state of the generator. Use setState to\n * resume the state.\n */\nSrand.getState = Srand.prototype.getState = function (): State {\n  return {\n    seed: this._seed,\n    mz: this._mz,\n    mw: this._mw,\n  };\n};\n\n/**\n * Resume a state previously returned by getState.\n */\nSrand.setState = Srand.prototype.setState = function (state: State) {\n  if (\n    state == null ||\n    typeof state !== 'object' ||\n    typeof state.seed !== 'number' ||\n    typeof state.mz !== 'number' ||\n    typeof state.mw !== 'number'\n  ) {\n    throw new Error('Invalid state.');\n  }\n\n  this._seed = state.seed;\n  this._mz = state.mz;\n  this._mw = state.mw;\n};\n\n/**\n * Return a pseudo-random number between 0 inclusive and 1 exclusive.\n *\n * The algorithm used is MWC (multiply-with-carry) by George Marsaglia.\n *\n * Implementation based on:\n * - http://en.wikipedia.org/wiki/Random_number_generation#Computational_methods\n * - http://stackoverflow.com/questions/521295/javascript-random-seeds#19301306\n */\nSrand.random = Srand.prototype.random = function (): number {\n  if (this._seed == null) {\n    this.randomize();\n  }\n\n  let mz = this._mz;\n  let mw = this._mw;\n\n  // The 16 least significant bits are multiplied by a constant\n  // and then added to the 16 most significant bits. 32 bits result.\n  mz = ((mz & 0xffff) * 36969 + (mz >> 16)) & 0xffffffff;\n  mw = ((mw & 0xffff) * 18000 + (mw >> 16)) & 0xffffffff;\n\n  this._mz = mz;\n  this._mw = mw;\n\n  const x = (((mz << 16) + mw) & 0xffffffff) / 0x100000000;\n  return 0.5 + x;\n};\n\n/**\n * Return a pseudo-random float number between a inclusive and b exclusive.\n */\nSrand.inRange = Srand.prototype.inRange = function (\n  a: number,\n  b: number\n): number {\n  return a + this.random() * (b - a);\n};\n\n/**\n * Return a psuedo-random integer between min and max inclusive.\n */\nSrand.intInRange = Srand.prototype.intInRange = function (\n  min: number,\n  max: number\n): number {\n  return min + Math.floor(this.random() * (max - min + 1));\n};\n\n/**\n * Return a random element from the input array.\n *\n * If arr is empty, an exception is thrown.\n */\nSrand.choice = Srand.prototype.choice = function <T>(arr: Array<T>): T {\n  if (arr.length === 0) {\n    throw new Error('Cannot choose random element from empty array.');\n  }\n\n  const randomIndex = this.intInRange(0, arr.length - 1);\n  return arr[randomIndex];\n};\n\n/**\n * Return a k-sized array sampled with replacement from the input array,\n * i.e. each element can be sampled more than once.\n *\n * If k > 0 and arr is empty, throws an exception.\n */\nSrand.choices = Srand.prototype.choices = function <T>(\n  arr: Array<T>,\n  k: number\n): Array<T> {\n  const sample = new Array(k);\n\n  for (let i = 0; i < k; i++) {\n    sample[i] = this.choice(arr);\n  }\n\n  return sample;\n};\n\n/**\n * Return a k-sized array sampled without replacement from the input array.\n *\n * If k > arr.length an exception is thrown.\n */\nSrand.sample = Srand.prototype.sample = function <T>(\n  arr: Array<T>,\n  k: number\n): Array<T> {\n  if (k > arr.length) {\n    throw new Error('Sample size cannot exceed population size.');\n  }\n\n  if (k === arr.length) {\n    return [...arr];\n  }\n\n  const maxIndex = arr.length - 1;\n  const sample = new Array(k);\n  const selected = {};\n\n  for (let i = 0, j; i < k; i++) {\n    do {\n      j = this.intInRange(0, maxIndex);\n    } while (selected[j]);\n\n    sample[i] = arr[j];\n    selected[j] = true;\n  }\n\n  return sample;\n};\n\n/**\n * Shuffle the input array using the Fisher-Yates algorithm and return it\n * (the input array is modified).\n */\nSrand.shuffle = Srand.prototype.shuffle = function <T>(\n  arr: Array<T>\n): Array<T> {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = this.intInRange(0, i - 1);\n    const temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n\n  return arr;\n};\n\n// Keep flow happy.\nSrand._oldSrand = undefined;\nSrand.noConflict = function (): Function {\n  return Srand;\n};\n\nmodule.exports = Srand;\n",
    "/** @format @flow */\n\n'use strict';\n\nimport Srand from './jsrand.js';\n\nSrand._oldSrand = window.Srand;\n\n/**\n * In the uncommon case the name `Srand` is already used,\n * restore its initial value and return the Srand object.\n */\nSrand.noConflict = function (): Function {\n  window.Srand = Srand._oldSrand;\n  return Srand;\n};\n\nwindow.Srand = Srand;\n"
  ]
}