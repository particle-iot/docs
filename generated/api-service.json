[
  {
    "type": "post",
    "url": "/oauth/token",
    "title": "Generate an access token",
    "description": "<p>Creates an access token that gives you access to the Cloud API.</p> <p>You must give a valid OAuth client ID and secret in HTTP Basic Auth or in the <code>client_id</code> and <code>client_secret</code> parameters. For controlling your own developer account, you can use <code>particle:particle</code>. Otherwise use a valid OAuth Client ID and Secret. This endpoint doesn't accept JSON requests, only form encoded requests. See <a href=\"#oauth-clients\">OAuth Clients</a>.</p> <p>Refresh tokens only work for product tokens, and even then they are not particularly useful. In order to generate a new access token from the refresh token you still need the client ID and secret. Because of this, it's simpler to just generate a new token, and then you don't need to remember and keep secure the refresh token. Also refresh tokens have a lifetime of 14 days, much shorter than the default access token lifetime of 90 days.</p>",
    "group": "Authentication_1",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>HTTP Basic Auth where username is the OAuth client ID and password is the OAuth client secret. Any client ID will work, but we suggest <code>particle:particle</code>.</p>"
          }
        ]
      }
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "client_id",
            "description": "<p>OAuth client ID. Required if no Authorization header is present.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "client_secret",
            "description": "<p>OAuth client secret. Required if no Authorization header is present.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "grant_type",
            "description": "<p>OAuth grant type. Usually <code>password</code>.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "username",
            "description": "<p>Your Particle account username</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>Your Particle account password</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": true,
            "field": "expires_in",
            "description": "<p>How many seconds the token will be valid for. <code>0</code> means forever. Short lived tokens are better for security.</p>"
          },
          {
            "group": "Parameter",
            "type": "Date",
            "optional": true,
            "field": "expires_at",
            "description": "<p>When should the token expire? This should be an ISO8601 formatted date string.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl https://api.particle.io/oauth/token \\",
        "content": "$ curl https://api.particle.io/oauth/token \\\n       -u particle:particle \\\n       -d grant_type=password \\\n       -d \"username=joe@example.com\" \\\n       -d \"password=SuperSecret\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "access_token",
            "description": "<p>The magical token you will use for all the other requests</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "allowedValues": [
              "bearer"
            ],
            "optional": false,
            "field": "token_type",
            "description": ""
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "expires_in",
            "description": "<p>The number of seconds this token is valid for. Defaults to 7776000 seconds (90 days) if unspecified in the request. <code>0</code> means forever.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "refresh_token",
            "description": "<p>Used to generate a new access token when it has expired.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "POST /oauth/token",
          "content": "POST /oauth/token\nHTTP/1.1 200 OK\n{\n  \"access_token\": \"254406f79c1999af65a7df4388971354f85cfee9\",\n  \"token_type\": \"bearer\",\n  \"expires_in\": 7776000,\n  \"refresh_token\": \"b5b901e8760164e134199bc2c3dd1d228acf2d90\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "String",
            "optional": false,
            "field": "error",
            "description": "<p>The machine readable code identifying the error</p>"
          },
          {
            "group": "Error 4xx",
            "type": "String",
            "optional": false,
            "field": "error_description",
            "description": "<p>The human readable reason for the error</p>"
          },
          {
            "group": "Error 4xx",
            "type": "String",
            "optional": false,
            "field": "mfa_token",
            "description": "<p>The two-factor authentication state code that must be sent back with the one-time password</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "POST /oauth/token",
          "content": "POST /oauth/token\nHTTP/1.1 400 Bad Request\n{\n   \"error\": \"invalid_grant\",\n   \"error_description\": \"User credentials are invalid\"\n}",
          "type": "bash"
        },
        {
          "title": "Error when two-factor authentication is enabled",
          "content": "POST /oauth/token\nHTTP/1.1 403 Forbidden\n{\n   \"error\": \"mfa_required\",\n   \"error_description\": \"Multifactor authentication required\",\n   \"mfa_token\": \"eyJ0eXAiOiJKV1QiLCJhbGci....D3QCiQ\"\n}",
          "type": "bash"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/accessToken.js",
    "groupTitle": "Authentication_1",
    "name": "PostOauthToken"
  },
  {
    "type": "get",
    "url": "/v1/access_tokens",
    "title": "List Access Tokens",
    "name": "ListAccessTokens",
    "description": "<p>Retrieve a list of all the issued access tokens for your account</p>",
    "group": "Authentication_4",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Your Particle username and password</p>"
          }
        ]
      }
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "otp",
            "description": "<p>Token given from your MFA device. Usually 6 digits long</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "-",
            "description": "<p>List of access tokens</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.token",
            "description": "<p>Access token</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.expires_at",
            "description": "<p>Date the token expires and is no longer valid</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.client",
            "description": "<p>Client program used to create the token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/access_tokens",
          "content": "GET /v1/access_tokens\nHTTP/1.1 200 OK\n[\n  {\n      \"token\": \"b5b901e8760164e134199bc2c3dd1d228acf2d98\",\n      \"expires_at\": \"2014-04-27T02:20:36.177Z\",\n      \"client\": \"particle\"\n  },\n  {\n      \"token\": \"ba54b6bb71a43b7612bdc7c972914604a078892b\",\n      \"expires_at\": \"2014-04-27T06:31:08.991Z\",\n      \"client\": \"particle\"\n  }\n]",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "$ curl https://api.particle.io/v1/access_tokens \\",
        "content": "$ curl https://api.particle.io/v1/access_tokens \\\n       -u \"joe@example.com:SuperSecret\"",
        "type": "bash"
      }
    ],
    "version": "0.0.0",
    "filename": "api-service/src/views/accessToken.js",
    "groupTitle": "Authentication_4"
  },
  {
    "type": "delete",
    "url": "/v1/access_tokens/:token",
    "title": "Delete an access token",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "token",
            "description": "<p>Access Token to delete</p>"
          }
        ]
      }
    },
    "description": "<p>Delete your unused or lost tokens.</p>",
    "name": "DeleteAccessToken",
    "group": "Authentication_5",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Your Particle username and password</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "ok",
            "description": "<p>Whether or not the token was deleted</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "DELETE /v1/access_tokens/123abc",
          "content": "DELETE /v1/access_tokens/123abc\nHTTP/1.1 200 OK\n{\n  \"ok\": true\n}",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "$ curl -X DELETE https://api.particle.io/v1/access_tokens/123abc \\",
        "content": "$ curl -X DELETE https://api.particle.io/v1/access_tokens/123abc \\\n       -u \"joe@example.com:SuperSecret\"",
        "type": "bash"
      }
    ],
    "version": "0.0.0",
    "filename": "api-service/src/views/accessToken.js",
    "groupTitle": "Authentication_5"
  },
  {
    "type": "delete",
    "url": "/v1/access_tokens",
    "title": "Delete all active access tokens",
    "description": "<p>Delete all your active access tokens.</p>",
    "name": "DeleteActiveAccessTokens",
    "group": "Authentication_6",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "ok",
            "description": "<p>Whether or not the tokens were deleted</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "DELETE /v1/access_tokens",
          "content": "DELETE /v1/access_tokens\nHTTP/1.1 200 OK\n{\n  \"ok\": true\n}",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "$ curl -X DELETE \"https://api.particle.io/v1/access_tokens?access_token=123abc\"",
        "content": "$ curl -X DELETE \"https://api.particle.io/v1/access_tokens?access_token=123abc\"",
        "type": "bash"
      }
    ],
    "version": "0.0.0",
    "filename": "api-service/src/views/accessToken.js",
    "groupTitle": "Authentication_6"
  },
  {
    "type": "delete",
    "url": "/v1/access_tokens/current",
    "title": "Delete current access token",
    "description": "<p>Delete your currently used token.</p>",
    "name": "DeleteCurrentAccessToken",
    "group": "Authentication_6",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "ok",
            "description": "<p>Whether or not the token was deleted</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "DELETE /v1/access_tokens/current",
          "content": "DELETE /v1/access_tokens/current\nHTTP/1.1 200 OK\n{\n  \"ok\": true\n}",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "$ curl -X DELETE \"https://api.particle.io/v1/access_tokens/current?access_token=123abc\"",
        "content": "$ curl -X DELETE \"https://api.particle.io/v1/access_tokens/current?access_token=123abc\"",
        "type": "bash"
      }
    ],
    "version": "0.0.0",
    "filename": "api-service/src/views/accessToken.js",
    "groupTitle": "Authentication_6"
  },
  {
    "type": "get",
    "url": "/v1/access_tokens/current",
    "title": "Get the current access token information",
    "description": "<p>Get your currently used token.</p>",
    "name": "GetCurrentAccessToken",
    "group": "Authentication_6",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "expires_in",
            "description": "<p>The number of seconds this token is valid for. <code>0</code> means forever.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "client",
            "description": "<p>Client program used to create the token.</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "scopes",
            "description": "<p>List of scopes for this token.</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "orgs",
            "description": "<p>List of orgs this token has access to.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/access_tokens/current",
          "content": "GET /v1/access_tokens/current\nHTTP/1.1 200 OK\n{\n  \"expires_at\": \"2014-04-27T06:31:08.991Z\",\n  \"client\": \"particle\",\n  \"scopes\": [],\n  \"orgs\": []\n}",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/access_tokens/current?access_token=123abc\"",
        "content": "$ curl \"https://api.particle.io/v1/access_tokens/current?access_token=123abc\"",
        "type": "bash"
      }
    ],
    "version": "0.0.0",
    "filename": "api-service/src/views/accessToken.js",
    "groupTitle": "Authentication_6"
  },
  {
    "type": "get",
    "url": "/v1/products/:productIdOrSlug/config",
    "title": "Get product configuration",
    "name": "GetProductConfig",
    "group": "Configuration_1",
    "description": "<p>Get the configuration values that are the default for the product</p>",
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/products/1234/config?access_token=abc123\"",
        "content": "$ curl \"https://api.particle.io/v1/products/1234/config?access_token=abc123\"",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "GET https://api.particle.io/v1/products/1234/config",
          "content": "GET https://api.particle.io/v1/products/1234/config\nHTTP/1.1 200 OK\n{\n  \"configuration\": {\n    \"location\": {\n      \"radius\": 1,\n      \"interval_min\": 30,\n      \"interval_max\": 300,\n      \"min_publish\": false\n    },\n    \"imu_trig\": {\n      \"motion\": \"disable\",\n      \"high_g\": \"disable\"\n    },\n    \"rgb\": {\n      \"type\": \"tracker\",\n      \"direct\": {\n        \"red\": 0,\n        \"blue\": 255,\n        \"green\": 0,\n        \"brightness\": 255\n      }\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Configuration not set for product",
          "content": "GET https://api.particle.io/v1/products/1234/config\nHTTP/1.1 404 Not Found\n{}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/configuration.js",
    "groupTitle": "Configuration_1"
  },
  {
    "type": "get",
    "url": "/v1/products/:productIdOrSlug/config/:deviceId",
    "title": "Get device configuration",
    "name": "GetDeviceConfig",
    "group": "Configuration_2",
    "description": "<p>Get the configuration values that are specific to this device</p>",
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/products/1234/config/abc123?access_token=abc123\"",
        "content": "$ curl \"https://api.particle.io/v1/products/1234/config/abc123?access_token=abc123\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "configuration",
            "description": ""
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "configuration.current",
            "description": "<p>The device's current confirmed configuration</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "configuration.pending",
            "description": "<p>The configuration this device will be updated to</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET https://api.particle.io/v1/products/1234/config/abc123",
          "content": " GET https://api.particle.io/v1/products/1234/config/abc123\n HTTP/1.1 200 OK\n{\n  \"configuration\": {\n    \"current\": {\n      \"imu_trig\": {\n        \"motion\": \"disable\",\n        \"high_g\": \"disable\"\n      },\n      \"location\": {\n        \"radius\": 1,\n        \"interval_min\": 30,\n        \"interval_max\": 300,\n        \"min_publish\": false\n      }\n    },\n    \"pending\": {\n      \"location\": {\n        \"radius\": 10,\n        \"interval_min\": 30,\n        \"interval_max\": 300,\n        \"min_publish\": false\n      },\n      \"imu_trig\": {\n        \"motion\": \"enable\",\n        \"high_g\": \"disable\"\n      }\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Configuration not set for device",
          "content": "GET https://api.particle.io/v1/products/1234/config/abc123\nHTTP/1.1 404 Not Found\n{}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/configuration.js",
    "groupTitle": "Configuration_2"
  },
  {
    "type": "get",
    "url": "/v1/products/:productIdOrSlug/config",
    "title": "Get product schema",
    "name": "GetProductConfigSchema",
    "group": "Configuration_3",
    "permission": [
      {
        "name": "configuration:get"
      }
    ],
    "description": "<p>Get the possible values that can be configured for this product, in JSON Schema format</p>",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Accept",
            "description": "<p>must be set to &quot;application/schema+json&quot; for this endpoint</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/products/1234/config?access_token=abc123\" \\",
        "content": "$ curl \"https://api.particle.io/v1/products/1234/config?access_token=abc123\" \\\n       -H \"Accept: application/schema+json\"",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "GET https://api.particle.io/v1/products/1234/config",
          "content": " GET https://api.particle.io/v1/products/1234/config\n HTTP/1.1 200 OK\n{\n   \"$schema\": \"http://json-schema.org/draft-07/schema\",\n   \"properties\": {\n     ...\n  }\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/configuration.js",
    "groupTitle": "Configuration_3"
  },
  {
    "type": "get",
    "url": "/v1/products/:productIdOrSlug/config/:deviceId",
    "title": "Get device schema",
    "name": "GetDeviceConfigSchema",
    "group": "Configuration_4",
    "permission": [
      {
        "name": "configuration:get"
      }
    ],
    "description": "<p>Get the possible values that can be configured for one device in this product, in JSON Schema format</p>",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Accept",
            "description": "<p>Must be set to &quot;application/schema+json&quot; for this endpoint</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/products/1234/config/abc123?access_token=abc123\" \\",
        "content": "$ curl \"https://api.particle.io/v1/products/1234/config/abc123?access_token=abc123\" \\\n       -H \"Accept: application/schema+json\"",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "GET https://api.particle.io/v1/products/1234/config/abc123",
          "content": " GET https://api.particle.io/v1/products/1234/config/abc123\n HTTP/1.1 200 OK\n{\n   \"$schema\": \"http://json-schema.org/draft-07/schema\",\n   \"properties\": {\n     ...\n  }\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/configuration.js",
    "groupTitle": "Configuration_4"
  },
  {
    "type": "delete",
    "url": "/v1/products/:productIdOrSlug/config",
    "title": "Delete product configuration schema",
    "name": "DeleteProductConfigSchema",
    "group": "Configuration_5",
    "description": "<p>Delete configuration schema, use Tracker Edge defaults.</p>",
    "examples": [
      {
        "title": "$ curl -X DELETE \"https://api.particle.io/v1/products/1234/config\" \\",
        "content": "$ curl -X DELETE \"https://api.particle.io/v1/products/1234/config\" \\\n       -H \"Authorization: Bearer ACCESS-TOKEN-HERE\" \\\n       -H \"Content-Type: application/schema+json\" \\\n       -d '{}'",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "PUT https://api.particle.io/v1/products/1234/config",
          "content": "PUT https://api.particle.io/v1/products/1234/config\nHTTP/1.1 204 OK",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/configuration.js",
    "groupTitle": "Configuration_5"
  },
  {
    "type": "put",
    "url": "/v1/products/:productIdOrSlug/config",
    "title": "Set product configuration",
    "name": "SetProductConfig",
    "group": "Configuration_5",
    "description": "<p>Set configuration values that will become the default for the product. This will also update eligible devices with this updated configuration.</p> <p>You should always get the entire configuration, change values, and set the whole configuration back. In HTTP REST APIs, POST and PUT do not merge changes with the existing data.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "optional": true,
            "field": "deviceIds",
            "description": "<p>an array of deviceIDs to limit this update to.  If the request has no other content the devices will be reset to use the product defaults.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl -X PUT \"https://api.particle.io/v1/products/1234/config?access_token=abc123\" \\",
        "content": "$ curl -X PUT \"https://api.particle.io/v1/products/1234/config?access_token=abc123\" \\\n       -H \"Content-Type: application/json\" \\\n       -d \"{\\\"location\\\":{\\\"radius\\\":5.0}}\"",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "PUT https://api.particle.io/v1/products/1234/config",
          "content": "PUT https://api.particle.io/v1/products/1234/config\nHTTP/1.1 202 OK\n{}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/configuration.js",
    "groupTitle": "Configuration_5"
  },
  {
    "type": "put",
    "url": "/v1/products/:productIdOrSlug/config",
    "title": "Set product configuration schema",
    "name": "SetProductConfigSchema",
    "group": "Configuration_5",
    "description": "<p>Set configuration schema that will become the default for the product.</p> <p>This must be the entire schema, including the standard Particle parts; there is no merging of changes.</p>",
    "examples": [
      {
        "title": "$ curl -X PUT \"https://api.particle.io/v1/products/1234/config\" \\",
        "content": "$ curl -X PUT \"https://api.particle.io/v1/products/1234/config\" \\\n       -H \"Authorization: Bearer ACCESS-TOKEN-HERE\" \\\n       -H \"Content-Type: application/schema+json\" \\\n       -d '{\n               \"$schema\": \"https://particle.io/draft-07/schema#\",\n               \"type\": \"object\",\n               \"title\": \"Fake Custom Schema\",\n               \"description\": \"A customized JSON schema for testing\",\n               \"required\": [\n                   \"foo\"\n               ],\n               \"properties\": {\n                   \"foo\": {\n                       \"$id\": \"#/properties/foo\",\n                       \"type\": \"integer\",\n                       \"title\": \"Foo\",\n                       \"description\": \"A test setting named `foo`\",\n                       \"default\": 1,\n                       \"examples\": [1, 2, 3],\n                       \"minimum\": 0\n                   },\n                   \"bar\": {\n                       \"$id\": \"#/properties/bar\",\n                       \"type\": \"string\",\n                       \"title\": \"Bar\",\n                       \"description\": \"A test setting named `bar`\",\n                       \"default\": \"\",\n                       \"examples\": [\"one\", \"two\", \"three\"]\n                   }\n               }\n          }'",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "PUT https://api.particle.io/v1/products/1234/config",
          "content": "PUT https://api.particle.io/v1/products/1234/config\nHTTP/1.1 200 OK\n{\n    \"$schema\": \"https://particle.io/draft-07/schema#\",\n    \"type\": \"object\",\n    \"title\": \"Fake Custom Schema\",\n    \"description\": \"A customized JSON schema for testing\",\n    \"required\": [\n        \"foo\"\n    ],\n    \"properties\": {\n        \"foo\": {\n            \"$id\": \"#/properties/foo\",\n            \"type\": \"integer\",\n            \"title\": \"Foo\",\n            \"description\": \"A test setting named `foo`\",\n            \"default\": 1,\n            \"examples\": [1, 2, 3],\n            \"minimum\": 0\n        },\n        \"bar\": {\n            \"$id\": \"#/properties/bar\",\n            \"type\": \"string\",\n            \"title\": \"Bar\",\n            \"description\": \"A test setting named `bar`\",\n            \"default\": \"\",\n            \"examples\": [\"one\", \"two\", \"three\"]\n        }\n    }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Partial or full rejection",
          "content": "PUT https://api.particle.io/v1/products/1234/config\nHTTP/1.1 422 Bad Request\n{\n   message: 'Invalid Schema',\n   description: 'data should NOT have additional properties',\n   violations: [\n      {\n          \"keyword\": \"additionalProperties\",\n          \"dataPath\": \"\",\n          \"schemaPath\": \"#/additionalProperties\",\n          \"params\": {\n              \"additionalProperty\": \"nope\"\n          },\n          \"message\": \"should NOT have additional properties\"\n      }\n   ]\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/configuration.js",
    "groupTitle": "Configuration_5"
  },
  {
    "type": "delete",
    "url": "/v1/products/:productIdOrSlug/config/:deviceId",
    "title": "Delete device configuration schema",
    "name": "DeleteDeviceConfigSchema",
    "group": "Configuration_6",
    "description": "<p>Delete device's configuration schema, use product's.</p>",
    "examples": [
      {
        "title": "$ curl -X DELETE \"https://api.particle.io/v1/products/1234/config/43210\" \\",
        "content": "$ curl -X DELETE \"https://api.particle.io/v1/products/1234/config/43210\" \\\n       -H \"Authorization: Bearer ACCESS-TOKEN-HERE\" \\\n       -H \"Content-Type: application/schema+json\" \\\n       -d '{}'",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "PUT https://api.particle.io/v1/products/1234/config/43210",
          "content": "PUT https://api.particle.io/v1/products/1234/config/43210\nHTTP/1.1 204 OK",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/configuration.js",
    "groupTitle": "Configuration_6"
  },
  {
    "type": "put",
    "url": "/v1/products/:productIdOrSlug/config/:deviceId",
    "title": "Set device configuration",
    "name": "SetDeviceConfig",
    "group": "Configuration_6",
    "description": "<p>Set some configuration values for the device that will override the product default.</p> <p>Send an empty request to reset the device to product defaults.</p> <p>Returns 200, 202 or 400 for various states</p> <ul> <li>200 when the device is online and accepted the configuration changes.</li> <li>202 when the device is offline. We'll complete the request when it comes online again</li> <li>400 When the device is online, but has rejected some of the configuration keys.  A list of accepted and rejected keys with device error codes is provided</li> </ul> <p>You should always get the entire configuration, change values, and set the whole configuration back. In HTTP REST APIs, POST and PUT do not merge changes with the existing data.</p>",
    "examples": [
      {
        "title": "$ curl -X PUT \"https://api.particle.io/v1/products/1234/config/abc123?access_token=abc123\" \\",
        "content": "$ curl -X PUT \"https://api.particle.io/v1/products/1234/config/abc123?access_token=abc123\" \\\n       -H \"Content-Type: application/json\" \\\n       -d \"{\\\"location\\\":{\\\"radius\\\":5.0}}\"",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Success",
          "content": " PUT https://api.particle.io/v1/products/1234/config/abc123\n HTTP/1.1 200 OK\n{}",
          "type": "json"
        },
        {
          "title": "Accepted",
          "content": " PUT https://api.particle.io/v1/products/1234/config/abc123\n HTTP/1.1 202 Accepted\n{}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Partial or full rejection",
          "content": " PUT https://api.particle.io/v1/products/1234/config/abc123\n HTTP/1.1 400 Bad Request\n{\n  error: 'device_rejected_configuration',\n  error_description: 'Configuration updates failed for some sections: {location: -19}, these sections were successful: imu_trig'\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/configuration.js",
    "groupTitle": "Configuration_6"
  },
  {
    "type": "put",
    "url": "/v1/products/:productIdOrSlug/config/:deviceId",
    "title": "Set device configuration schema",
    "name": "SetDeviceSchema",
    "group": "Configuration_6",
    "description": "<p>Set configuration schema for the device.</p> <p>This must be the entire schema, including the standard Particle parts; there is no merging of changes.</p>",
    "examples": [
      {
        "title": "$ curl -X PUT \"https://api.particle.io/v1/products/1234/config/43210\" \\",
        "content": "$ curl -X PUT \"https://api.particle.io/v1/products/1234/config/43210\" \\\n       -H \"Authorization: Bearer ACCESS-TOKEN-HERE\" \\\n       -H \"Content-Type: application/schema+json\" \\\n       -d '{\n               \"$schema\": \"https://particle.io/draft-07/schema#\",\n               \"type\": \"object\",\n               \"title\": \"Fake Custom Schema\",\n               \"description\": \"A customized JSON schema for testing\",\n               \"required\": [\n                   \"foo\"\n               ],\n               \"properties\": {\n                   \"foo\": {\n                       \"$id\": \"#/properties/foo\",\n                       \"type\": \"integer\",\n                       \"title\": \"Foo\",\n                       \"description\": \"A test setting named `foo`\",\n                       \"default\": 1,\n                       \"examples\": [1, 2, 3],\n                       \"minimum\": 0\n                   },\n                   \"bar\": {\n                       \"$id\": \"#/properties/bar\",\n                       \"type\": \"string\",\n                       \"title\": \"Bar\",\n                       \"description\": \"A test setting named `bar`\",\n                       \"default\": \"\",\n                       \"examples\": [\"one\", \"two\", \"three\"]\n                   }\n               }\n          }'",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "PUT https://api.particle.io/v1/products/1234/config/43210",
          "content": "PUT https://api.particle.io/v1/products/1234/config/43210\nHTTP/1.1 200 OK\n{\n    \"$schema\": \"https://particle.io/draft-07/schema#\",\n    \"type\": \"object\",\n    \"title\": \"Fake Custom Schema\",\n    \"description\": \"A customized JSON schema for testing\",\n    \"required\": [\n        \"foo\"\n    ],\n    \"properties\": {\n        \"foo\": {\n            \"$id\": \"#/properties/foo\",\n            \"type\": \"integer\",\n            \"title\": \"Foo\",\n            \"description\": \"A test setting named `foo`\",\n            \"default\": 1,\n            \"examples\": [1, 2, 3],\n            \"minimum\": 0\n        },\n        \"bar\": {\n            \"$id\": \"#/properties/bar\",\n            \"type\": \"string\",\n            \"title\": \"Bar\",\n            \"description\": \"A test setting named `bar`\",\n            \"default\": \"\",\n            \"examples\": [\"one\", \"two\", \"three\"]\n        }\n    }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Partial or full rejection",
          "content": "PUT https://api.particle.io/v1/products/1234/config/43210\nHTTP/1.1 422 Bad Request\n{\n   message: 'Invalid Schema',\n   description: 'data should NOT have additional properties',\n   violations: [\n      {\n          \"keyword\": \"additionalProperties\",\n          \"dataPath\": \"\",\n          \"schemaPath\": \"#/additionalProperties\",\n          \"params\": {\n              \"additionalProperty\": \"nope\"\n          },\n          \"message\": \"should NOT have additional properties\"\n      }\n   ]\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/configuration.js",
    "groupTitle": "Configuration_6"
  },
  {
    "type": "delete",
    "url": "/v1/products/:productIdOrSlug/customers/:customerEmail",
    "title": "Delete a customer",
    "name": "deleteCustomer",
    "description": "<p>Delete a customer in a product. Will also revoke all of this customer's access tokens, pending device claim codes and activation codes.</p>",
    "group": "Customers_10",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "customerEmail",
            "description": "<p>Email of the customer account that you'd like to remove</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "customers:remove"
      }
    ],
    "examples": [
      {
        "title": "$ curl -X DELETE \"https://api.particle.io/v1/products/:productIdOrSlug/customers/test@company.com\" \\",
        "content": "$ curl -X DELETE \"https://api.particle.io/v1/products/:productIdOrSlug/customers/test@company.com\" \\\n       -d access_token=123abc",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "DELETE /v1/products/:productIdOrSlug/customers/:customerEmail",
          "content": "DELETE /v1/products/:productIdOrSlug/customers/:customerEmail\nHTTP/1.1 200 OK\n\n{\"ok\": true}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Customers_10"
  },
  {
    "type": "post",
    "url": "/v1/products/:productIdOrSlug/customers",
    "title": "Create a customer - Access Token",
    "name": "CreateCustomer",
    "description": "<p>Create a customer for a product. An access token of a user that belongs to the product is required. The <code>email</code> field can contain a unique identifier instead but some platform functionalities might not work (i.e. sending a password reset email).</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>Email Address or a unique identifier</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>Password</p>"
          }
        ]
      }
    },
    "group": "Customers_1",
    "success": {
      "examples": [
        {
          "title": "POST /v1/products/photon/customers",
          "content": "POST /v1/products/photon/customers\nHTTP/1.1 201 OK\n{\n    \"token_type\": \"bearer\",\n    \"access_token\": \"92b6d13edaab936b016d54266a46134160f087e8\",\n    \"refresh_token\": \"14b4d13edaab634b019d54265a46132160f017e8\",\n    \"expires_in\": 7776000\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Customers_1"
  },
  {
    "type": "post",
    "url": "/v1/products/:productIdOrSlug/customers",
    "title": "Create a customer - Client Credentials",
    "name": "CreateCustomer",
    "description": "<p>Create a customer for a product using OAuth client credentials grant type. <strong>This is the way you should hit the <code>POST</code> customers endpoint if you are creating customers from your server (two-legged authentication), or from a mobile application</strong>. In this case, you may create a customer without a password, by passing the <code>no_password: true</code> flag.</p> <p>You must give a valid product OAuth client ID and secret in HTTP Basic Auth or in the <code>client_id</code> and <code>client_secret</code> parameters.</p>",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>HTTP Basic Auth where username is the OAuth client ID and password is the OAuth client secret.</p>"
          }
        ]
      }
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "client_id",
            "description": "<p>OAuth client ID. Required if no Authorization header is present.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "client_secret",
            "description": "<p>OAuth client secret. Required if no Authorization header is present.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>Email Address</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "password",
            "description": "<p>Password</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "no_password",
            "description": "<p>For two-legged authentication, only required if you are creating password-less customers.</p>"
          }
        ]
      }
    },
    "group": "Customers_2",
    "success": {
      "examples": [
        {
          "title": "POST /v1/products/photon/customers",
          "content": "POST /v1/products/photon/customers\nHTTP/1.1 201 OK\n{\n    \"token_type\": \"bearer\",\n    \"access_token\": \"92b6d13edaab936b016d54266a46134160f087e8\",\n    \"refresh_token\": \"14b4d13edaab634b019d54265a46132160f017e8\",\n    \"expires_in\": 7776000\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Customers_2"
  },
  {
    "type": "post",
    "url": "/v1/products/:productIdOrSlug/customers",
    "title": "Create a customer - Implicit",
    "name": "CreateCustomer",
    "description": "<p>Create a customer for a product using OAuth implicit grant type. <strong>This is the way you should hit the <code>POST</code> customers endpoint if you are creating customers from a web browser</strong>. After a successful <code>POST</code>, the customer access token will be appended as a hash to the redirect URI associated with the client credentials provided. For this grant type, you must also pass <code>response_type: token</code>.</p> <p>You must give a valid product OAuth client ID in HTTP Basic Auth or in the <code>client_id</code> parameter. <strong>Do not pass the OAuth client secret when creating customers from a web browser.</strong></p>",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>HTTP Basic Auth where username is the OAuth client ID and password is blank.</p>"
          }
        ]
      }
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "client_id",
            "description": "<p>OAuth client ID. Required if no Authorization header is present.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>Email Address</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>Password</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "response_type",
            "description": "<p>OAuth response type. Should only be included for implicit grant type and should be set to <code>token</code>.</p>"
          }
        ]
      }
    },
    "group": "Customers_3",
    "success": {
      "examples": [
        {
          "title": "POST /v1/products/photon/customers",
          "content": "POST /v1/products/photon/customers\nHTTP/1.1 201 OK",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Customers_3"
  },
  {
    "type": "get",
    "url": "/v1/products/:productIdOrSlug/customers",
    "title": "List Customers for a Product",
    "name": "ListProductCustomers",
    "description": "<p>List Customers for a product.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "customers:list"
      }
    ],
    "group": "Customers_4",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Access Token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Authorization-Example",
          "content": "Authorization: \"Bearer 01234567890ABCDEF\"",
          "type": "json"
        }
      ]
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "customers",
            "description": "<p>List of Customers</p>"
          },
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "devices",
            "description": "<p>List of Devices that belong to those customers</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "customers.id",
            "description": "<p>Customer ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "customers.username",
            "description": "<p>Username</p>"
          },
          {
            "group": "Success 200",
            "type": "String[]",
            "optional": false,
            "field": "customers.devices",
            "description": "<p>List of Device IDs</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "devices.id",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "devices.product_id",
            "description": "<p>Product ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "devices.last_ip_address",
            "description": "<p>Last known IP Address</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "devices.firmware_version",
            "description": "<p>Firmware Version</p>"
          },
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "devices.online",
            "description": "<p>Whether the device is currently online or not</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/products/photon",
          "content": "GET /v1/products/photon\nHTTP/1.1 200 OK\n{\n  \"customers\": [\n    {\n      \"id\": \"01234567890ABCDEF\",\n      \"full_name\": \"Bob Loblaw\",\n      \"username\": \"bob@loblaw.net\",\n      \"devices\": [\"0123456789abcdef01234567\"]\n    }\n  ],\n  \"devices\": [\n  \t{\n  \t\t\"id\": \"0123456789abcdef01234567\",\n  \t\t\"product_id\": 6,\n  \t\t\"last_ip_address\": \"127.0.0.1\",\n  \t\t\"firmware_version\": 1,\n  \t\t\"online\": true\n  \t}\n  ],\n  \"meta\": {\n  \t\"total_pages\": 4\n  }\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Customers_4"
  },
  {
    "type": "post",
    "url": "/oauth/token",
    "title": "Generate a customer scoped access token",
    "description": "<p>Creates a token scoped to a customer for your organization.</p> <p>You must give a valid product OAuth client ID and secret in HTTP Basic Auth or in the <code>client_id</code> and <code>client_secret</code> parameters.</p>",
    "group": "Customers_5",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>HTTP Basic Auth where username is the OAuth client ID and password is the OAuth client secret.</p>"
          }
        ]
      }
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "client_id",
            "description": "<p>OAuth client ID. Required if no Authorization header is present.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "client_secret",
            "description": "<p>OAuth client secret. Required if no Authorization header is present.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "grant_type",
            "description": "<p>OAuth grant type. Must be <code>client_credentials</code>.</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": true,
            "field": "expires_in",
            "description": "<p>How many seconds the token will be valid for. <code>0</code> means forever. Short lived tokens are better for security.</p>"
          },
          {
            "group": "Parameter",
            "type": "Date",
            "optional": true,
            "field": "expires_at",
            "description": "<p>When should the token expire? This should be an ISO8601 formatted date string.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "scope",
            "description": "<p>The customer to scope this token to. Format of <code>customer=jane@example.com</code>.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl https://api.particle.io/oauth/token \\",
        "content": "$ curl https://api.particle.io/oauth/token \\\n       -u my-org-client-1234:long-secret \\\n       -d grant_type=client_credentials \\\n       -d \"scope=customer=jane@example.com\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "access_token",
            "description": "<p>The magical token you will use for all the other requests</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "allowedValues": [
              "bearer"
            ],
            "optional": false,
            "field": "token_type",
            "description": ""
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "expires_in",
            "description": "<p>The number of seconds this token is valid for. <code>0</code> means forever.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "refresh_token",
            "description": "<p>Used to generate a new access token when it has expired.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "POST /oauth/token",
          "content": "POST /oauth/token\nHTTP/1.1 200 OK\n{\n  \"access_token\": \"254406f79c1999af65a7df4388971354f85cfee9\",\n  \"token_type\": \"bearer\",\n  \"expires_in\": 7776000,\n  \"refresh_token\": \"b5b901e8760164e134199bc2c3dd1d228acf2d90\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/accessToken.js",
    "groupTitle": "Customers_5",
    "name": "PostOauthToken"
  },
  {
    "type": "put",
    "url": "/v1/products/:productIdOrSlug/customers/:customerEmail",
    "title": "Update customer password",
    "name": "updateCustomerPassword",
    "group": "Customers_6",
    "description": "<p>Update the account password for a customer. Only relevant for non-shadow customers that have a password saved in Particle's system. Must be called with an access token that has access to the product, not a customer access token.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "customerEmail",
            "description": "<p>Email of the customer account that you'd like to update</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>The new password for the customer</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "customers:update"
      }
    ],
    "examples": [
      {
        "title": "Example Request",
        "content": "$ curl -X PUT \"https://api.particle.io/v1/products/:productIdOrSlug/customers/test@company.com\" \\\n       -d access_token=123abc \\\n       -d password=newpassword",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "PUT /v1/products/:productIdOrSlug/customers/:customerEmail",
          "content": "PUT /v1/products/:productIdOrSlug/customers/:customerEmail\nHTTP/1.1 200 OK\n\n{\"ok\": true}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Customers_6"
  },
  {
    "type": "post",
    "url": "/v1/device_claims",
    "title": "Create a claim code",
    "name": "GenerateClaimCode",
    "description": "<p>Generate a device claim code that allows the device to be successfully claimed to a Particle account during the setup process. You can use the product endpoint for creating a claim code to allow customers to successfully claim a product device. Use an access token that was generated by the Particle account you'd like to claim ownership of the device.</p> <p>When creating claim codes for Wi-Fi devices like Photons, allow the cloud to generate the claim code for you. This is done by not passing anything to the request body (with the exception of products in private beta, which require an activation code to generate a claim code). Then, this claim code must be sent to the Photon via SoftAP. For more information on how to send claim codes to Particle devices via SoftAP, please check out <a href=\"https://github.com/spark/softap-setup-js\">Particle SoftAP setup for JavaScript</a>.</p> <p>Conversely, for cellular devices like Electrons, you must create a claim code equal to the <code>iccid</code> or <code>imei</code> of the device. This is because Electrons are not directly connected to by the client during setup. This is done by passing an <code>iccid</code> or <code>imei</code> in the body of the request when creating a claim code.</p> <p>When an device connects to the cloud, it will immediately publish its claim code (or in the case of Electrons, it will publish its ICCID and IMEI). The cloud will check this code against all valid claim codes, and if there is a match, successfully claim the device to the account used to create the claim code.</p>",
    "group": "Devices_10",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Access Token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Authorization-Example",
          "content": "Authorization: \"Bearer 01234567890ABCDEF\"",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "imei",
            "description": "<p>IMEI number of the Electron you are generating a claim for. This will be used as the claim code if <code>iccid</code> is not specified.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "iccid",
            "description": "<p>ICCID number (SIM card ID number) of the SIM you are generating a claim for. This will be used as the claim code.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "activation_code",
            "description": "<p>Activation Code. Only required if product is in private beta. <em>Product endpoint only</em>.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug. <em>Product endpoint only</em>.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl https://api.particle.io/v1/device_claims \\",
        "content": "$ curl https://api.particle.io/v1/device_claims \\\n       -d access_token=1234",
        "type": "bash"
      },
      {
        "title": "Create claim code for a product device",
        "content": "$ curl https://api.particle.io/v1/products/:productIdOrSlug/device_claims \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "claim_code",
            "description": "<p>a claim code for use during the device setup process</p>"
          },
          {
            "group": "Success 200",
            "type": "String[]",
            "optional": false,
            "field": "device_ids",
            "description": "<p>Array of device IDs that already belong to the user</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Example Response",
          "content": " POST /v1/device_claims\n HTTP/1.1 200 OK\n {\n\t\tclaim_code: 'rCFr2KAJNgzJ2rR3Jm1ZoUd7G4Sr3ak7MRHdWrM274eYzInP1+psZ0fP2qNehlj',\n\t\tdevice_ids: ['33ff210644893f533e242597']\n }",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Devices_10"
  },
  {
    "type": "post",
    "url": "/v1/devices",
    "title": "Claim a Device",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Device ID</p>"
          }
        ],
        "Request device transfer from another user": [
          {
            "group": "transfer",
            "type": "Boolean",
            "allowedValues": [
              "true"
            ],
            "optional": false,
            "field": "request_transfer",
            "description": "<p>Indicates you are requesting a device transfer from another user</p>"
          }
        ]
      }
    },
    "name": "ClaimDevice",
    "description": "<p>Claim a new or unclaimed device to your account.</p>",
    "group": "Devices_12",
    "examples": [
      {
        "title": "$ curl https://api.particle.io/v1/devices \\",
        "content": "$ curl https://api.particle.io/v1/devices \\\n       -d id=0123456789abcdef01234567 \\\n       -d access_token=1234",
        "type": "bash"
      },
      {
        "title": "transfer",
        "content": "$ curl https://api.particle.io/v1/devices \\\n       -d id=0123456789abcdef01234567 \\\n       -d request_transfer=true \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Request device transfer from another user": [
          {
            "group": "transfer",
            "type": "String",
            "optional": false,
            "field": "transfer_id",
            "description": "<p>Unique ID that represents the transfer</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Devices_12"
  },
  {
    "type": "delete",
    "url": "/v1/products/:productIdOrSlug/devices/:deviceID",
    "title": "Remove device from product",
    "name": "removeDeviceFromProduct",
    "permission": [
      {
        "name": "devices:remove"
      }
    ],
    "group": "Devices_13",
    "description": "<p>Remove a device from a product and re-assign to a generic Particle product. This endpoint will unclaim the device if it is owned by a <code>customer</code>.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceID",
            "description": "<p>ID of the device to be removed</p>"
          }
        ]
      }
    },
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Access Token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Authorization-Example",
          "content": "Authorization: \"Bearer 01234567890ABCDEF\"",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "DELETE /v1/products/photon/devices/123abc",
          "content": "DELETE /v1/products/photon/devices/123abc\nHTTP/1.1 204 NO CONTENT",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Devices_13"
  },
  {
    "type": "delete",
    "url": "/v1/devices/:deviceID",
    "title": "Unclaim device",
    "name": "unclaimDevice",
    "group": "Devices_14",
    "description": "<p>Remove ownership of a device. This will unclaim regardless if the device is owned by a <code>user</code> or a <code>customer</code>, in the case of a product.</p> <p>When using this endpoint to unclaim a product device, the route looks slightly different:</p> <p><code>DELETE /v1/products/:productIdOrSlug/devices/:deviceID/owner</code></p> <p>Note the <code>/owner</code> at the end of the route.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceID",
            "description": "<p>ID of the device to be unclaimed</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "devices:release"
      }
    ],
    "examples": [
      {
        "title": "$ curl -X DELETE https://api.particle.io/v1/devices/12345 \\",
        "content": "$ curl -X DELETE https://api.particle.io/v1/devices/12345 \\\n       -d access_token=123abc",
        "type": "bash"
      },
      {
        "title": "Unclaim product device",
        "content": "# Note that the product endpoint requires adding \"/owner\" to the end of the route\n\n$ curl -X DELETE https://api.particle.io/v1/products/:productIdOrSlug/devices/12345/owner \\\n       -d access_token=123abc",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "DELETE /v1/devices/12345",
          "content": "DELETE /v1/devices/12345\nHTTP/1.1 200 OK\n{\n  \"ok\": true\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Devices_14"
  },
  {
    "type": "put",
    "url": "/v1/devices/:deviceID",
    "title": "Signal a device",
    "name": "signalDevice",
    "group": "Devices_15",
    "description": "<p>Make the device conspicuous by causing its LED to flash in rainbow patterns</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "signal",
            "description": "<p>1 to start shouting rainbows, 0 to stop</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl -X PUT https://api.particle.io/v1/devices/12345 \\",
        "content": "$ curl -X PUT https://api.particle.io/v1/devices/12345 \\\n       -d signal=1 \\\n       -d access_token=123abc",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "PUT /v1/devices/12345",
          "content": "PUT /v1/devices/12345\nHTTP/1.1 200 OK\n{\n  \"id\": \"12345\",\n  \"connected\": true,\n  \"signaling\": true\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Devices_15"
  },
  {
    "type": "put",
    "url": "/v1/devices/:deviceID",
    "title": "Force enable OTA updates",
    "name": "forceUpdates",
    "group": "Devices_16",
    "description": "<p><a href=\"https://docs.particle.io/tutorials/device-cloud/ota-updates/#force-enable-ota-updates\">Force enable</a> OTA updates on this device.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": false,
            "field": "firmware_updates_forced",
            "description": "<p><code>true</code> to force enable updates, <code>false</code> to unforce updates.</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "devices:update"
      }
    ],
    "examples": [
      {
        "title": "$ curl -X PUT https://api.particle.io/v1/devices/12345 \\",
        "content": "$ curl -X PUT https://api.particle.io/v1/devices/12345 \\\n       -d firmware_updates_forced=true \\\n       -d access_token=123abc",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "PUT /v1/devices/12345",
          "content": "PUT /v1/devices/12345\nHTTP/1.1 200 OK\n{\n  \"id\": \"12345\",\n  \"firmware_updates_forced\": true\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Devices_16"
  },
  {
    "type": "get",
    "url": "/v1/serial_numbers/:serial_number",
    "title": "Look up device identification from a serial number",
    "group": "Devices_17",
    "description": "<p>Return the device ID and SIM card ICCD (if applicable) for a device by serial number.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "serial_number",
            "description": "<p>The serial number printed on the barcode of the device packaging.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/serial_numbers/E26AAA111111111?access_token=1234\"",
        "content": "$ curl \"https://api.particle.io/v1/serial_numbers/E26AAA111111111?access_token=1234\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "deviceID",
            "description": "<p>The ID of the device associated with this device</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "iccid",
            "description": "<p>The ICCID number (SIM card ID number) of the SIM card associated with this device</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/serial_numbers/E26AAA111111111",
          "content": "GET /v1/serial_numbers/E26AAA111111111\nHTTP/1.1 200 OK\n{\n  \"ok\": true,\n  \"deviceID\": \"0123456789abcdef01234567\",\n  \"iccid\": \"8934076500002589174\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Devices_17",
    "name": "GetV1Serial_numbersSerial_number"
  },
  {
    "type": "get",
    "url": "/v1/devices",
    "title": "List Devices",
    "name": "ListDevices",
    "description": "<p>List devices the currently authenticated user has access to. By default, devices will be sorted by <code>last_handshake_at</code> in descending order.</p>",
    "group": "Devices_1",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "-",
            "description": "<p>Array of devices. See <a href=\"#get-device-information\">Get device information</a> for the response attributes of each device.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/devices",
          "content": "GET /v1/devices\nHTTP/1.1 200 OK\n[\n  {\n    \"id\": \"53ff6f0650723\",\n    \"name\": \"plumber_laser\",\n    \"last_ip_address\": \"10.0.0.1\",\n    \"last_heard\": \"2020-05-28T14:46:07.586Z\",\n    \"last_handshake_at\": \"2020-05-27T18:13:01.059Z\",\n    \"product_id\": 6,\n    \"online\": true,\n    \"platform_id\": 6,\n    \"cellular\": false,\n    \"notes\": \"laser!\",\n    \"functions\": [\n      \"fire\"\n    ],\n    \"variables\": {\n      \"power\": \"int32\"\n    },\n    \"status\": \"normal\",\n    \"serial_number\": \"PH1234\",\n    \"system_firmware_version\": \"1.5.0\"\n  },\n  {\n    \"id\": \"53ff291839887\",\n    \"name\": \"particle_love\",\n    \"last_ip_address\": \"10.0.0.1\",\n    \"last_heard\": \"2020-05-28T14:46:07.586Z\",\n    \"last_handshake_at\": \"2020-05-27T18:13:01.059Z\",\n    \"product_id\": 10,\n    \"online\": false,\n    \"platform_id\": 10,\n    \"notes\": null,\n    \"functions\": [],\n    \"variables\": {},\n    \"cellular\": true,\n    \"status\": \"normal\",\n    \"serial_number\": \"E261234\",\n    \"iccid\": \"1111111111111111111\",\n    \"imei\": \"333333333333333\",\n    \"system_firmware_version\": \"1.5.0\"\n  }\n]",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Devices_1"
  },
  {
    "type": "get",
    "url": "/v1/products/:productIdOrSlug/devices",
    "title": "List Devices in a product",
    "name": "listDevicesForProduct",
    "group": "Devices_2",
    "description": "<p>List all devices that are part of a product. Results are paginated, by default returns 25 device records per page.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "deviceId",
            "description": "<p>Filter results to devices with this ID (partial matching)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "groups",
            "description": "<p>Comma separated list of full group names to filter results to devices belonging to these groups only</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "deviceName",
            "description": "<p>Filter results to devices with this name (partial matching)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "serialNumber",
            "description": "<p>Filter results to devices with this serial number (partial matching)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "sortAttr",
            "description": "<p>The attribute by which to sort results. Options for sorting are <code>deviceId</code>, <code>firmwareVersion</code>, or <code>lastConnection</code>. By default, if no <code>sortAttr</code> parameter is set, devices will be sorted by last connection, in descending order</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "sortDir",
            "description": "<p>The direction of sorting. Pass <code>asc</code> for ascending sorting or <code>desc</code> for descending sorting</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "allowedValues": [
              "true"
            ],
            "optional": true,
            "field": "quarantined",
            "description": "<p>include / exclude quarantined devices</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": true,
            "field": "page",
            "defaultValue": "1",
            "description": "<p>Current page of results</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": true,
            "field": "perPage",
            "defaultValue": "25",
            "description": "<p>Records per page</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "devices:list"
      }
    ],
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/devices?access_token=1234\"",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/devices?access_token=1234\"",
        "type": "bash"
      },
      {
        "title": "List devices in a group",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/devices?groups=beta&access_token=1234\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "devices",
            "description": "<p>An array of devices objects. See <a href=\"#get-device-information\">Get device information</a> for the response attributes of each device.</p>"
          },
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "customers",
            "description": "<p>An array of customer objects</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "customers.id",
            "description": "<p>Customer ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "customers.username",
            "description": "<p>Customer username</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "customers.activation_code",
            "description": "<p>An activation code used for device claiming if the product is in &quot;Private Beta&quot; mode</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "meta",
            "description": "<p>Pagination metadata</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "meta.total_pages",
            "description": "<p>Total number of pages of device records</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/products/:productIdOrSlug/devices",
          "content": "GET /v1/products/:productIdOrSlug/devices\nHTTP/1.1 200 OK\n{\n\t\"devices\": [\n\t \t{\n\t \t\t\"id\":\"1d002a000547343232363230\",\n\t \t\t\"name\":\"jeff_test_device\",\n\t \t\t\"last_ip_address\":\"199.230.10.194\",\n\t \t\t\"last_heard\":\"2016-06-10T15:00:07.100Z\",\n\t \t\t\"last_handshake_at\":\"2016-06-10T14:56:27.100Z\",\n\t \t\t\"product_id\":295,\n\t \t\t\"online\":false,\n\t \t\t\"platform_id\": 13,\n\t \t    \"cellular\": true,\n\t \t    \"functions\": [\n\t \t      \"cmd\"\n\t \t    ],\n\t \t    \"variables\": {\n\t \t      \"temperature\": \"double\"\n\t \t    },\n\t \t    \"status\": \"normal\",\n\t \t    \"serial_number\": \"E40KAB111111111\",\n\t \t    \"iccid\": \"89014111111111111111\",\n         \"imei\": \"352753090000000\",\n         \"mobile_secret\": \"WBPYG6CPLRCFK4S\",\n\t \t    \"system_firmware_version\": \"3.0.0\",\n\t \t    \"firmware_product_id\": 295,\n\t \t    \"groups\":[\"asia\",\"europe\"],\n\t \t\t\"firmware_version\":3,\n\t \t    \"desired_firmware_version\": null,\n\t \t    \"targeted_firmware_release_version\": 3,\n\t \t\t\"development\":false,\n\t \t\t\"quarantined\":false,\n\t \t\t\"denied\":false,\n\t \t\t\"owner\":\"jeff@particle.io\"\n\t \t},\n\t \t{\n\t \t\t\"id\":\"32001e000747343337373738\",\n\t \t\t\"last_ip_address\":\"199.21.86.18\",\n\t \t\t\"last_heard\":\"2016-06-10T15:00:07.100Z\",\n\t \t\t\"last_handshake_at\":\"2016-06-10T14:56:27.100Z\",\n\t \t\t\"product_id\":13,\n\t \t\t\"online\":false,\n\t \t\t\"platform_id\": 13,\n\t \t    \"cellular\": true,\n\t \t    \"status\": \"normal\",\n\t \t    \"serial_number\": \"E40KAB111111112\",\n\t \t    \"iccid\": \"89014111111111111112\",\n         \"imei\": \"352753090000001\",\n         \"mobile_secret\": \"VNH9JNXMXW5YY9X\",\n\t \t    \"system_firmware_version\": \"2.0.0\",\n\t \t    \"firmware_product_id\": 295,\n\t \t    \"development\": false,\n\t \t\t\"quarantined\": true,\n\t \t\t\"denied\": false\n\t \t},\n\t \t...\n\t],\n\t\"customers\": [\n\t\t{\n\t \t \tid:\"123abc3456\",\n\t\t \tusername: \"customer@gmail.com\",\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"total_pages\":1\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Devices_2"
  },
  {
    "type": "post",
    "url": "/v1/products/:productIdOrSlug/devices",
    "title": "Import Devices into product",
    "name": "importDevicesIntoProduct",
    "group": "Devices_3",
    "description": "<p>Import devices into a product. Devices must be of the same <em>platform type</em> as the product in order to be successfully imported. Imported devices may receive an immediate OTA firmware update to the product's released firmware.</p> <p>Importing a device with a SIM card will also import the SIM card into the product.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "id",
            "description": "<p>A device ID to import into a product. Pass <code>id</code> if you are trying to import a single device</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "import_sims",
            "description": "<p>Import SIM card associated with each device into the product</p>"
          },
          {
            "group": "Parameter",
            "type": "File",
            "optional": true,
            "field": "file",
            "description": "<p>A .txt file containing a single-column list of device IDs, device serial numbers, device IMEIs or device ICCIDs. This is the preferred method of importing many devices into a product at once. Encoded in <code>multipart/form-data</code> format</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "devices:import"
      }
    ],
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/devices?access_token=12345\" \\",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/devices?access_token=12345\" \\\n       -F file=@devices.txt",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "updated",
            "description": "<p>The number of devices successfully added to the product</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "nonmemberDeviceIds",
            "description": "<p>Device IDs that already belong to other products that could not be imported</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "invalidDeviceIds",
            "description": "<p>Device IDs that were invalid and could not be imported</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "POST /v1/products/:productIdOrSlug/devices",
          "content": "POST /v1/products/:productIdOrSlug/devices\nHTTP/1.1 200 OK\n{\n\t\"updated\":20,\n\t\"nonmemberDeviceIds\":[],\n\t\"invalidDeviceIds\":[]\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Devices_3"
  },
  {
    "type": "get",
    "url": "/v1/devices/:deviceId",
    "title": "Get device information",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceId",
            "description": "<p>Device ID</p>"
          }
        ]
      }
    },
    "name": "GetDevice",
    "description": "<p>Get basic information about the given device, including the custom variables and functions it has exposed.</p>",
    "group": "Devices_4",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Device name</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "owner",
            "description": "<p>Particle username for the user who claimed this device</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "last_ip_address",
            "description": "<p>IP address of the device the last time it connected to the cloud</p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "last_heard",
            "description": "<p>Date and Time that the cloud last heard from the device in ISO 8601 format</p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "last_handshake_at",
            "description": "<p>Date and time that the device most recently connected to the cloud in ISO 8601 format</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "product_id",
            "description": "<p>For development devices, this equals platform_id. For product devices, your product number.</p>"
          },
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "online",
            "description": "<p>Indicates whether the device is currently connected to the cloud</p>"
          },
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "connected",
            "description": "<p>Deprecated. Use <code>online</code></p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "platform_id",
            "description": "<p>Indicates the type of device. Example values are <code>6</code> for Photon, <code>10</code> for Electron, <code>11</code> for Argon, <code>12</code> for Boron.</p>"
          },
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "cellular",
            "description": "<p>True for cellular devices (Electron, Boron), false otherwise</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "notes",
            "description": "<p>Free-form notes about the device</p>"
          },
          {
            "group": "Success 200",
            "type": "String[]",
            "optional": false,
            "field": "functions",
            "description": "<p>List of function names exposed by the device</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "variables",
            "description": "<p>List of variable name and types exposed by the device</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "serial_number",
            "description": "<p>The serial number of the device, if it exists</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "status",
            "description": "<p>When <code>normal</code> indicates the is running user application, when <code>safe_mode</code> indicates that the device has missing Device OS dependencies and is not running the user application.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "iccid",
            "description": "<p>Last SIM card ID used for cellular devices</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "last_iccid",
            "description": "<p>Deprecated. Use <code>iccid</code>.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "imei",
            "description": "<p>IMEI number for cellular devices</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "system_firmware_version",
            "description": "<p>Version of Device OS running on the device last reported to the cloud</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "current_build_target",
            "description": "<p>Deprecated. Use <code>system_firmware_version</code>.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "pinned_build_target",
            "description": "<p>Version of Device OS to use when compiling firmware for this device in the Web IDE. If not set, uses <code>default_build_target</code>.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "default_build_target",
            "description": "<p>Version of Device OS to use when compiling firmware for the platform of this device in the Web IDE.</p>"
          },
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "firmware_updates_enabled",
            "description": "<p>Indicates whether the device will accept firmware updates without being forced</p>"
          },
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "firmware_updates_forced",
            "description": "<p>Indicates whether firmware updates on the device have been forced from the cloud.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "mobile_secret",
            "description": "<p>The shared secret used by a mobile app to communicate securely with a device over BLE during setup</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "firmware_product_id",
            "description": "<p>The product ID that the device reported in its firmware the last time it connected to the cloud. <em>Product devices only</em></p>"
          },
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "groups",
            "description": "<p>An array of group names that the device belongs to. <em>Product devices only</em></p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "firmware_version",
            "description": "<p>The version number the device reported in its firmware. <em>Product devices only</em></p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "desired_firmware_version",
            "description": "<p>The version of firmware that the device has been individually locked to run. <em>Product devices only</em></p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "targeted_firmware_release_version",
            "description": "<p>The product firmware version the device is targeted to receive based on the locked version and released firmware. If <code>firmware_version</code> matches <code>targeted_firmware_release_version</code>, the device is currently running this firmware. <em>Product endpoint only</em></p>"
          },
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "development",
            "description": "<p>Set to <code>true</code> if a device has been marked as a <em>development device</em>, meaning it will not receive any product firmware updates from the cloud. <em>Product endpoint only</em></p>"
          },
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "quarantined",
            "description": "<p>If set to <code>true</code>, the device is unrecognized and has lost product privileges until it is manually approved. <em>Product endpoint only</em></p>"
          },
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "denied",
            "description": "<p>If set to <code>true</code>, this is a quarantined device that has been permanently denied access to product privileges. <em>Product endpoint only</em></p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/devices/0123456789abcdef01234567",
          "content": "GET /v1/devices/0123456789abcdef01234567\nHTTP/1.1 200 OK\n{\n  \"id\": \"0123456789abcdef01234567\",\n  \"name\": \"gongbot\",\n  \"owner\": \"someone@particle.io\",\n  \"last_ip_address\": \"176.83.211.237\",\n  \"last_heard\": \"2015-07-17T22:28:40.907Z\",\n  \"last_handshake_at\": \"2015-07-15T20:08:00.456Z\",\n  \"product_id\": 13,\n  \"online\": true,\n  \"platform_id\": 13,\n  \"cellular\": true,\n  \"notes\": null,\n  \"functions\": [\n    \"gong\",\n    \"goto\"\n  ],\n  \"variables\": {\n    \"Gongs\": \"int32\"\n  },\n  \"status\": \"normal\",\n  \"serial_number\": \"AAAAAA111111111\",\n  \"iccid\": \"89314404000111111111\",\n  \"imei\": \"357520000000000\",\n  \"mobile_secret\": \"NVYM5RK6AHCBELA\",\n  \"system_firmware_version\": \"1.5.0\",\n  \"firmware_updates_enabled\": true,\n  \"firmware_updates_forced\": false\n}",
          "type": "js"
        }
      ]
    },
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/devices/0123456789abcdef01234567?access_token=1234\"",
        "content": "$ curl \"https://api.particle.io/v1/devices/0123456789abcdef01234567?access_token=1234\"",
        "type": "bash"
      },
      {
        "title": "Get product device information",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/devices/0123456789abcdef01234567?access_token=1234\"",
        "type": "bash"
      }
    ],
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Devices_4"
  },
  {
    "type": "get",
    "url": "/v1/products/:productId/devices/:deviceId",
    "title": "Get product device information",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceId",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "devices:get"
      }
    ],
    "name": "GetProductDevice",
    "description": "<p>Get basic information about a given device that is part of a product</p> <p>See <a href=\"#get-device-information\">Get device information</a> for the response attributes</p>",
    "group": "Devices_5",
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Devices_5"
  },
  {
    "type": "get",
    "url": "/v1/devices/:deviceId/:varName",
    "title": "Get a variable value",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceId",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "varName",
            "description": "<p>Variable name</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"raw\""
            ],
            "optional": true,
            "field": "format",
            "description": "<p>Specify <code>raw</code> if you just the value returned</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug. <em>Product endpoint only</em>.</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "devices.variable:get"
      }
    ],
    "name": "GetDeviceVariable",
    "description": "<p>Request the current value of a variable exposed by the device. Variables can be read on a device you own, or for any device that is part of a product you are a team member of.</p>",
    "group": "Devices_6",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "result",
            "description": "<p>The variable value</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>The variable name</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "coreInfo",
            "description": "<p>The device information</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/devices/0123456789abcdef01234567/temperature",
          "content": "GET /v1/devices/0123456789abcdef01234567/temperature\nHTTP/1.1 200 OK\n{\n  \"name\": \"temperature\",\n  \"result\": 46,\n  \"coreInfo\": {\n    \"name\": \"weatherman\",\n    \"deviceID\": \"0123456789abcdef01234567\",\n    \"connected\": true,\n    \"last_handshake_at\": \"2015-07-17T22:28:40.907Z\",\n  }\n}",
          "type": "json"
        },
        {
          "title": "Raw Response",
          "content": "GET /v1/devices/0123456789abcdef01234567/temperature?format=raw\nHTTP/1.1 200 OK\n46",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/devices/0123456789abcdef01234567/temperature?access_token=1234\"",
        "content": "$ curl \"https://api.particle.io/v1/devices/0123456789abcdef01234567/temperature?access_token=1234\"",
        "type": "bash"
      },
      {
        "title": "Get variable value on product device",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/devices/0123456789abcdef01234567/temperature?access_token=1234\"",
        "type": "bash"
      }
    ],
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Devices_6"
  },
  {
    "type": "post",
    "url": "/v1/devices/:deviceId/:functionName",
    "title": "Call a function",
    "group": "Devices_7",
    "description": "<p>Call a function exposed by the device, with arguments passed in the request body. Functions can be called on a device you own, or for any device that is part of a product you are a team member of.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "functionName",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "arg",
            "description": "<p>Function argument with a maximum length of 63 characters</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "allowedValues": [
              "\"raw\""
            ],
            "optional": true,
            "field": "format",
            "description": "<p>Specify if you want the just the function return value returned</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug. <em>Product endpoint only</em>.</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "devices.function:call"
      }
    ],
    "examples": [
      {
        "title": "$ curl https://api.particle.io/v1/devices/0123456789abcdef01234567/gong \\",
        "content": "$ curl https://api.particle.io/v1/devices/0123456789abcdef01234567/gong \\\n       -d arg=\"ZEN PLEASE\" \\\n       -d access_token=1234",
        "type": "bash"
      },
      {
        "title": "Call a function on a product device",
        "content": "$ curl https://api.particle.io/v1/products/:productIdOrSlug/devices/0123456789abcdef01234567/gong \\\n       -d arg=\"ZEN PLEASE\" \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Device name</p>"
          },
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "connected",
            "description": "<p>Indicates if the device is currently connected to the cloud</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "return_value",
            "description": "<p>Return value from the called function</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "POST /v1/devices/0123456789abcdef01234567/gong",
          "content": "POST /v1/devices/0123456789abcdef01234567/gong\n{ \"arg\": \"ZEN PLEASE\" }\nHTTP/1.1 200 OK\n{\n  \"id\": \"0123456789abcdef01234567\",\n  \"name\": \"gongbot\",\n  \"connected\": true,\n  \"return_value\": 1\n}",
          "type": "json"
        },
        {
          "title": "Raw Response",
          "content": "POST /v1/devices/0123456789abcdef01234567/gong\n{ \"format\": \"raw\", \"arg\": \"ZEN PLEASE\" }\nHTTP/1.1 200 OK\n1",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Devices_7",
    "name": "PostV1DevicesDeviceidFunctionname"
  },
  {
    "type": "put",
    "url": "/v1/devices/:deviceId/ping",
    "title": "Ping a device",
    "group": "Devices_7",
    "description": "<p>This will ping a device, enabling you to see if your device is online or offline</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug. <em>Product endpoint only</em>.</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "devices:ping"
      }
    ],
    "examples": [
      {
        "title": "$ curl https://api.particle.io/v1/devices/0123456789abcdef01234567/ping \\",
        "content": "$ curl https://api.particle.io/v1/devices/0123456789abcdef01234567/ping \\\n       -X PUT \\\n       -d access_token=1234",
        "type": "bash"
      },
      {
        "title": "Ping a product device",
        "content": "$ curl https://api.particle.io/v1/products/:productIdOrSlug/devices/0123456789abcdef01234567/ping \\\n       -X PUT \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "online",
            "description": "<p>Indicates if the device is currently online</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "PUT /v1/devices/0123456789abcdef01234567/ping",
          "content": "PUT /v1/devices/0123456789abcdef01234567/ping\nHTTP/1.1 200 OK\n{\n  \"online\": true,\n  \"ok\": true\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Devices_7",
    "name": "PutV1DevicesDeviceidPing"
  },
  {
    "type": "put",
    "url": "/v1/devices/:deviceId",
    "title": "Rename a device",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceId",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em></p>"
          },
          {
            "group": "Parameter",
            "optional": true,
            "field": "name",
            "description": "<p>The desired name for the device</p>"
          }
        ]
      }
    },
    "name": "updateDeviceName",
    "description": "<p>Rename a device, either owned by a user or a product</p>",
    "group": "Devices_8",
    "permission": [
      {
        "name": "devices:update"
      }
    ],
    "examples": [
      {
        "title": "$ curl -X PUT https://api.particle.io/v1/devices/0123456789abcdef01234567 \\",
        "content": "$ curl -X PUT https://api.particle.io/v1/devices/0123456789abcdef01234567 \\\n       -d name=phancy_photon \\\n       -d access_token=1234",
        "type": "bash"
      },
      {
        "title": "Rename a product device",
        "content": "$ curl -X PUT https://api.particle.io/v1/products/:productIdOrSlug/devices/0123456789abcdef01234567 \\\n       -d name=phancy_photon \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Device name</p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "updated_at",
            "description": "<p>Timestamp representing the last time the deivce was updated in ISO8601 format</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "PUT /v1/devices/0123456789abcdef01234567",
          "content": "PUT /v1/devices/0123456789abcdef01234567\nHTTP/1.1 200 OK\n{\n  \"id\": \"0123456789abcdef01234567\",\n  \"name\": \"phancy_photon\"\n  \"updated_at\": \"2017-03-10T20:21:49.059Z\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Devices_8"
  },
  {
    "type": "put",
    "url": "/v1/devices/:deviceId",
    "title": "Add device notes",
    "name": "updateDeviceNotes",
    "group": "Devices_9",
    "permission": [
      {
        "name": "devices:update"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceId",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em></p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "notes",
            "description": "<p>Notes that you would like to add to the device</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl -X PUT https://api.particle.io/v1/devices/0123456789abcdef01234567 \\",
        "content": "$ curl -X PUT https://api.particle.io/v1/devices/0123456789abcdef01234567 \\\n       -d notes=\"A fancy device note\" \\\n       -d access_token=1234",
        "type": "bash"
      },
      {
        "title": "Add notes to a product device",
        "content": "$ curl -X PUT https://api.particle.io/v1/products/:productIdOrSlug/devices/0123456789abcdef01234567 \\\n       -d notes=\"A fancy device note\" \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "notes",
            "description": "<p>Notes that have been added to the device</p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "updated_at",
            "description": "<p>Timestamp representing the last time the deivce was updated in ISO8601 format</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "PUT /v1/devices/0123456789abcdef01234567",
          "content": "PUT /v1/devices/0123456789abcdef01234567\nHTTP/1.1 200 OK\n{\n  \"id\": \"0123456789abcdef01234567\",\n  \"notes\": \"A fancy device note\",\n  \"updated_at\": \"2017-03-10T20:21:49.059Z\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Devices_9"
  },
  {
    "type": "post",
    "url": "/v1/diagnostics/:deviceId/update",
    "title": "Refresh device vitals",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceId",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em></p>"
          }
        ]
      }
    },
    "name": "updateDeviceDiagnostics",
    "description": "<p>Refresh diagnostic vitals for a single device. This will instruct the device to publish a new event to the Device Cloud containing a device vitals payload. This is an asynchronous request: the HTTP request returns immediately after the request to the device is sent. In order for the device to respond with a vitals payload, it must be online and connected to the Device Cloud.</p> <p>The device will respond by publishing an event named <code>spark/device/diagnostics/update</code>. See the description of <a href=\"#device-vitals-event\">the device vitals event</a>.</p>",
    "group": "Diagnostics_1",
    "examples": [
      {
        "title": "$ curl -X POST \"https://api.particle.io/v1/diagnostics/0123456789abcdef01234567/update?access_token=1234\"",
        "content": "$ curl -X POST \"https://api.particle.io/v1/diagnostics/0123456789abcdef01234567/update?access_token=1234\"",
        "type": "bash"
      },
      {
        "title": "Refresh diagnostics for a device inside a product",
        "content": "$ curl -X POST \"https://api.particle.io/v1/products/:productIdOrSlug/diagnostics/0123456789abcdef01234567/update?access_token=1234\"",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "GET /v1/diagnostics/0123456789abcdef01234567/update",
          "content": "GET /v1/diagnostics/0123456789abcdef01234567/update\nHTTP/1.1 202\n{\n  \"ok\": true\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Diagnostics_1"
  },
  {
    "type": "publish",
    "url": "spark/device/diagnostics/update",
    "title": "Device vitals event",
    "name": "deviceVitals",
    "permission": [
      {
        "name": "devices.diagnostics:update"
      }
    ],
    "description": "<p>The device publishes a Particle event named <code>spark/device/diagnostics/update</code> in response to <a href=\"#refresh-device-vitals\">a Device Cloud request to refresh device vitals</a>. The body of the event will contain the diagnostic vitals for the device. The payload of the diagnostics payload will differ per device type.</p> <p>To contextualize and interpret raw device vitals published by the device, please see the <a href=\"#get-device-vitals-metadata\">get device vitals metadata</a> API documentation.</p>",
    "group": "Diagnostics_2",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-",
            "description": "<p>The device vitals payload information</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-.device",
            "description": "<p>Device vitals data containing diagnostics reported directly from the device</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-.device.network",
            "description": "<p>Represents diagnostics on all layers of the network stack that impact the device's ability to communicate with the Device Cloud</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-.device.network.cellular",
            "description": "<p>Cellular network information</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.device.network.cellular.radio_access_technology",
            "description": "<p>The human readible form of the access technology. Possible values are 2G, 3G, LTE</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.device.network.cellular.operator",
            "description": "<p>The name of the company operating the tower on which the device is currently connected</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-.device.network.cellular.cell_global_identity",
            "description": "<p>A globally unique identifier that can be used to geographically locate the tower to which a device is connected</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.network.cellular.cell_global_identity.mobile_country_code",
            "description": "<p>MCC. Can be used together with the Mobile Network Code (MNC) to determine the mobile network operator (i.e. mcc:310 and mnc:410 is AT&amp;T)</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.device.network.cellular.cell_global_identity.mobile_network_code",
            "description": "<p>MNC. Can be used together with the Mobile Country Code (MCC) to determine the mobile network operator (i.e. mcc:310 and mnc:410 is AT&amp;T). This is a string because leading zeros are significant for MNC</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.network.cellular.cell_global_identity.location_area_code",
            "description": "<p>a unique number identifying the current location area. A location area is a set of base stations that are grouped together to optimize signalling</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.network.cellular.cell_global_identity.cell_id",
            "description": "<p>a generally unique number used to identify each Base Transceiver Station (BTS) or sector of a BTS within a location area code</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-.device.network.signal",
            "description": "<p>The signal strength and quality metrics</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.device.network.signal.at",
            "description": "<p>The detailed radio access technology, which determines the range of good signal strength and quality. Possible values are Wi-Fi, GSM, EDGE, UMTS, CDMA, LTE, LTE Cat-M1, LTE Cat-NB1</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.network.signal.strength",
            "description": "<p>Measure of the current radio network strength in % (0-100)</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.device.network.signal.strength_units",
            "description": "<p>Always %</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.network.signal.strengthv",
            "description": "<p>Signal strength raw value specific to the access technology</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.device.network.signal.strengthv_units",
            "description": "<p>Always dbM</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.device.network.signal.strengthv_type",
            "description": "<p>The algorithm used to calculate signal strength. Possible values are RSSI (Wi-Fi), RXLEV (2G), RSCP (3G), RSRP (LTE)</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.network.signal.quality",
            "description": "<p>Measure of the current radio connection quality in % (0-100)</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.device.network.signal.quality_units",
            "description": "<p>Always %</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.network.signal.qualityv",
            "description": "<p>Signal quality raw value specific to the access technology</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.device.network.signal.qualityv_units",
            "description": "<p>Always dB</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.device.network.signal.qualityv_type",
            "description": "<p>The algorithm used to calculate signal quality. Possible values are SNR (Wi-Fi), RXQUAL (2G), ECN0 (3G), RSRQ (LTE)</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-.device.network.connection",
            "description": "<p>Statistics about the network</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.device.network.connection.status",
            "description": "<p>Status of the network connection. When receiving a vitals event through the Cloud it should always be connected. Possible values are turned_off, turning_on, disconnected, connecting, connected, disconnecting, turning_off</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.network.connection.error",
            "description": "<p>A platform-specific error code that is returned by the low-level Device OS function for the most recent network connectivity event</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.network.connection.disconnects",
            "description": "<p>Count of network disconnects</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.network.connection.attempts",
            "description": "<p>Number of attempts required to establish a successful network connection</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.device.network.connection.disconnect_reason",
            "description": "<p>Last reason the network got disconnected. Possible values are none, error, user, network_off, listening, sleep, reset</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-.device.cloud",
            "description": "<p>Device Cloud communication information</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-.device.cloud.connection",
            "description": "<p>Information on the state of the device's cloud connection</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.device.cloud.connection.status",
            "description": "<p>Status of the cloud connection. When receiving a vitals event through the Cloud it should always be connected. Possible values are disconnected, connecting, connected, disconnecting</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.cloud.connection.error",
            "description": "<p>A platform-specific error code that is returned by the low-level Device OS function for the most recent cloud connectivity event</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.cloud.connection.attempts",
            "description": "<p>Number of attempts required to establish a successful cloud connection</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.cloud.disconnects",
            "description": "<p>The number of unexpected disconnections from the cloud since the last reset</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.device.cloud.connection.disconnect_reason",
            "description": "<p>Last reason the cloud connection got disconnected. Possible values are none, error, user, network_disconnect, listening</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-.device.cloud.coap",
            "description": "<p>Information regarding the underlying communication protocol</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.cloud.coap.transmit",
            "description": "<p>The number of CoAP messages sent by the device to the cloud</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.cloud.coap.retransmit",
            "description": "<p>The number of times a CoAP message was resent by the device to the cloud due to the original message not being acknowledged</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.cloud.coap.unack",
            "description": "<p>The number of CoAP messages that were resent the maximum number of times by the device, still not acknowledged by the cloud then dropped</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.cloud.coap.round_trip",
            "description": "<p>The round-trip time of the last device to cloud message in milliseconds</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-.device.cloud.publish",
            "description": "<p>Information regarding publish attempts from the device</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.cloud.publish.rate_limited",
            "description": "<p>The current count of rate limited publishes since the device was reset</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-.device.power",
            "description": "<p>Concerns sources of device power. <em>This will only be populated for devices with on-board power management.</em></p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-.device.power.battery",
            "description": "<p>Information about batteries</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.power.battery.charge",
            "description": "<p>Battery charge as a percent</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.device.power.battery.state",
            "description": "<p>The current charging state of the battery. Possible values are unknown, not_charging, charging, charged, discharging, fault, disconnected</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.device.power.source",
            "description": "<p>An enumeration describing the current power source. Possible values are unknown, VIN, USB host, USB adapter, USB otg</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-.device.system",
            "description": "<p>Indicators of general device health and system status</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.system.uptime",
            "description": "<p>The number of seconds the system has been running</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-.device.system.memory",
            "description": "<p>Memory metrics for the device</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.system.memory.used",
            "description": "<p>User application static RAM + heap used</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.device.system.memory.total",
            "description": "<p>Total amount of RAM available on the device in bytes</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-.service",
            "description": "<p>Device vitals data containing diagnostics collected by the Particle Device Cloud on behalf of the device</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-.service.device",
            "description": "<p>Cloud to device information</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.service.device.status",
            "description": "<p>The result of the last attempt to decode the vitals message from the device. Should always be ok. Possible values are ok, error</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-.service.cloud",
            "description": "<p>Information on the device's cloud session</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.service.cloud.uptime",
            "description": "<p>Duration of the device session in seconds</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-.service.cloud.publish",
            "description": "<p>Cloud-side metrics for device messages</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.service.cloud.publish.sent",
            "description": "<p>The total number of Particle.publish events sent by the device</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-.service.coap",
            "description": "<p>Information regarding the underlying communication protocol</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "-.service.coap.round_trip",
            "description": "<p>The round-trip time of the last cloud to device message in milliseconds</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Example device vitals event data payload (published as stringified JSON)",
          "content": "{\n  \"device\": {\n    \"network\": {\n      \"cellular\": {\n        \"radio_access_technology\": \"3G\",\n        \"operator\": \"AT&T Wireless Inc.\",\n        \"cell_global_identity\": {\n          \"mobile_country_code\": 310,\n          \"mobile_network_code\": \"410\",\n          \"location_area_code\": 45997,\n          \"cell_id\": 20160117\n        }\n      },\n      \"signal\": {\n        \"at\": \"UMTS\",\n        \"strength\": 66.66,\n        \"strength_units\": \"%\",\n        \"strengthv\": -57,\n        \"strengthv_units\": \"dBm\",\n        \"strengthv_type\": \"RSCP\",\n        \"quality\": 75.51,\n        \"quality_units\": \"%\",\n        \"qualityv\": -6,\n        \"qualityv_units\": \"dB\",\n        \"qualityv_type\": \"ECN0\"\n      },\n      \"connection\": {\n        \"status\": \"connected\",\n        \"error\": 0,\n        \"disconnects\": 1,\n        \"attempts\": 1,\n        \"disconnect_reason\": \"reset\"\n      }\n    },\n    \"cloud\": {\n      \"connection\": {\n        \"status\": \"connected\",\n        \"error\": 0,\n        \"attempts\": 2,\n        \"disconnects\": 23,\n        \"disconnect_reason\": \"error\"\n      },\n      \"coap\": {\n        \"transmit\": 412,\n        \"retransmit\": 3,\n        \"unack\": 0,\n        \"round_trip\": 1594\n      },\n      \"publish\": {\n        \"rate_limited\": 0\n      }\n    },\n    \"power\": {\n      \"battery\": {\n        \"charge\": 87.12,\n        \"state\": \"not_charging\"\n      },\n      \"source\": \"VIN\"\n    },\n    \"system\": {\n      \"uptime\": 2567461,\n      \"memory\": {\n        \"used\": 36016,\n        \"total\": 113664\n      }\n    }\n  },\n  \"service\": {\n    \"device\": {\n      \"status\": \"ok\"\n    },\n    \"cloud\": {\n      \"uptime\": 82925,\n      \"publish\": {\n        \"sent\": 1384\n      }\n    },\n    \"coap\": {\n      \"round_trip\": 920\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Diagnostics_2"
  },
  {
    "type": "get",
    "url": "/v1/diagnostics/:deviceId/last",
    "title": "Get last known device vitals",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceId",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em></p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "devices.diagnostics:get"
      }
    ],
    "name": "getLastDeviceDiagnostics",
    "description": "<p>Returns the last device vitals payload sent by the device to the Device Cloud.</p>",
    "group": "Diagnostics_3",
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/diagnostics/0123456789abcdef01234567/last?access_token=1234\"",
        "content": "$ curl \"https://api.particle.io/v1/diagnostics/0123456789abcdef01234567/last?access_token=1234\"",
        "type": "bash"
      },
      {
        "title": "Get last known vitals for a device that's inside a product",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/diagnostics/0123456789abcdef01234567/last?access_token=1234\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "diagnostics",
            "description": "<p>The last known device vitals object</p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "diagnostics.updated_at",
            "description": "<p>Timestamp of when the diagnostic vitals record was reported</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "diagnostics.deviceID",
            "description": "<p>ID of the device</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "diagnostics.payload",
            "description": "<p>Full device vitals payload. See the <a href=\"#device-vitals-event\">device vitals</a> documentation for the structure of this object.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/diagnostics/0123456789abcdef01234567/last",
          "content": "GET /v1/diagnostics/0123456789abcdef01234567/last\nHTTP/1.1 200 OK\n{\n  \"diagnostics\": {\n    \"updated_at\": \"2017-12-19T12:37:07.318Z\",\n    \"deviceID\": \"0123456789abcdef01234567\",\n    \"payload\": {\n      ... the [device vitals event payload](#device-vitals-event).\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Diagnostics_3"
  },
  {
    "type": "get",
    "url": "/v1/diagnostics/:deviceId",
    "title": "Get all historical device vitals",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceId",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em></p>"
          },
          {
            "group": "Parameter",
            "type": "ISO8601",
            "optional": true,
            "field": "start_date",
            "description": "<p>Oldest diagnostic to return, inclusive</p>"
          },
          {
            "group": "Parameter",
            "type": "ISO8601",
            "optional": true,
            "field": "end_date",
            "description": "<p>Newest diagnostic to return, exclusive</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "devices.diagnostics:get"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": true,
            "field": "Accept",
            "description": "<p>Optionally set to <code>text/csv</code> to return historic device vitals as a CSV</p>"
          }
        ]
      }
    },
    "name": "getAllDeviceDiagnostics",
    "description": "<p>Returns all stored device vital records sent by the device to the Device Cloud. Device vitals records will expire after 1 month.</p>",
    "group": "Diagnostics_4",
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/diagnostics/0123456789abcdef01234567?access_token=1234\"",
        "content": "$ curl \"https://api.particle.io/v1/diagnostics/0123456789abcdef01234567?access_token=1234\"",
        "type": "bash"
      },
      {
        "title": "Get all historical vitals for a device that's inside a product",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/diagnostics/0123456789abcdef01234567?access_token=1234\"",
        "type": "bash"
      },
      {
        "title": "Get historical vitals for a device scoped to a time period.",
        "content": "$ curl \"https://api.particle.io/v1/diagnostics/0123456789abcdef01234567?access_token=1234&start_date=2017-12-18T12:37:07.318Z&end_date=2017-12-20T12:37:07.318Z\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "diagnostics",
            "description": "<p>An array of stored device vitals records. See the <a href=\"#device-vitals-event\">device vitals</a> documentation for the structure of the payload for each object in the array.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/diagnostics/0123456789abcdef01234567/",
          "content": " GET /v1/diagnostics/0123456789abcdef01234567/\n HTTP/1.1 200 OK\n {\n\t\t\"diagnostics\": [\n\t\t\t{\n\t\t\t\t\"updated_at\": \"2017-12-19T12:37:07.318Z\",\n\t\t\t\t\"deviceID\": \"0123456789abcdef01234567\",\n\t\t\t\t\"payload\": {\n\t\t\t\t\t... the [device vitals event payload](#device-vitals-event).\n\t\t\t\t}\n\t\t\t},\n\t\t\t...\n\t\t]\n }",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "bad_request",
            "description": "<p>when invalid start/end dates are provided</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/diagnostics/0123456789abcdef01234567?end_date=invalid-date",
          "content": "GET /v1/diagnostics/0123456789abcdef01234567?end_date=invalid-date\nHTTP/1.1 200 OK\n{\n  \"error\": \"bad_request\",\n  \"description\": \"start_date and end_date must be ISO8601 formatted\",\n}",
          "type": "json"
        },
        {
          "title": "GET /v1/diagnostics/0123456789abcdef01234567?end_date=invalid-date",
          "content": "GET /v1/diagnostics/0123456789abcdef01234567?end_date=invalid-date\nHTTP/1.1 200 OK\n{\n  \"error\": \"bad_request\",\n  \"description\": \"start_date must not be more than than 30 days ago\",\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Diagnostics_4"
  },
  {
    "type": "get",
    "url": "/v1/diagnostics/:deviceId/metadata",
    "title": "Get device vitals metadata",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceId",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em></p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "devices.diagnostics.metadata:get"
      }
    ],
    "name": "getMetadataForDeviceDiagnostics",
    "description": "<p>Contextualizes and allows for interpretation of <a href=\"#refresh-device-vitals\">device vitals</a>. The objects in the device vitals payload map to the metadata objects returned by this endpoint. Metadata will vary depending on the device type, and is subject to change as more is learned about device health.</p> <p>Each metadata object mapping to a device vital can include:</p> <ul> <li><code>title</code>: A friendly name.</li> <li><code>type</code>: The data type of the vital returned by the device. Can be set to <code>number</code> or <code>string</code>.</li> <li><code>units</code>: Information on the specific unit of measurement, including how to convert the raw vital into the preferred unit of measurement.</li> <li><code>ranges</code>: Establishes healthy vital ranges. If outside the healthy range, the vital will be marked in the &quot;warning&quot; state in the Console. Ranges help assert whether a reported vital is above/below a specified value, or use a ratio between two related vitals as an indicator of health.</li> <li><code>values</code>: Similar to <code>ranges</code>, but maps reported vitals with a <code>type</code> of <code>string</code> to determine a healthy or warning state.</li> <li><code>messages</code>: Helpful messages to provide analysis and interpretation of diagnostics test results. Also includes a description of the vital.</li> <li><code>priority</code>: Used for visual ordering of device vitals on the Console.</li> <li><code>describes</code>: Creates a relationship between two vitals used for visual arrangement on the Console.</li> </ul>",
    "group": "Diagnostics_5",
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/diagnostics/0123456789abcdef01234567/metadata?access_token=1234\"",
        "content": "$ curl \"https://api.particle.io/v1/diagnostics/0123456789abcdef01234567/metadata?access_token=1234\"",
        "type": "bash"
      },
      {
        "title": "Get vitals metadata for a device that's inside a product",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/diagnostics/0123456789abcdef01234567/metadata?access_token=1234\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "diagnostics_metadata",
            "description": "<p>Metadata for device vitals. See <a href=\"#refresh-device-vitals\">refresh device vitals</a> API docs for the device vitals payload.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/diagnostics/0123456789abcdef01234567/metadata",
          "content": "GET /v1/diagnostics/0123456789abcdef01234567/metadata\nHTTP/1.1 200 OK\n{\n  \"diagnostics_metadata\": {\n\t\"device\": {\n\t  \"power\": {\n\t\t\"battery\": {\n\t\t  \"charge\": {\n\t\t\t\"title\": \"battery charge\",\n\t\t\t\"type\": \"number\",\n\t\t\t\"priority\": 1,\n\t\t\t\"units\": {\n\t\t\t  \"title\": \"percent\",\n\t\t\t  \"convert\": {\n\t\t\t\t\"type\": \"round\"\n\t\t\t  }\n\t\t\t},\n\t\t\t\"ranges\": {\n\t\t\t  \"warning\": 20,\n\t\t\t  \"type\": \"below\"\n\t\t\t},\n\t\t\t\"messages\": {\n\t\t\t  \"description\": \"The state of charge of the device’s connected battery, represented as a percentage.\",\n\t\t\t  \"healthy\": \"The battery’s state of charge is in a healthy range.\",\n\t\t\t  \"warning\": \"The charge for this battery is low. Recharge the battery soon to prevent the device from losing power and going offline.\"\n\t\t\t}\n\t\t  },\n\t\t  \"state\": {\n\t\t\t\"title\": \"\",\n\t\t\t\"type\": \"string\",\n\t\t\t\"describes\": \"device.power.battery.charge\",\n\t\t\t\"values\": {\n\t\t\t  \"all\": [\n\t\t\t\t\"unknown\",\n\t\t\t\t\"not_charging\",\n\t\t\t\t\"charging\",\n\t\t\t\t\"charged\",\n\t\t\t\t\"discharging\",\n\t\t\t\t\"fault\"\n\t\t\t  ],\n\t\t\t  \"healthy\": [\n\t\t\t\t\"charging\",\n\t\t\t\t\"charged\",\n\t\t\t\t\"discharging\"\n\t\t\t  ],\n\t\t\t  \"warning\": [\n\t\t\t\t\"fault\",\n\t\t\t\t\"unknown\",\n\t\t\t\t\"not_charging\"\n\t\t\t  ]\n\t\t\t}\n\t\t  }\n\t\t}\n\t  },\n\t  \"system\": {\n\t\t\"memory\": {\n\t\t  \"used\": {\n\t\t\t\"title\": \"RAM used\",\n\t\t\t\"type\": \"number\",\n\t\t\t\"priority\": 6,\n\t\t\t\"units\": {\n\t\t\t  \"title\": \"kB\",\n\t\t\t  \"convert\": {\n\t\t\t\t\"type\": \"divide\",\n\t\t\t\t\"by\": 1024\n\t\t\t  }\n\t\t\t},\n\t\t\t\"ranges\": {\n\t\t\t  \"type\": \"ratio_above\",\n\t\t\t  \"ratio\": 0.9,\n\t\t\t  \"param1\": \"device.system.memory.used\",\n\t\t\t  \"param2\": \"device.system.memory.total\"\n\t\t\t},\n\t\t\t\"messages\": {\n\t\t\t  \"description\": \"The amount of memory used by the device, combining the heap and the user application’s static RAM in bytes.\",\n\t\t\t  \"healthy\": \"The device has a healthy amount of available memory.\",\n\t\t\t  \"warning\": \"The device may soon run out of available memory. This can result in unexpected failures in your firmware application. If possible, reduce the amount of RAM that your application uses.\"\n\t\t\t}\n\t\t  },\n\t\t  \"total\": {\n\t\t\t\"title\": \"\",\n\t\t\t\"type\": \"number\",\n\t\t\t\"units\": {\n\t\t\t  \"title\": \"kB\",\n\t\t\t  \"convert\": {\n\t\t\t\t\"type\": \"divide\",\n\t\t\t\t\"by\": 1024\n\t\t\t  }\n\t\t\t},\n\t\t\t\"describes\": \"device.system.memory.used\"\n\t\t  }\n\t\t}\n\t  },\n\t  \"network\": {\n\t\t\"signal\": {\n\t\t  \"strengthv\": {\n\t\t\t\"title\": \"signal strength value\",\n\t\t\t\"type\": \"number\",\n\t\t\t\"units\": {\n\t\t\t  \"title\": \"dBm\"\n\t\t\t},\n\t\t\t\"describes\": \"device.network.signal.strength\"\n\t\t  },\n\t\t  \"strength\": {\n\t\t\t\"title\": \"signal strength\",\n\t\t\t\"type\": \"number\",\n\t\t\t\"priority\": 2,\n\t\t\t\"units\": {\n\t\t\t  \"title\": \"percent\"\n\t\t\t},\n\t\t\t\"ranges\": {\n\t\t\t  \"type\": \"below\",\n\t\t\t  \"warning\": 20\n\t\t\t},\n\t\t\t\"messages\": {\n\t\t\t  \"description\": \"The strength of the device’s connection to the Cellular network, measured in decibels of received signal power.\",\n\t\t\t  \"healthy\": \"The device’s signal strength is in a healthy range, with a signal power value of {describes} (the closer to 0, the stronger the signal).\",\n\t\t\t  \"warning\": \"The device’s signal strength is poor, with a signal power value of {describes} (the further from 0, the weaker the signal). This can cause the device to drop offline unexpectedly. If possible, move the device to a place with better Cellular signal.\"\n\t\t\t}\n\t\t  }\n\t\t}\n\t  },\n\t  \"cloud\": {\n\t\t\"disconnects\": {\n\t\t  \"title\": \"disconnect events\",\n\t\t  \"type\": \"number\",\n\t\t  \"priority\": 3,\n\t\t  \"units\": \"count\",\n\t\t  \"ranges\": {\n\t\t\t\"type\": \"ratio_above\",\n\t\t\t\"ratio\": 0.0013,\n\t\t\t\"param1\": \"device.cloud.disconnects\",\n\t\t\t\"param2\": \"service.cloud.uptime\"\n\t\t  },\n\t\t  \"messages\": {\n\t\t\t\"description\": \"The number of times the device disconnected unexpectedly from the Particle Cloud since its last reset.\",\n\t\t\t\"healthy\": \"The device’s frequency of cloud disconnects is in a healthy range.\",\n\t\t\t\"warning\": \"The device is disconnecting from the Particle Cloud too frequently. Large numbers of cloud disconnects are often caused by poor signal strength or network congestion. If possible, move the device to a place with better Cellular signal.\"\n\t\t  }\n\t\t},\n\t\t\"publish\": {\n\t\t  \"rate_limited\": {\n\t\t\t\"title\": \"rate-limited publishes\",\n\t\t\t\"type\": \"number\",\n\t\t\t\"priority\": 5,\n\t\t\t\"units\": {\n\t\t\t  \"title\": \"count\"\n\t\t\t},\n\t\t\t\"ranges\": {\n\t\t\t  \"type\": \"ratio_above\",\n\t\t\t  \"ratio\": 0.05,\n\t\t\t  \"param1\": \"device.cloud.publish.rate_limited\",\n\t\t\t  \"param2\": \"service.cloud.publish.sent\"\n\t\t\t},\n\t\t\t\"messages\": {\n\t\t\t  \"description\": \"Particle devices are allowed to publish an average of 1 event per second in application firmware. Publishing at a rate higher than this will result in rate limiting of events.\",\n\t\t\t  \"healthy\": \"The device’s published events are being sent to the Particle Cloud successfully.\",\n\t\t\t  \"warning\": \"The device is publishing messages too rapidly, and is being rate limited. This causes messages sent by firmware to be blocked from reaching the Particle cloud. Reduce the frequency of published messages in your application firmware to below 1 per second to avoid rate limiting.\"\n\t\t\t}\n\t\t  }\n\t\t}\n\t  }\n\t},\n\t\"service\": {\n\t  \"coap\": {\n\t\t\"round_trip\": {\n\t\t  \"title\": \"round-trip time\",\n\t\t  \"type\": \"number\",\n\t\t  \"priority\": 4,\n\t\t  \"units\": {\n\t\t\t\"title\": \"ms\"\n\t\t  },\n\t\t  \"messages\": {\n\t\t\t\"description\": \"The amount of time it takes for the device to successfully respond to a CoAP message sent by the Particle Cloud in milliseconds.\",\n\t\t\t\"healthy\": \"The device has a round-trip time in a healthy range.\",\n\t\t\t\"warning\": \"The device is taking a long time to respond to messages from the Particle Cloud. A higher than average round trip time is normally caused by poor signal strength or network congestion. If possible, move the device to a place with better Cellular signal.\"\n\t\t  }\n\t\t}\n\t  },\n\t  \"cloud\": {\n\t\t\"publish\": {\n\t\t  \"sent\": {\n\t\t\t\"title\": \"Total events published\",\n\t\t\t\"type\": \"number\",\n\t\t\t\"units\": {\n\t\t\t  \"title\": \"count\"\n\t\t\t},\n\t\t\t\"describes\": \"device.cloud.publish.rate_limited\"\n\t\t  }\n\t\t}\n\t  }\n\t},\n  }\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Diagnostics_5"
  },
  {
    "type": "get",
    "url": "/v1/sims/:iccid/status",
    "title": "Get cellular network status",
    "name": "getCellularNetworkStatus",
    "group": "Diagnostics_6",
    "description": "<p>Get cellular network status for a given device. Kicks off a long running task that checks if the device/SIM has an active data session with a cell tower. Values for keys in the <code>sim_status</code> object will be <code>null</code> until the task has finished. Poll the endpoint until <code>meta.state</code> is <code>complete</code>. At this point, the <code>sim_status</code> object will be populated.</p> <p>Note that responses are cached by the cellular network providers. This means that on occasion, the real-time status of the device/SIM may not align with the results of this test.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "iccid",
            "description": "<p>The ICCID of the desired SIM</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em></p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "sims.status:get"
      }
    ],
    "examples": [
      {
        "title": "Get cellular network status",
        "content": "$ curl \"https://api.particle.io/v1/sims/1234/status?access_token=1234\"",
        "type": "bash"
      },
      {
        "title": "Get cellular network status for device inside a product",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/sims/1234/status?access_token=1234\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "ok",
            "description": "<p>whether or not the request was successful</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "meta",
            "description": "<p>Meta information about the task</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "meta.created_at",
            "description": "<p>UTC timestamp of when the task was kicked off</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "meta.expires_at",
            "description": "<p>UTC timestamp when the task results will expire</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "meta.check_again_after",
            "description": "<p>UTC timestamp of the suggested time after which to check status again</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "meta.method",
            "description": "<p>Set to <code>async</code> to communicate an asynchronous request</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "meta.state",
            "description": "<p>the state of the task. Can be <code>pending</code> or <code>complete</code>.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "meta.task_id",
            "description": "<p>the id of the task</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "sim_status",
            "description": "<p>Status information about the SIM</p>"
          },
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "sim_status.connected",
            "description": "<p>Whether the device/SIM has an active data session with a cell tower (both GSM and data connection are <code>true</code>)?</p>"
          },
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "sim_status.gsm_connection",
            "description": "<p>Whether the device/SIM has a GSM connection?</p>"
          },
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "sim_status.data_connection",
            "description": "<p>Whether the device/SIM has a GPRS/LTE/Data connection?</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/sims/:iccid/status",
          "content": "GET /v1/sims/:iccid/status\nHTTP/1.1 202\n{\n\t\"ok\": true,\n\t\"meta\": {\n\t\t\"created_at\": \"2018-05-29T19:31:55.000-06:00\",\n\t\t\"expires_at\": \"2018-05-29T19:34:55.000-06:00\",\n\t\t\"check_again_after\": \"2018-05-29T19:32:05.450-06:00\",\n\t\t\"state\": \"pending\",\n\t\t\"method\": \"async\",\n\t\t\"task_id\": \"1234abcd\"\n\t},\n\t\"sim_status\": {\n\t\t\"connected\": true,\n\t\t\"gsm_connection\": true,\n\t\t\"data_connection\": true,\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Diagnostics_6"
  },
  {
    "type": "get",
    "url": "/v1/events/:eventPrefix",
    "title": "Get a stream of events",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "eventPrefix",
            "description": "<p>Filters the stream to only events starting with the specified prefix. <strong>The event prefix filter is required for this endpoint.</strong></p>"
          }
        ]
      }
    },
    "name": "GetEvents",
    "group": "Events_1",
    "description": "<p>Open a stream of <a href=\"http://www.w3.org/TR/eventsource/\">Server Sent Events</a> for all public events and private events for your devices matching the filter.</p> <p>Note that as of April 2018, the event prefix filter is required. It was optional before.</p>",
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/events/temp?access_token=1234\"",
        "content": "$ curl \"https://api.particle.io/v1/events/temp?access_token=1234\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "event",
            "description": "<p>event name</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "data",
            "description": "<p>event data in JSON format</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/events/temp",
          "content": "GET /v1/events/temp\nHTTP/1.1 200 OK\n:ok\n\nevent: temperature\ndata: {\"data\":\"25.34\",\"ttl\":\"60\",\"published_at\":\"2015-07-18T00:12:18.174Z\",\"coreid\":\"0123456789abcdef01234567\"}",
          "type": "json"
        },
        {
          "title": "Missing event prefix filter",
          "content": "GET /v1/events\nHTTP/1.1 400 Bad Request\n{ ok: false, error: \"event prefix filter is required\" }",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/event.js",
    "groupTitle": "Events_1"
  },
  {
    "type": "get",
    "url": "/v1/devices/events/[:eventPrefix]",
    "title": "Get a stream of your events",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "eventPrefix",
            "description": "<p>Filters the stream to only events starting with the specified prefix. Omit to get all events.</p>"
          }
        ]
      }
    },
    "name": "GetDeviceEvents",
    "group": "Events_2",
    "description": "<p>Open a stream of <a href=\"http://www.w3.org/TR/eventsource/\">Server Sent Events</a> for all public and private events for your devices.</p>",
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/devices/events?access_token=1234\"",
        "content": "$ curl \"https://api.particle.io/v1/devices/events?access_token=1234\"",
        "type": "bash"
      },
      {
        "title": "Filtered Stream",
        "content": "$ curl \"https://api.particle.io/v1/devices/events/temp?access_token=1234\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "event",
            "description": "<p>event name</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "data",
            "description": "<p>event data in JSON format</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/devices/events",
          "content": "GET /v1/devices/events\nHTTP/1.1 200 OK\n:ok\n\nevent: temperature\ndata: {\"data\":\"25.34\",\"ttl\":\"60\",\"published_at\":\"2015-07-18T00:12:18.174Z\",\"coreid\":\"0123456789abcdef01234567\"}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/event.js",
    "groupTitle": "Events_2"
  },
  {
    "type": "get",
    "url": "/v1/devices/:deviceId/events/:eventPrefix",
    "title": "Get a stream of events for a device",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceId",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "eventPrefix",
            "description": "<p>Filters the stream to only events starting with the specified prefix</p>"
          }
        ]
      }
    },
    "name": "GetDeviceEvents",
    "group": "Events_3",
    "description": "<p>Open a stream of <a href=\"http://www.w3.org/TR/eventsource/\">Server Sent Events</a> for all public and private events for the specified device.</p>",
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/devices/0123456789abcdef01234567/events?access_token=1234\"",
        "content": "$ curl \"https://api.particle.io/v1/devices/0123456789abcdef01234567/events?access_token=1234\"",
        "type": "bash"
      },
      {
        "title": "Filtered Stream",
        "content": "$ curl \"https://api.particle.io/v1/devices/0123456789abcdef01234567/events/temp?access_token=1234\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "event",
            "description": "<p>event name</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "data",
            "description": "<p>event data in JSON format</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/devices/0123456789abcdef01234567/events",
          "content": "GET /v1/devices/0123456789abcdef01234567/events\nHTTP/1.1 200 OK\n:ok\n\nevent: temperature\ndata: {\"data\":\"25.34\",\"ttl\":\"60\",\"published_at\":\"2015-07-18T00:12:18.174Z\",\"coreid\":\"0123456789abcdef01234567\"}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/event.js",
    "groupTitle": "Events_3"
  },
  {
    "type": "get",
    "url": "/v1/products/:productIdOrSlug/events/[:eventPrefix]",
    "title": "Product event stream",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "eventPrefix",
            "description": "<p>Filters the stream to only events starting with the specified prefix</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "events:get"
      }
    ],
    "name": "GetProductEvents",
    "group": "Events_4",
    "description": "<p>Open a stream of <a href=\"http://www.w3.org/TR/eventsource/\">Server Sent Events</a> for all public and private events for a product.</p>",
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/products/photon/events?access_token=1234\"",
        "content": "$ curl \"https://api.particle.io/v1/products/photon/events?access_token=1234\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "event",
            "description": "<p>event name</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "data",
            "description": "<p>event data in JSON format</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/products/photon/events",
          "content": "GET /v1/products/photon/events\nHTTP/1.1 200 OK\n:ok\n\nevent: temperature\ndata: {\"data\":\"25.34\",\"ttl\":\"60\",\"published_at\":\"2015-07-18T00:12:18.174Z\",\"coreid\":\"0123456789abcdef01234567\"}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Events_4"
  },
  {
    "type": "post",
    "url": "/v1/devices/events",
    "title": "Publish an event",
    "description": "<p>Publish an event</p>",
    "group": "Events_6",
    "name": "CreateEvent",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Event name</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "data",
            "description": "<p>Event data</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "private",
            "description": "<p>If you wish this event to be publicly visible</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": true,
            "field": "ttl",
            "description": "<p>How long the event should persist</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl https://api.particle.io/v1/devices/events \\",
        "content": "$ curl https://api.particle.io/v1/devices/events \\\n       -d \"name=myevent\" \\\n       -d \"data=Hello World\" \\\n       -d \"private=true\" \\\n       -d \"ttl=60\" \\\n       -d \"access_token=1234\"",
        "type": "bash"
      },
      {
        "title": "Particle CLI",
        "content": "$ particle publish myevent \"Hello World\"",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "POST /v1/devices/events",
          "content": "POST /v1/devices/events\nHTTP/1.1 200 OK\n{\n  \"ok\": true\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/event.js",
    "groupTitle": "Events_6"
  },
  {
    "type": "post",
    "url": "/v1/products/:productId/events",
    "title": "Publish a product event",
    "description": "<p>Publish an event that is sent to the product's event stream</p>",
    "group": "Events_7",
    "name": "PublishProductEvent",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Event name</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "data",
            "description": "<p>Event data</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "private",
            "description": "<p>If you wish this event to be publicly visible</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": true,
            "field": "ttl",
            "description": "<p>How long the event should persist</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "events:send"
      }
    ],
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/events\" \\",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/events\" \\\n       -d \"name=myevent\" \\\n       -d \"data=Hello World\" \\\n       -d \"private=true\" \\\n       -d \"ttl=60\" \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "POST /v1/products/:productIdOrSlug/events",
          "content": "POST /v1/products/:productIdOrSlug/events\nHTTP/1.1 200 OK\n{\n  \"ok\": true\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Events_7"
  },
  {
    "type": "put",
    "url": "/v1/devices/:deviceId",
    "title": "Update device firmware",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceId",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "build_target_version",
            "description": "<p>The firmware version to compile against. Defaults to latest</p>"
          }
        ],
        "Flash a device with source code": [
          {
            "group": "flashCode",
            "type": "String",
            "optional": false,
            "field": "file",
            "description": "<p>The source code encoded in <code>multipart/form-data</code> format</p>"
          }
        ],
        "Flash a device with a pre-compiled binary": [
          {
            "group": "flashBinary",
            "type": "String",
            "optional": false,
            "field": "file",
            "description": "<p>The pre-compiled binary encoded in <code>multipart/form-data</code> format</p>"
          },
          {
            "group": "flashBinary",
            "type": "String",
            "allowedValues": [
              "binary"
            ],
            "optional": false,
            "field": "file_type",
            "description": "<p>Indicates that you are uploading a binary and not source code</p>"
          }
        ]
      }
    },
    "name": "UpdateDeviceFirmware",
    "description": "<p>Update the device firmware from source or binary</p>",
    "group": "Firmware_1",
    "examples": [
      {
        "title": "flashCode",
        "content": "$ curl -X PUT \"https://api.particle.io/v1/devices/0123456789abcdef01234567?access_token=1234\" \\\n       -F \"file=@application.cpp;filename=application.cpp\" \\\n       -F \"file1=@lib/my_lib.cpp;filename=lib/my_lib.cpp\" \\\n       -F \"file2=@lib/my_lib.h;filename=lib/my_lib.h\"",
        "type": "bash"
      },
      {
        "title": "flashBinary",
        "content": "$ curl -X PUT \"https://api.particle.io/v1/devices/0123456789abcdef01234567?access_token=1234\" \\\n       -F file=@my-firmware-app.bin \\\n       -F file_type=binary",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "flashCode",
          "content": "PUT /v1/devices/0123456789abcdef01234567\nHTTP/1.1 200 OK\n{\n  \"ok\": true,\n  \"message\": \"Update started\"\n}",
          "type": "json"
        },
        {
          "title": "flashBinary",
          "content": "PUT /v1/devices/0123456789abcdef01234567\nHTTP/1.1 200 OK\n{\n  \"id\": \"0123456789abcdef01234567\",\n  \"status\": \"Update started\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Firmware_1"
  },
  {
    "type": "post",
    "url": "/v1/binaries",
    "title": "Compile source code",
    "name": "compileSource",
    "description": "<p>Compile source code into a binary for a device</p>",
    "group": "Firmware_2",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "file",
            "description": "<p>The source code encoded in <code>multipart/form-data</code> format</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": true,
            "field": "platform_id",
            "description": "<p>The platform ID to target the compilation</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "product_id",
            "description": "<p>The product to target for compilation</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "build_target_version",
            "description": "<p>The firmware version to compile against. Defaults to latest</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl -X POST \"https://api.particle.io/v1/binaries?access_token=1234\" \\",
        "content": "$ curl -X POST \"https://api.particle.io/v1/binaries?access_token=1234\" \\\n       -F platform_id=6 \\\n       -F \"file=@application.cpp;filename=application.cpp\" \\\n       -F \"file1=@lib/my_lib.cpp;filename=lib/my_lib.cpp\" \\\n       -F \"file2=@lib/my_lib.h;filename=lib/my_lib.h\"",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "POST /v1/binaries",
          "content": "POST /v1/binaries\nHTTP/1.1 200 OK\n{\n  \"ok\": true,\n  \"binary_id\": \"5734a5d4a71c2601243809e6\",\n  \"binary_url\": \"/v1/binaries/5734a5d4a71c2601243809e6\",\n  \"build_target_version\": \"1.5.1\",\n  \"expires_at\": \"2016-05-13T15:48:27.997Z\",\n  \"sizeInfo\": \"   text\\t   data\\t    bss\\t    dec\\t    hex\\tfilename\\n  91780\\t    952\\t   9368\\t 102100\\t  18ed4\\t\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Firmware_2"
  },
  {
    "type": "get",
    "url": "/v1/build_targets",
    "title": "List firmware build targets",
    "name": "listBuildTargets",
    "description": "<p>Lists the firmware versions for all platforms that can be used as build targets during firmware compilation</p>",
    "group": "Firmware_4",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "featured",
            "description": "<p>When true, show most relevant (featured) build targets only.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "buildTargets",
        "content": "$ curl \"https://api.particle.io/v1/build_targets?access_token=1234\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "targets",
            "description": "<p>Array of build target objects</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "platforms",
            "description": "<p>Name of each platform ID with a build target</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "buildTargets",
          "content": "PUT /v1/build_targets\nHTTP/1.1 200 OK\n{\n  \"targets\": [\n    {\n      \"platforms\": [\n        0,\n        10,\n        8,\n        6\n      ],\n      \"prereleases\": [],\n      \"firmware_vendor\": \"Particle\",\n      \"version\": \"0.6.1\"\n    }\n  ],\n  \"platforms\": {\n    \"Core\": 0,\n    \"Photon\": 6,\n    \"P1\": 8,\n    \"Electron\": 10\n  }\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/buildTarget.js",
    "groupTitle": "Firmware_4"
  },
  {
    "type": "put",
    "url": "/v1/products/:productIdOrSlug/devices/:deviceId",
    "title": "Lock product device",
    "name": "lockProductDevice",
    "permission": [
      {
        "name": "devices:update"
      }
    ],
    "description": "<p>Locks a product device to a specific version of product firmware. This device will download and run this firmware if it is not already running it the next time it connects to the cloud. You can optionally trigger an immediate update to this firmware for devices that are currently online</p>",
    "group": "Firmware_5",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceId",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em></p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "desired_firmware_version",
            "description": "<p>The firmware version the device should be locked to</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "flash",
            "description": "<p>Set to <code>true</code> to immediately flash to a device. Will only successfully deliver the firmware update if the device is currently online and connected to the cloud.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl -X PUT https://api.particle.io/v1/products/:productIdOrSlug/devices/12345 \\\n       -d desired_firmware_version=1 \\\n       -d flash=true \\\n       -d access_token=123abc",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "desired_firmware_version",
            "description": "<p>The newly set firmware version to lock the device to</p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "updated_at",
            "description": "<p>Timestamp representing the last time the deivce was updated in ISO8601 format</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "PUT /v1/products/:productIdOrSlug/devices/12345",
          "content": "PUT /v1/products/:productIdOrSlug/devices/12345\nHTTP/1.1 200 OK\n{\n  \"id\": \"0123456789abcdef01234567\",\n  \"desired_firmware_version\": 1,\n  \"updated_at\": \"2017-03-10T20:21:49.059Z\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Firmware_5"
  },
  {
    "type": "put",
    "url": "/v1/products/:productIdOrSlug/devices/:deviceId",
    "title": "Unlock product device",
    "name": "unlockProductDevice",
    "permission": [
      {
        "name": "devices:update"
      }
    ],
    "description": "<p>Unlocks a product device from receiving and running a specific version of product firmware. The device will now be eligible to receive released firmware in the product.</p>",
    "group": "Firmware_6",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceId",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em></p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "desired_firmware_version",
            "description": "<p>Set to <code>null</code> to unlock the device</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl -X PUT https://api.particle.io/v1/products/:productIdOrSlug/devices/12345 \\\n       -d desired_firmware_version=null \\\n       -d access_token=123abc",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "desired_firmware_version",
            "description": "<p>Should now be <code>null</code> signaling that the device is no longer locked to a specific version of firmware</p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "updated_at",
            "description": "<p>Timestamp representing the last time the deivce was updated in ISO8601 format</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "PUT /v1/products/:productIdOrSlug/devices/12345",
          "content": "PUT /v1/products/:productIdOrSlug/devices/12345\nHTTP/1.1 200 OK\n{\n  \"id\": \"0123456789abcdef01234567\",\n  \"desired_firmware_version\": null\n  \"updated_at\": \"2017-03-10T20:21:49.059Z\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Firmware_6"
  },
  {
    "type": "put",
    "url": "/v1/products/:productIdOrSlug/devices/:deviceId",
    "title": "Mark product development device",
    "name": "markProductDevelopmentDevice",
    "permission": [
      {
        "name": "devices:update"
      }
    ],
    "description": "<p>Mark a device in a product fleet as a <em>development device</em>. Once marked as a development device, it will opt-out from receiving automatic product firmware updates. This includes both locked firmware as well as released firmware.</p>",
    "group": "Firmware_7",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceId",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": false,
            "field": "development",
            "description": "<p>Set to <code>true</code> to mark as development device</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl -X PUT https://api.particle.io/v1/products/:productIdOrSlug/devices/12345 \\\n       -d development=true \\\n       -d access_token=123abc",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "development",
            "description": "<p>Should now be <code>true</code> signaling that the device is now a development device</p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "updated_at",
            "description": "<p>Timestamp representing the last time the deivce was updated in ISO8601 format</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "PUT /v1/products/:productIdOrSlug/devices/12345",
          "content": "PUT /v1/products/:productIdOrSlug/devices/12345\nHTTP/1.1 200 OK\n{\n  \"id\": \"0123456789abcdef01234567\",\n  \"development\": true\n  \"updated_at\": \"2017-03-10T20:21:49.059Z\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Firmware_7"
  },
  {
    "type": "put",
    "url": "/v1/products/:productIdOrSlug/devices/:deviceId",
    "title": "Unmark product development device",
    "name": "unmarkProductDevelopmentDevice",
    "permission": [
      {
        "name": "devices:update"
      }
    ],
    "description": "<p>Unmark a device in a product fleet as a <em>development device</em>. Once unmarked, the device will opt-in to receiving automatic product firmware updates. This includes both locked firmware as well as released firmware.</p>",
    "group": "Firmware_8",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceId",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": false,
            "field": "development",
            "description": "<p>Set to <code>false</code> to unmark as development device</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl -X PUT https://api.particle.io/v1/products/:productIdOrSlug/devices/12345 \\\n       -d development=false \\\n       -d access_token=123abc",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "development",
            "description": "<p>Should now be <code>false</code> signaling that the device is not a development device</p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "updated_at",
            "description": "<p>Timestamp representing the last time the deivce was updated in ISO8601 format</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "PUT /v1/products/:productIdOrSlug/devices/12345",
          "content": "PUT /v1/products/:productIdOrSlug/devices/12345\nHTTP/1.1 200 OK\n{\n  \"id\": \"0123456789abcdef01234567\",\n  \"development\": false\n  \"updated_at\": \"2017-03-10T20:21:49.059Z\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Firmware_8"
  },
  {
    "type": "get",
    "url": "/v1/products/:productIdOrSlug/groups/:groupName",
    "title": "Get device group",
    "name": "getDeviceGroup",
    "group": "Groups_1",
    "description": "<p>Retrieve full info on a specific product group, including its device count.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "groupName",
            "description": "<p>The group name to fetch</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "groups:get"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "group",
            "description": "<p>The group object</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "group.name",
            "description": "<p>The name of the group</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "group.description",
            "description": "<p>A description of the group</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "group.color",
            "description": "<p>A hex value representing of the color displayed next to the group tag on the Console</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "group.fw_version",
            "description": "<p>The version number of the product firmware that has been released to this group</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "group.device_count",
            "description": "<p>The number of devices that belong to this group</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/products/:productIdOrSlug/groups/group_a",
          "content": "GET /v1/products/:productIdOrSlug/groups/group_a\nHTTP/1.1 200 OK\n{\n  \"group\": {\n    \"name\":\"group_a\",\n    \"description\":\"first group A\",\n    \"color\":\"#e74c3c\",\n    \"fw_version\":1,\n    \"device_count\":3\n  }\n}",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/groups/group_a?access_token=1234\"",
        "type": "bash"
      }
    ],
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Groups_1"
  },
  {
    "type": "get",
    "url": "/v1/products/:productIdOrSlug/groups",
    "title": "List device groups",
    "name": "getDeviceGroups",
    "group": "Groups_2",
    "description": "<p>List the group objects that exist in the product. Optionally, filter by group name (partial match).</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "name",
            "description": "<p>String to filter group names by. Partial string matching.</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "groups:list"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "groups",
            "description": "<p>An array of the device groups objects</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/products/:productIdOrSlug/groups?name=gr&access_token=1234",
          "content": "GET /v1/products/:productIdOrSlug/groups?name=gr&access_token=1234\nHTTP/1.1 200 OK\n{\n  \"groups\": [\n    {\n      \"name\":\"group_a\",\n      \"description\":\"the A group\",\n      \"fw_version\":3,\n      \"color\":\"#34495e\"\n    },\n    {\n      \"name\":\"group_b\",\n      \"description\": \"the B group\",\n      \"color\":\"#34495e\"\n    }\n  ]\n}",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/groups?name=gr&access_token=1234\"",
        "type": "bash"
      }
    ],
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Groups_2"
  },
  {
    "type": "post",
    "url": "/v1/products/:productIdOrSlug/groups",
    "title": "Create device group",
    "name": "createDeviceGroup",
    "group": "Groups_3",
    "description": "<p>Create a new device group withinin a product</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>The name of the group. Must only contain lowercase letters, numbers, dashes, and underscores.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "color",
            "description": "<p>A hex value representing of the color displayed next to the group tag on the Console</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "description",
            "description": "<p>String A description of the group</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "groups:create"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "group",
            "description": "<p>The group object</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "POST /v1/products/:productIdOrSlug/groups",
          "content": "POST /v1/products/:productIdOrSlug/groups\nHTTP/1.1 201 Created\n{\n  \"group\": {\n    \"name\": \"group_a\",\n    \"description\": \"the A group\",\n    \"color\": \"#34495e\"\n  }\n}",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl https://api.particle.io/v1/products/:productIdOrSlug/groups \\\n       -d name=group_a \\\n       -d description=\"the A group\" \\\n       -d color=\"#34495e\" \\\n       -d access_token=123abc",
        "type": "bash"
      }
    ],
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Groups_3"
  },
  {
    "type": "put",
    "url": "/v1/products/:productIdOrSlug/groups/:groupName",
    "title": "Edit device group",
    "name": "updateDeviceGroup",
    "group": "Groups_4",
    "description": "<p>Edit attributes of a specific device group. You must pass one of <code>name</code>, <code>color</code>, or <code>description</code>.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "groupName",
            "description": "<p>The group name to edit</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "name",
            "description": "<p>Provide a new group name</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "color",
            "description": "<p>Provide a new group color</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "description",
            "description": "<p>Provide a new description</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "groups:update"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "group",
            "description": "<p>The updated group object</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "PUT /v1/products/:productIdOrSlug/groups/group_a",
          "content": "PUT /v1/products/:productIdOrSlug/groups/group_a\nHTTP/1.1 200 OK\n{\n  \"group\": {\n    \"name\":\"double_agent\",\n    \"description\":\"group description\",\n    \"color\":\"#e74c3c\",\n    \"fw_version\":1,\n    \"device_count\":3\n  }\n}",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl -X PUT https://api.particle.io/v1/products/:productIdOrSlug/groups/group_a \\\n       -d name=double_agent \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Groups_4"
  },
  {
    "type": "delete",
    "url": "/v1/products/:productIdOrSlug/groups/:groupName",
    "title": "Delete device group",
    "group": "Groups_5",
    "name": "deleteDeviceGroup",
    "description": "<p>Delete device group. All devices that belong to this group will be removed from the deleted group.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "groupName",
            "description": "<p>The group name to delete</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "groups:remove"
      }
    ],
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl -X DELETE https://api.particle.io/v1/products/:productIdOrSlug/groups/group_a \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "DELETE /v1/products/:productIdOrSlug/groups/group_a",
          "content": "DELETE /v1/products/:productIdOrSlug/groups/group_a\nHTTP/1.1 204 NO CONTENT",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Groups_5"
  },
  {
    "type": "put",
    "url": "/v1/products/:productIdOrSlug/devices/:deviceId",
    "title": "Assign groups to a device",
    "name": "updateDeviceGroups",
    "permission": [
      {
        "name": "devices:update"
      }
    ],
    "description": "<p>Update group memberships for an individual device. This is an <em>absolute</em> endpoint, meaning that regardless of previous group memberships, the group names passed to this endpoint will be the ones assigned to the device.</p> <p>If you pass a group name that does not yet exist, it will be created and assigned to the device.</p>",
    "group": "Groups_6",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceId",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          },
          {
            "group": "Parameter",
            "type": "Object[]",
            "optional": false,
            "field": "groups",
            "description": "<p>Array of group names</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl -X PUT https://api.particle.io/v1/products/:productIdOrSlug/devices/12345 \\\n       -d groups[]=\"testing\" \\\n       -d access_token=123abc\n$ curl -X PUT https://api.particle.io/v1/products/:productIdOrSlug/devices/12345 \\\n       -d groups[]=\"europe&groups[]=asia\" \\\n       -d access_token=123abc",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "groups",
            "description": "<p>Array of updated device group names</p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "updated_at",
            "description": "<p>Timestamp representing the last time the deivce was updated in ISO8601 format</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "PUT /v1/products/:productIdOrSlug/devices/12345",
          "content": "PUT /v1/products/:productIdOrSlug/devices/12345\nHTTP/1.1 200 OK\n{\n  \"id\": \"0123456789abcdef01234567\",\n  \"groups\": [\"europe\", \"asia\"]\n  \"updated_at\": \"2017-03-10T20:21:49.059Z\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Groups_6"
  },
  {
    "type": "put",
    "url": "/v1/products/:productIdOrSlug/devices",
    "title": "Batch assign groups to devices",
    "group": "Groups_7",
    "name": "batchAssignDeviceGroups",
    "description": "<p>Assign groups to devices in a product as a batch action. Groups can either be added or removed from all devices passed to the endpoint.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "action",
            "description": "<p>Set to <code>groups</code></p>"
          },
          {
            "group": "Parameter",
            "type": "Object[]",
            "optional": false,
            "field": "devices",
            "description": "<p>An array of device IDs to update group memberships</p>"
          },
          {
            "group": "Parameter",
            "type": "Object",
            "optional": false,
            "field": "metadata",
            "description": "<p>metadata object to inform which groups should be added/removed</p>"
          },
          {
            "group": "Parameter",
            "type": "Object[]",
            "optional": true,
            "field": "metadata.add",
            "description": "<p>Array of group names to add to devices</p>"
          },
          {
            "group": "Parameter",
            "type": "Object[]",
            "optional": true,
            "field": "metadata.remove",
            "description": "<p>Array of group names to remove to devices</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "devices:update"
      }
    ],
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl -X PUT \"https://api.particle.io/v1/products/:productIdOrSlug/devices?access_token=1234\" \\\n       -H \"Content-Type: application/json\" \\\n       -d '{\"action\": \"groups\", \"devices\": [\"123\", \"456\"], \"metadata\": {\"add\": [\"foo\"]}}'",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "PUT /v1/products/:productIdOrSlug/devices",
          "content": "PUT /v1/products/:productIdOrSlug/devices\nHTTP/1.1 200 OK\n{\n  \"ok\": true\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Groups_7"
  },
  {
    "type": "get",
    "url": "/v1/products/:productIdOrSlug/impact",
    "title": "Impact of taking action",
    "name": "getDeviceGroupsImpact",
    "group": "Groups_7",
    "description": "<p>Understand the number of devices that would receive an over-the-air update as a result of taking an action related to device groups.</p> <p>Currently, this endpoint supports understanding the impact of releasing/unreleasing firmware to one or more device groups. Pass <code>edit_groups_for_firmware</code> as the <code>action</code> parameter when calling the endpoint.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "action",
            "description": "<p>The action you are about to take. Currently only accepts <code>edit_groups_for_firmware</code></p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "firmware_version",
            "description": "<p>Firmware version you wish to release</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "groups",
            "description": "<p>Comma separated list of device group names to release the <code>firmware_version</code> version to. Do not include to simulate the impact of unreleasing to all groups.</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "product_default",
            "description": "<p>Set to <code>true</code> if you intend to release this <code>firmware_version</code> as the product default firmware. Set to <code>false</code> if the firmware is currently marked as <code>product_default</code> to simulate unreleasing as the <code>product_default</code>.</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "groups.impact:get"
      }
    ],
    "examples": [
      {
        "title": "$ curl https://api.particle.io/v1/products/:productIdOrSlug/impact?\\",
        "content": "$ curl https://api.particle.io/v1/products/:productIdOrSlug/impact?\\\n&action=edit_groups_for_firmware\\\n&groups=asia,europe\\\n&firmware_version=3\\\n&product_default=false\\\n&access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "firmware_update",
            "description": "<p>object containing impact details</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "firmware_update.total",
            "description": "<p>number of devices which will get OTA update resulting from the planned groups action</p>"
          },
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "firmware_update.by_version",
            "description": "<p>number of devices which will get OTA update broken out by the firmware version they'll be flashed with. Each sub-object will have the <code>version</code> of product firmware and the <code>total</code> number of devices that will receive this version of firmware.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/products/:productIdOrSlug/impact",
          "content": "GET /v1/products/:productIdOrSlug/impact\nHTTP/1.1 200 OK\n{\n   devices: {\n     firmware_update: {\n       total: 123,\n       by_version: [\n         {\n\t          version: 1,\n\t\t\t  total: 25\n         },\n         {\n\t\t       ...\n         }\n       ]\n     }\n   }\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Groups_7"
  },
  {
    "type": "get",
    "url": "/v1/products/:productIdOrSlug/integrations/:integrationId",
    "title": "",
    "name": "Get_Integration",
    "group": "Integraitons_1",
    "description": "<p>Get a single integration</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "integrations:get"
      }
    ],
    "examples": [
      {
        "title": "Get a product integration",
        "content": "$ curl \"https://api.particle.io/v1/products/abc/integrations/12345?access_token=12345\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "integration",
            "description": "<p>The integration</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/products/abc/integrations/12345",
          "content": "GET /v1/products/abc/integrations/12345\nHTTP/1.1 200 OK\n\n{\nintegration: {\n\"id\": \"12345\",\n\t\"url\": \"https://samplesite.com\",\n\t\"event\": \"hello\",\n\t\"created_at\": \"2016-04-28T17:06:33.123Z\",\n\t\"requestType\": \"POST\"\n}\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Integraitons_1"
  },
  {
    "type": "get",
    "url": "/v1/integrations",
    "title": "List integrations",
    "name": "listIntegrations",
    "group": "Integrations_10",
    "permission": [
      {
        "name": "integrations:list"
      }
    ],
    "description": "<p>List all integrations. Pay special attention to the <code>integration_type</code> attribute of each integration, which will let you know whether the integration is a <a href=\"#create-a-webhook\">Webhook</a>, an <a href=\"#enable-azure-iot-hub-integration\">Azure IoT Hub</a> integration, or a <a href=\"#enable-google-cloud-platform-integration\">Google Cloud Platform</a> integration.</p> <p>If you would like to <em>only</em> list webhooks (integrations with <code>type: 'Webhook'</code>), you can use a slightly different endpoint:</p> <p><code>GET /v1/webhooks</code></p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em>.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/integrations?access_token=12345\"",
        "content": "$ curl \"https://api.particle.io/v1/integrations?access_token=12345\"",
        "type": "bash"
      },
      {
        "title": "List all product integrations",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/integrations?access_token=12345\"",
        "type": "bash"
      },
      {
        "title": "List all webhooks",
        "content": "$ curl \"https://api.particle.io/v1/webhooks?access_token=12345\"",
        "type": "bash"
      },
      {
        "title": "List all product webhooks",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/webhooks?access_token=12345\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "-",
            "description": "<p>An array of integration objects. The object will vary in its attributes depending on integration type. For information on specific integration type response bodies, please see creation docs for <a href=\"#create-a-webhook\">Webhooks</a>, <a href=\"#enable-azure-iot-hub-integration\">Azure IoT Hub</a>, and <a href=\"#enable-google-cloud-platform-integration\">Google Cloud Platform</a>.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/integrations",
          "content": "GET /v1/integrations\nHTTP/1.1 200 OK\n[\n\t{\n\t\t\"id\":\"12345\",\n\t\t\"event\":\"eventName\",\n\t\t\"created_at\":\"2017-03-14T17:57:46.316Z\",\n\t\t\"integration_type\":\"Webhook\",\n\t\t\"url\":\"https://weather.com\",\n\t\t\"requestType\":\"POST\"\n\t}\n]",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/event.js",
    "groupTitle": "Integrations_10"
  },
  {
    "type": "post",
    "url": "/v1/integrations/:integrationId/test",
    "title": "Test an integration",
    "group": "Integrations_11",
    "permission": [
      {
        "name": "integrations:test"
      }
    ],
    "description": "<p>Send a test event that triggers the integration. Helps build confidence that an integration is configured properly.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "integrationId",
            "description": "<p>The ID of the desired integration</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em>.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl https://api.particle.io/v1/integrations/12345/test \\",
        "content": "$ curl https://api.particle.io/v1/integrations/12345/test \\\n       -d access_token=12345",
        "type": "bash"
      },
      {
        "title": "Test a product integration",
        "content": "$ curl https://api.particle.io/v1/products/:productIdOrSlug/integrations/12345/test \\\n       -d access_token=12345",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "pass",
            "description": "<p>Whether or not the integration was able to receive a successful response from the target</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "data",
            "description": "<p>The data returned by a successful integration test attempt</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "error",
            "description": "<p>If unsuccessful, the error returned from the target</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "POST /v1/integrations/1234/test",
          "content": "POST /v1/integrations/1234/test\nHTTP/1.1 200 OK\n{\n\t  pass: true,\n\t  data: null\n\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/event.js",
    "groupTitle": "Integrations_11",
    "name": "PostV1IntegrationsIntegrationidTest"
  },
  {
    "type": "delete",
    "url": "/v1/integrations/:integrationId",
    "title": "Delete an integration",
    "name": "Delete_Integration",
    "group": "Integrations_12",
    "permission": [
      {
        "name": "integrations:remove"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "integrationId",
            "description": "<p>The ID of the desired integration</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug (only for product webhooks)</p>"
          }
        ]
      }
    },
    "description": "<p>Delete an integration and immediate stop it from triggering. The integration can belong to a user or to a product.</p>",
    "examples": [
      {
        "title": "$ curl -X DELETE https://api.particle.io/v1/integrations/12345 \\",
        "content": "$ curl -X DELETE https://api.particle.io/v1/integrations/12345 \\\n       -d access_token=12345",
        "type": "bash"
      },
      {
        "title": "Delete a product integration",
        "content": "$ curl -X DELETE https://api.particle.io/v1/products/:productIdOrSlug/integrations/12345 \\\n       -d access_token=12345",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "DELETE /v1/webhooks",
          "content": "DELETE /v1/webhooks\nHTTP/1.1 204 No Content",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/event.js",
    "groupTitle": "Integrations_12"
  },
  {
    "type": "post",
    "url": "/v1/integrations",
    "title": "Create a Webhook",
    "description": "<p>A webhook is a flexible type of integration that allows you to interact with a wide variety of external tools and services. Create a webhook either for devices you own as a Particle developer, or for your product fleet. For more info, check out <a href=\"/guide/tools-and-features/webhooks/\">the webhooks guide</a>.</p>",
    "group": "Integrations_1",
    "name": "CreateWebhook",
    "permission": [
      {
        "name": "integrations:create"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "integration_type",
            "description": "<p>Must be set to <code>Webhook</code></p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "event",
            "description": "<p>The name of the Particle event that should trigger the webhook</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "url",
            "description": "<p>The web address that will be targeted when the webhook is triggered</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "requestType",
            "description": "<p>Type of web request triggered by the webhook that can be set to GET, POST, PUT, or DELETE</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "deviceID",
            "description": "<p>Limits the webhook triggering to a single device</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "body",
            "description": "<p>Send a custom body along with the HTTP request</p>"
          },
          {
            "group": "Parameter",
            "type": "Object",
            "optional": true,
            "field": "json",
            "description": "<p>Send custom data as JSON with the request. This will change the Content-Type header of the request to application/json</p>"
          },
          {
            "group": "Parameter",
            "type": "Object",
            "optional": true,
            "field": "form",
            "description": "<p>Send custom data as a form with the request by including key/value pairs. This will change the Content-Type header of the request to application/x-www-form-urlencoded</p>"
          },
          {
            "group": "Parameter",
            "type": "Object",
            "optional": true,
            "field": "query",
            "description": "<p>Send query parameters in the URL of the request by including key/value pairs</p>"
          },
          {
            "group": "Parameter",
            "type": "Object",
            "optional": true,
            "field": "auth",
            "description": "<p>Add an HTTP basic auth header by including a JSON object with username/password set</p>"
          },
          {
            "group": "Parameter",
            "type": "Object",
            "optional": true,
            "field": "headers",
            "description": "<p>Add custom HTTP headers by including key/value pairs</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "responseTopic",
            "description": "<p>Customize the webhook response event name that your devices can subscribe to</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "errorResponseTopic",
            "description": "<p>Customize the webhook error response event name that your devices can subscribe to</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "responseTemplate",
            "description": "<p>Customize the webhook response body that your devices can subscribe to</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "noDefaults",
            "description": "<p>Set to <code>true</code> to not add the triggering Particle event's data to the webhook request</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "disabled",
            "description": "<p>Set to <code>true</code> to stop events from being sent to this webhook</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "rejectUnauthorized",
            "description": "<p>Set to <code>false</code> to skip SSL certificate validation of the target URL</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em>.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/integrations?access_token=12345\" \\ integration_type=Webhook \\",
        "content": "$ curl \"https://api.particle.io/v1/integrations?access_token=12345\" \\ integration_type=Webhook \\\n       -d event=hello \\\n       -d url=https://samplesite.com \\\n       -d requestType=POST",
        "type": "bash"
      },
      {
        "title": "Create a Product Webhook",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/integrations?access_token=12345\" \\\n       -d integration_type=Webhook \\\n       -d event=hello \\\n       -d url=https://samplesite.com \\\n       -d requestType=POST",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "ok",
            "description": ""
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Webhook ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "url",
            "description": "<p>Web address that will be targeted when the webhook is triggered</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "created_at",
            "description": "<p>Timestamp of when the webhook was created</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "integration_type",
            "description": "<p>Should be set to <code>Webhook</code></p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "hookUrl",
            "description": "<p>Particle API endpoint to GET info on the webhook</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "POST /v1/webhooks",
          "content": " POST /v1/webhooks\n HTTP/1.1 201 Created\n\n {\n\t  \"ok\": true\n\t  \"id\": \"12345\",\n\t  \"url\": \"https://samplesite.com\",\n\t  \"event\": \"hello\",\n\t  \"created_at\": \"2016-04-28T17:06:33.123Z\",\n\t  \"hookUrl\": \"https://api.particle.io/v1/webhooks/12345\"\n }",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/event.js",
    "groupTitle": "Integrations_1"
  },
  {
    "type": "post",
    "url": "/v1/integrations",
    "title": "Enable Azure IoT Hub Integration",
    "group": "Integrations_2",
    "permission": [
      {
        "name": "integrations:create"
      }
    ],
    "description": "<p>Enable an integration with Azure IoT Hub. For more details, check out <a href=\"/tutorials/integrations/azure-iot-hub/\">the tutorial</a>.</p>",
    "name": "enableIoTHubIntegration",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "integration_type",
            "description": "<p>Must be set to <code>AzureIotHub</code></p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "event",
            "description": "<p>The name of the Particle event that should trigger the integration</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "hub_name",
            "description": "<p>The name of your Azure IoT Hub</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "policy_name",
            "description": "<p>The name of the shared access policy used for authentication</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "policy_key",
            "description": "<p>The shared access policy key used for authentication</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "deviceID",
            "description": "<p>Limits the integration triggering to a single device</p>"
          },
          {
            "group": "Parameter",
            "type": "Object",
            "optional": true,
            "field": "json",
            "description": "<p>A custom JSON payload to send along with the request</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "disabled",
            "description": "<p>Set to <code>true</code> to stop events from being sent to this integration</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em>.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/integrations?access_token=12345\" \\",
        "content": "$ curl \"https://api.particle.io/v1/integrations?access_token=12345\" \\\n       -d integration_type=AzureIotHub \\\n       -d event=hello hub_name=myHubName policy_name=particle policy_key=123abc",
        "type": "bash"
      },
      {
        "title": "Enable integration for a product",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/integrations?access_token=12345\" \\\n       -d integration_type=AzureIotHub \\\n       -d event=hello hub_name=myHubName policy_name=particle policy_key=123abc",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "ok",
            "description": ""
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Integration ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "created_at",
            "description": "<p>Timestamp of when the integration was created</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "integration_type",
            "description": "<p>Should be set to <code>AzureIotHub</code></p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "integrationUrl",
            "description": "<p>URL to fetch information about the integration</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "hub_name",
            "description": "<p>The name of your Azure IoT Hub</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "policy_name",
            "description": "<p>The name of the shared access policy used for authentication</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "policy_key",
            "description": "<p>The shared access policy key used for authentication</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "POST /v1/integrations",
          "content": "POST /v1/integrations\nHTTP/1.1 201 Created\n{\n\t\"id\":\"1\",\n\t\"event\":\"foo\",\n\t\"created_at\":\"2017-03-16T19:54:54.570Z\",\n\t\"integration_type\":\"AzureIotHub\",\n\t\"hub_name\":\"your-iot-hub-name\",\n\t\"policy_name\":\"iothubowner\",\n\t\"policy_key\": \"123abc\",\n\t\"ok\":true,\n\t\"integrationUrl\": \"https://api.particle.io/v1/integrations/1\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/event.js",
    "groupTitle": "Integrations_2"
  },
  {
    "type": "post",
    "url": "/v1/integrations",
    "title": "Enable Google Cloud Platform Integration",
    "group": "Integrations_3",
    "permission": [
      {
        "name": "integrations:create"
      }
    ],
    "description": "<p>Enable an integration with Google Cloud Platform. For more details, check out <a href=\"/tutorials/integrations/google-cloud-platform/\">the tutorial</a>.</p>",
    "name": "enableGoogleCloudPlatformSubIntegration",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "integration_type",
            "description": "<p>Must be set to <code>GoogleCloudPubSub</code></p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "event",
            "description": "<p>The name of the Particle event that should trigger the integration</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "topic",
            "description": "<p>The Google Cloud Pub Sub topic name for publishing messages</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "deviceID",
            "description": "<p>Limits the integration triggering to a single device</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "disabled",
            "description": "<p>Set to <code>true</code> to stop events from being sent to this integration</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em>.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/integrations?access_token=12345\" \\",
        "content": "$ curl \"https://api.particle.io/v1/integrations?access_token=12345\" \\\n       -d integration_type=GoogleCloudPubSub \\\n       -d event=hello \\\n       -d topic=your/topic/name",
        "type": "bash"
      },
      {
        "title": "Enable integration for a product",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/integrations?access_token=12345\" \\\n       -d integration_type=GoogleCloudPubSub \\\n       -d event=hello \\\n       -d topic=your/topic/name",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "ok",
            "description": ""
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Integration ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "created_at",
            "description": "<p>Timestamp of when the integration was created</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "integration_type",
            "description": "<p>Should be set to <code>GoogleCloudPubSub</code></p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "integrationUrl",
            "description": "<p>URL to fetch information about the integration</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "topic",
            "description": "<p>The Google Cloud Pub Sub topic name for publishing messages</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "POST /v1/integrations",
          "content": "POST /v1/integrations\nHTTP/1.1 201 Created\n{\n\t\"id\":\"1\",\n\t\"event\":\"foo\",\n\t\"created_at\":\"2017-03-16T19:54:54.570Z\",\n\t\"integration_type\":\"GoogleCloudPubSub\",\n\t\"topic\": \"your/topic/name\",\n\t\"ok\":true,\n\t\"integrationUrl\": \"https://api.particle.io/v1/integrations/1\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/event.js",
    "groupTitle": "Integrations_3"
  },
  {
    "type": "post",
    "url": "/v1/integrations",
    "title": "Enable Google Maps Integration",
    "group": "Integrations_4",
    "permission": [
      {
        "name": "integrations:create"
      }
    ],
    "description": "<p>Enable an integration with Google Maps. For more details, check out <a href=\"/tutorials/integrations/google-maps/\">the tutorial</a>.</p>",
    "name": "enableGoogleCloudMapsIntegration",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "integration_type",
            "description": "<p>Must be set to <code>GoogleMaps</code></p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "event",
            "description": "<p>The name of the Particle event that should trigger the integration</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "api_key",
            "description": "<p>Your Google Maps Geolocation API key. Check out <a href=\"https://developers.google.com/maps/documentation/geolocation/get-api-key\">these docs</a> for details</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "deviceID",
            "description": "<p>Limits the integration triggering to a single device</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "disabled",
            "description": "<p>Set to <code>true</code> to stop events from being sent to this integration</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em>.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/integrations?access_token=12345\" \\",
        "content": "$ curl \"https://api.particle.io/v1/integrations?access_token=12345\" \\\n       -d integration_type=GoogleMaps \\\n       -d event=hello \\\n       -d api_key=123abc",
        "type": "bash"
      },
      {
        "title": "Enable integration for a product",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/integrations?access_token=12345\" \\\n       -d integration_type=GoogleMaps \\\n       -d event=hello \\\n       -d api_key=123abc",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "ok",
            "description": ""
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Integration ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "created_at",
            "description": "<p>Timestamp of when the integration was created</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "api_key",
            "description": "<p>Your Google Maps Geolocation API key</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "integration_type",
            "description": "<p>Should be set to <code>GoogleCloudPubSub</code></p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "integrationUrl",
            "description": "<p>URL to fetch information about the integration</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "POST /v1/integrations",
          "content": "POST /v1/integrations\nHTTP/1.1 201 Created\n{\n\t\"id\":\"1\",\n\t\"event\":\"foo\",\n\t\"created_at\":\"2017-03-16T19:54:54.570Z\",\n\t\"integration_type\":\"GoogleMaps\",\n\t\"ok\":true,\n\t\"api_key\": \"123abc\",\n\t\"integrationUrl\": \"https://api.particle.io/v1/integrations/1\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/event.js",
    "groupTitle": "Integrations_4"
  },
  {
    "type": "put",
    "url": "/v1/integrations/:integrationId",
    "title": "Edit a Webhook",
    "description": "<p>Edit a Webhook. Subsequent triggering of this integration will be sent with the new attributes.</p> <p>The configuration replaces the entire previous webhook configuration. It does not merge in changes.</p>",
    "group": "Integrations_5",
    "permission": [
      {
        "name": "integrations:update"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "integrationId",
            "description": "<p>The ID of the desired integration</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "event",
            "description": "<p>The name of the Particle event that should trigger the webhook</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "deviceID",
            "description": "<p>Limits the webhook triggering to a single device</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "url",
            "description": "<p>The web address that will be targeted when the webhook is triggered</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "requestType",
            "description": "<p>Type of web request triggered by the webhook that can be set to GET, POST, PUT, or DELETE</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "body",
            "description": "<p>Send a custom body along with the HTTP request</p>"
          },
          {
            "group": "Parameter",
            "type": "Object",
            "optional": true,
            "field": "json",
            "description": "<p>Send custom data as JSON with the request. This will change the Content-Type header of the request to application/json</p>"
          },
          {
            "group": "Parameter",
            "type": "Object",
            "optional": true,
            "field": "form",
            "description": "<p>Send custom data as a form with the request by including key/value pairs. This will change the Content-Type header of the request to application/x-www-form-urlencoded</p>"
          },
          {
            "group": "Parameter",
            "type": "Object",
            "optional": true,
            "field": "query",
            "description": "<p>Send query parameters in the URL of the request by including key/value pairs</p>"
          },
          {
            "group": "Parameter",
            "type": "Object",
            "optional": true,
            "field": "auth",
            "description": "<p>Add an HTTP basic auth header by including a JSON object with username/password set</p>"
          },
          {
            "group": "Parameter",
            "type": "Object",
            "optional": true,
            "field": "headers",
            "description": "<p>Add custom HTTP headers by including key/value pairs</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "responseTopic",
            "description": "<p>Customize the webhook response event name that your devices can subscribe to</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "errorResponseTopic",
            "description": "<p>Customize the webhook error response event name that your devices can subscribe to</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "responseTemplate",
            "description": "<p>Customize the webhook response body that your devices can subscribe to</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "noDefaults",
            "description": "<p>Set to <code>true</code> to not add the triggering Particle event's data to the webhook request</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "disabled",
            "description": "<p>Set to <code>true</code> to stop events from being sent to this webhook</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "rejectUnauthorized",
            "description": "<p>Set to <code>false</code> to skip SSL certificate validation of the target URL</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em>.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl -X PUT https://api.particle.io/v1/integrations/12345 \\",
        "content": "$ curl -X PUT https://api.particle.io/v1/integrations/12345 \\\n       -d event=foo \\\n       -d access_token=12345",
        "type": "bash"
      },
      {
        "title": "Edit product webhook",
        "content": "$ curl -X PUT https://api.particle.io/v1/products/:productIdOrSlug/integrations/12345 \\\n       -d event=foo \\\n       -d access_token=12345",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "integration",
            "description": "<p>An integration object.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "PUT /v1/integrations/12345",
          "content": "PUT /v1/integrations/12345\nHTTP/1.1 200 OK\n{\n\t\"integration\": {\n\t\t\"id\":\"12345\",\n\t\t\"event\":\"foo\",\n\t\t\"created_at\":\"2017-03-14T17:57:46.316Z\",\n\t\t\"integration_type\":\"Webhook\",\n\t\t\"url\":\"https://weather.com\",\n\t\t\"requestType\":\"POST\"\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/event.js",
    "groupTitle": "Integrations_5",
    "name": "PutV1IntegrationsIntegrationid"
  },
  {
    "type": "put",
    "url": "/v1/integrations/:integrationId",
    "title": "Edit Azure IoT Hub Integration",
    "description": "<p>Edit an Azure IoT Hub integration. Subsequent triggering of this integration will be sent with the new attributes.</p> <p>The configuration replaces the entire previous webhook configuration. It does not merge in changes.</p>",
    "group": "Integrations_6",
    "permission": [
      {
        "name": "integrations:update"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "integrationId",
            "description": "<p>The ID of the desired integration</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "event",
            "description": "<p>The name of the Particle event that should trigger the integration</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "deviceID",
            "description": "<p>Limits the integration triggering to a single device</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "hub_name",
            "description": "<p>The name of your Azure IoT Hub</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "policy_name",
            "description": "<p>The name of the shared access policy used for authentication</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "policy_key",
            "description": "<p>The shared access policy key used for authentication</p>"
          },
          {
            "group": "Parameter",
            "type": "Object",
            "optional": true,
            "field": "json",
            "description": "<p>A custom JSON payload to send along with the request</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "disabled",
            "description": "<p>Set to <code>true</code> to stop events from being sent to this integration</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em>.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl -X PUT https://api.particle.io/v1/integrations/12345 \\",
        "content": "$ curl -X PUT https://api.particle.io/v1/integrations/12345 \\\n       -d event=foo \\\n       -d access_token=12345",
        "type": "bash"
      },
      {
        "title": "Edit product integration",
        "content": "$ curl -X PUT https://api.particle.io/v1/products/:productIdOrSlug/integrations/12345 \\\n       -d event=foo \\\n       -d access_token=12345",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "integration",
            "description": "<p>An integration object.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "PUT /v1/integrations/12345",
          "content": "PUT /v1/integrations/12345\nHTTP/1.1 200 OK\n{\n\t\"integration\": {\n\t\t\"id\":\"12345\",\n\t\t\"event\":\"foo\",\n\t\t\"created_at\":\"2017-03-14T17:57:46.316Z\",\n\t\t\"integration_type\":\"AzureIotHub\",\n\t\t\"hub_name\": \"your_iot_hub\",\n\t\t\"policy_name\": \"policy_name\"\n\t\t\"policy_key\": \"123abc\"\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/event.js",
    "groupTitle": "Integrations_6",
    "name": "PutV1IntegrationsIntegrationid"
  },
  {
    "type": "put",
    "url": "/v1/integrations/:integrationId",
    "title": "Edit Google Cloud Platform Integration",
    "description": "<p>Edit a Google Cloud platform integration. Subsequent triggering of this integration will be sent with the new attributes.</p> <p>The configuration replaces the entire previous webhook configuration. It does not merge in changes.</p>",
    "group": "Integrations_7",
    "permission": [
      {
        "name": "integrations:update"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "integrationId",
            "description": "<p>The ID of the desired integration</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "event",
            "description": "<p>The name of the Particle event that should trigger the integration</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "deviceID",
            "description": "<p>Limits the integration triggering to a single device</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "topic",
            "description": "<p>The Google Cloud Pub Sub topic name for publishing messages</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "disabled",
            "description": "<p>Set to <code>true</code> to stop events from being sent to this integration</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em>.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl -X PUT https://api.particle.io/v1/integrations/12345 \\",
        "content": "$ curl -X PUT https://api.particle.io/v1/integrations/12345 \\\n       -d event=foo \\\n       -d access_token=12345",
        "type": "bash"
      },
      {
        "title": "Edit product integration",
        "content": "$ curl -X PUT https://api.particle.io/v1/products/:productIdOrSlug/integrations/12345 \\\n       -d event=foo \\\n       -d access_token=12345",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "integration",
            "description": "<p>An integration object.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "PUT /v1/integrations/12345",
          "content": "PUT /v1/integrations/12345\nHTTP/1.1 200 OK\n{\n\t\"integration\": {\n\t\t\"id\":\"12345\",\n\t\t\"event\":\"foo\",\n\t\t\"created_at\":\"2017-03-14T17:57:46.316Z\",\n\t\t\"integration_type\":\"GoogleCloudPubSub\",\n\t\t\"topic\": \"your/topic/name\"\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/event.js",
    "groupTitle": "Integrations_7",
    "name": "PutV1IntegrationsIntegrationid"
  },
  {
    "type": "put",
    "url": "/v1/integrations/:integrationId",
    "title": "Edit Google Maps Integration",
    "description": "<p>Edit a Google Maps integration. Subsequent triggering of this integration will be sent with the new attributes.</p> <p>The configuration replaces the entire previous webhook configuration. It does not merge in changes.</p>",
    "group": "Integrations_8",
    "permission": [
      {
        "name": "integrations:update"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "integrationId",
            "description": "<p>The ID of the desired integration</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "event",
            "description": "<p>The name of the Particle event that should trigger the integration</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "deviceID",
            "description": "<p>Limits the integration triggering to a single device</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "api_key",
            "description": "<p>Your Google Maps Geolocation API key. Check out <a href=\"https://developers.google.com/maps/documentation/geolocation/get-api-key\">these docs</a> for details</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "disabled",
            "description": "<p>Set to <code>true</code> to stop events from being sent to this integration</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em>.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl -X PUT https://api.particle.io/v1/integrations/12345 \\",
        "content": "$ curl -X PUT https://api.particle.io/v1/integrations/12345 \\\n       -d api_key=123abc \\\n       -d access_token=12345",
        "type": "bash"
      },
      {
        "title": "Edit product integration",
        "content": "$ curl -X PUT https://api.particle.io/v1/products/:productIdOrSlug/integrations/12345 \\\n       -d api_key=123abc \\\n       -d access_token=12345",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "integration",
            "description": "<p>An integration object.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "PUT /v1/integrations/12345",
          "content": "PUT /v1/integrations/12345\nHTTP/1.1 200 OK\n{\n\t\"integration\": {\n\t\t\"id\":\"12345\",\n\t\t\"event\":\"foo\",\n\t\t\"created_at\":\"2017-03-14T17:57:46.316Z\",\n\t\t\"integration_type\":\"GoogleMaps\",\n\t\t\"api_key\": \"123abc\"\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/event.js",
    "groupTitle": "Integrations_8",
    "name": "PutV1IntegrationsIntegrationid"
  },
  {
    "type": "get",
    "url": "/v1/integrations/:integrationId",
    "title": "Get integration",
    "name": "Get_Integration",
    "group": "Integrations_9",
    "permission": [
      {
        "name": "integrations:get"
      }
    ],
    "description": "<p>Get a single integration. Pay special attention to the <code>integration_type</code> attribute of each integration, which will let you know whether the integration is a <a href=\"#create-a-webhook\">Webhook</a>, an <a href=\"#enable-azure-iot-hub-integration\">Azure IoT Hub</a> integration, a <a href=\"#enable-google-cloud-platform-integration\">Google Cloud Platform</a> integration, or a <a href=\"#enable-google-maps-integration\">Google Maps</a> integration.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "integrationId",
            "description": "<p>The ID of the desired integration</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em>.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/integrations/12345?access_token=12345\"",
        "content": "$ curl \"https://api.particle.io/v1/integrations/12345?access_token=12345\"",
        "type": "bash"
      },
      {
        "title": "Get a product integration",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/integrations/12345?access_token=12345\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "integration",
            "description": "<p>An integration object. The object will vary in its attributes depending on integration type. For information on specific integration type response bodies, please see creation docs for <a href=\"#create-a-webhook\">Webhooks</a>, <a href=\"#enable-azure-iot-hub-integration\">Azure IoT Hub</a>, and <a href=\"#enable-google-cloud-platform-integration\">Google Cloud Platform</a>.</p>"
          },
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "integration.logs",
            "description": "<p>Contains information about the last 10 HTTP request/responses sent from this integration. A useful debugging tool.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/integrations/12345",
          "content": "GET /v1/integrations/12345\nHTTP/1.1 200 OK\n{\n\t\"integration\": {\n\t\t\"id\":\"12345\",\n\t\t\"event\":\"eventName\",\n\t\t\"created_at\":\"2017-03-14T17:57:46.316Z\",\n\t\t\"logs\": [...],\n\t\t\"integration_type\":\"Webhook\",\n\t\t\"url\":\"https://weather.com\",\n\t\t\"requestType\":\"POST\"\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/event.js",
    "groupTitle": "Integrations_9"
  },
  {
    "type": "get",
    "url": "/v1/products/:productIdOrSlug/location",
    "title": "Query location for devices within a product",
    "name": "GetLocations",
    "group": "Location_1",
    "description": "<p>Get latest or historical location data for devices. Date range and bounding box can be specified to narrow the query.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "date_range",
            "description": "<p>Start and end date in ISO8601 format, separated by comma, to query. Omitting date_range will return last known location.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "rect_bl",
            "description": "<p>Bottom left of the rectangular bounding box to query. Latitude and longitude separated by comma.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "rect_tr",
            "description": "<p>Top right of the rectangular bounding box to query. Latitude and longitude separated by comma.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "device_id",
            "description": "<p>Device ID prefix to include in the query</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "device_name",
            "description": "<p>Device name prefix to include in the query</p>"
          },
          {
            "group": "Parameter",
            "type": "Array",
            "optional": true,
            "field": "groups",
            "description": "<p>Array of group names to include in the query</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": true,
            "field": "page",
            "description": "<p>Page of results to display. Defaults to 1</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": true,
            "field": "per_page",
            "description": "<p>Number of results per page. Defaults to 20. Maximum of 100</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "locations:get"
      }
    ],
    "examples": [
      {
        "title": "Historical locations query with selected geo region, date range and device name filter",
        "content": "$ curl \"https://api.particle.io/v1/products/1234/locations?access_token=abc123&rect_bl=30.5,30.0&rect_tr=36.2,35.6&date_range=2020-12-05T20:00:00Z,2020-12-05T20:07:39Z&device_name=service-truck\"",
        "type": "bash"
      },
      {
        "title": "Last known locations query with selected geo region",
        "content": "$ curl \"https://api.particle.io/v1/products/1234/locations?access_token=abc123&rect_bl=30.5,30.0&rect_tr=36.2,35.6\"",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Historical locations response with applied geo region, date range and device name filter",
          "content": "GET https://api.particle.io/v1/products/1234/locations\nHTTP/1.1 200 OK\n{\n  \"locations\": [{\n    \"device_id\": \"1234567890abcdef\",\n    \"product_id\": 343,\n    \"device_name\" : \"service-truck7\",\n    \"groups\": [\"us-east\", \"trucks\"],\n    \"gps_lock\": true,\n    \"last_heard\": \"2020-12-05T20:06:12Z\",\n    \"timestamps\": [\n      \"2020-12-05T20:03:40Z\",\n      \"2020-12-05T20:04:23Z\",\n      \"2020-12-05T20:05:44Z\",\n      \"2020-12-05T20:06:12Z\",\n    ],\n    \"online\": false,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [[\n        34.518699645996094,\n        31.504855323809403\n      ],[\n        34.528699645996094,\n        31.604855323809403\n      ],[\n        34.538699645996094,\n        31.704855323809403\n      ],[\n        34.548699645996094,\n        31.804855323809403\n      ]]\n    }\n  }, {\n    \"device_id\": \"deadbeef123456\",\n    \"product_id\": 343,\n    \"device_name\": \"service-truck11\",\n    \"groups\": [\"us-east\"],\n    \"gps_lock\": true,\n    \"last_heard\": \"2020-12-05T20:06:12Z\",\n    \"timestamps\": [\n      \"2020-12-05T20:04:23Z\",\n      \"2020-12-05T20:05:44Z\",\n      \"2020-12-05T20:06:12Z\",\n    ],\n    \"online\": true,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [[\n        33.518699645996094,\n        30.504855323809403\n      ], [\n        33.528699645996094,\n        30.604855323809403\n      ], [\n        33.538699645996094,\n        30.704855323809403\n      ]]\n    },\n  }],\n  \"meta\": {\n    \"page\" : 1,\n    \"per_page\" : 20,\n    \"total_pages\" : 5,\n    \"devices_found\" : 100,\n  }\n}",
          "type": "json"
        },
        {
          "title": "Last known locations response with selected geo region",
          "content": "GET https://api.particle.io/v1/products/1234/locations\nHTTP/1.1 200 OK\n{\n  \"locations\": [{\n    \"device_id\": \"1234567890abcdef\",\n    \"product_id\": 343,\n    \"device_name\" : \"deploy-truck32\",\n    \"gps_lock\": true,\n    \"last_heard\": \"2020-12-07T21:07:12Z\",\n    \"groups\": [\"us-east\", \"trucks\"],\n    \"timestamps\": [\n      \"2020-12-07T21:07:12Z\",\n    ],\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [\n        34.518699645996094,\n        31.504855323809403\n      ]\n    }\n  }, {\n    \"device_id\": \"deadbeef123456\",\n    \"product_id\": 343,\n    \"groups\": [\"us-east\"],\n    \"device_name\": \"service-truck11\",\n    \"timestamp\": \"2020-12-07T21:07:12Z\",\n    \"gps_lock\": true,\n    \"last_heard\": \"2020-12-07T21:07:12Z\",\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [\n        33.548699645996094,\n        30.804855323809403\n      ]\n    },\n  }],\n  \"meta\": {\n    \"page\" : 1,\n    \"total_pages\" : 1,\n    \"per_page\" : 20,\n    \"devices_found\" : 2,\n  }\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/location.js",
    "groupTitle": "Location_1"
  },
  {
    "type": "get",
    "url": "/v1/products/:productIdOrSlug/location/:deviceId",
    "title": "Query location for one device within a product",
    "name": "getLocation",
    "group": "Location_2",
    "description": "<p>Get last known or historical location data for one device. Date range and bounding box can be specified to narrow down the query. Properties and custom data will be returned by default.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "date_range",
            "description": "<p>Start and end date in ISO8601 format, separated by comma, to query. Omitting date_range will return last known location.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "rect_bl",
            "description": "<p>Bottom left of the rectangular bounding box to query. Latitude and longitude separated by comma.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "rect_tr",
            "description": "<p>Top right of the rectangular bounding box to query. Latitude and longitude separated by comma.</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "locations:get"
      }
    ],
    "examples": [
      {
        "title": "Historical locations query for a single device with selected geo region and date range",
        "content": "$ curl \"https://api.particle.io/v1/products/1234/locations/123456?access_token=abc123&rect_bl=10.5,11&rect_tr=11.0,11.5&date_range=2020-12-05T20:00:00Z,2020-12-05T20:07:39Z\"",
        "type": "bash"
      },
      {
        "title": "Last known location query for a single device",
        "content": "$ curl \"https://api.particle.io/v1/products/1234/locations/123456?access_token=abc123\"",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "Historical locations response for a single device, in selected geo region and date range",
          "content": "GET https://api.particle.io/v1/products/1234/locations/123456\nHTTP/1.1 200 OK\n{\n  \"location\": {\n    \"device_id\": \"1234567890abcdef\",\n    \"device_name\" : \"ice-cream-truck3\",\n    \"product_id\": 343,\n    \"gps_lock\" : true,\n    \"last_heard\" : \"2020-12-05T20:06:120Z\",\n    \"groups\": [\"us-east\", \"truck\"],\n    \"timestamps\": [\n      \"2020-12-05T20:03:40Z\",\n      \"2020-12-05T20:04:23Z\",\n      \"2020-12-05T20:05:44Z\",\n      \"2020-12-05T20:06:120Z\"\n    ],\n    \"online\": true,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [[\n        34.518699645996094,\n        31.504855323809403\n      ],[\n        34.528699645996094,\n        31.604855323809403\n      ],[\n        34.538699645996094,\n        31.704855323809403\n      ],[\n        34.548699645996094,\n        31.804855323809403\n      ]]\n    },\n    \"properties\": [{\n        \"hd\" : 36.6,\n        \"acc_h\": 5.0,\n        \"speed\": 13.5,\n        \"temp\": 77.4\n    },{\n        \"hd\" : 37.6,\n        \"acc_h\": 6.0,\n        \"speed\": 13.5,\n        \"temp\": 69.4\n    },{\n        \"hd\" : 41.6,\n        \"acc_h\": 11.8,\n        \"speed\": 16.5,\n        \"temp\": 75.4\n    },{\n        \"hd\" : 42.6,\n        \"acc_h\": 7.9,\n        \"speed\": 15.5,\n        \"temp\": 78.4\n    }]\n  },\n  \"meta\": {}\n}",
          "type": "json"
        },
        {
          "title": "Last known location response for a single device",
          "content": "GET https://api.particle.io/v1/products/1234/locations/123456\nHTTP/1.1 200 OK\n{\n  \"location\": {\n    \"device_id\": \"1234567890abcdef\",\n    \"device_name\" : \"ice-cream-truck3\",\n    \"product_id\": 343,\n    \"groups\": [\"us-east\", \"truck\"],\n    \"gps_lock\" : true,\n    \"last_heard\" : \"2020-12-05T20:06:120Z\",\n    \"timestamps\": [\"2020-12-05T20:06:120Z\"],\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": [\n     \t34.548699645996094,\n        31.804855323809403\n      ]\n    },\n   \"properties\": [{\n        \"hd\" : 36.6,\n        \"acc_h\": 5.0,\n        \"speed\": 13.5,\n        \"temp\": 77.4\n    }]\n  },\n  \"meta\": {}\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/location.js",
    "groupTitle": "Location_2"
  },
  {
    "type": "get",
    "url": "/v1/clients",
    "title": "List clients",
    "group": "OAuth_1",
    "permission": [
      {
        "name": "clients:list"
      }
    ],
    "description": "<p>Get a list of all existing OAuth clients, either owned by the authenticated user or clients associated with a product.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em>.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/clients?access_token=1234\"",
        "content": "$ curl \"https://api.particle.io/v1/clients?access_token=1234\"",
        "type": "bash"
      },
      {
        "title": "List product OAuth clients",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/clients?access_token=1234\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "ok",
            "description": ""
          },
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "clients",
            "description": "<p>An array of OAuth clients</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "clients.id",
            "description": ""
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "clients.name",
            "description": ""
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "clients.type",
            "description": ""
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "clients.redirect_uri",
            "description": "<p>Only for clients with <code>type: &quot;web&quot;</code></p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/clients",
          "content": "GET /v1/clients\nHTTP/1.1 200 OK\n{\n\t\"ok\":true,\n\t\"clients\": [\n\t\t{\n\t\t\t\"name\":\"server\",\n\t\t\t\"type\":\"installed\",\n\t\t\t\"id\":\"server-999\"\n\t\t},\n\t\t{\n\t\t\t\"name\":\"Mobile App\",\n\t\t\t\"type\":\"installed\",\n\t\t\t\"id\":\"mobile-app-1234\"\n\t\t}\n\t]\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/client.js",
    "groupTitle": "OAuth_1",
    "name": "GetV1Clients"
  },
  {
    "type": "post",
    "url": "/v1/clients",
    "title": "Create a client",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>The name of the OAuth client</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "type",
            "description": "<p><code>web</code> or <code>installed</code>. <code>web</code> is used for the authorization code grant flow similar to IFTTT, Facebook, and Twitter use.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "redirect_uri",
            "description": "<p>Only required for <code>web</code> type. URL that you wish us to redirect to after the OAuth flow.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "scope",
            "description": "<p>Limits the scope of what the access tokens created using the client are allowed to do. Provide a space separated list of scopes. The only current valid scopes are <code>customers:create</code> and <code>\\*:\\*</code> for full control.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em>.</p>"
          }
        ]
      }
    },
    "name": "CreateOAuthClient",
    "group": "OAuth_2",
    "permission": [
      {
        "name": "clients:create"
      }
    ],
    "description": "<p>Create an OAuth client that represents an app.</p> <p>Use <code>type=installed</code> for most web and mobile apps. If you want to have Particle users login to their account on Particle in order to give your app access to their devices, then you can go through the full OAuth authorization code grant flow using <code>type=web</code>. This is the same way you authorize the Particle IFTTT channel, and it is similar to the way you give any app access to your Facebook or Twitter account.</p> <p>Your client secret will never be displayed again! Save it in a safe place.</p> <p>If you use <code>type=web</code> then you will also need to pass a <code>redirect_uri</code> parameter in the POST body. This is the URL where users will be redirected after telling Particle they are willing to give your app access to their devices.</p> <p>The scopes provided only contain the <code>object</code> and <code>action</code> parts, skipping the <code>domain</code> which is being infered from the context.</p> <p>If you are building a web or mobile application for your Particle product, you should use the product-specific endpoint for creating a client (<code>POST /v1/products/:productIdOrSlug/clients</code>). This will grant this client (and access tokens generated by this client) access to product-specific behaviors like <a href=\"#call-a-function\">calling functions</a> and <a href=\"#get-a-variable-value\">checking variables</a> on product devices, <a href=\"#create-a-customer---client-credentials\">creating customers</a>, and <a href=\"#generate-a-customer-scoped-access-token\">generating customer scoped access tokens</a>.</p>",
    "examples": [
      {
        "title": "$ curl https://api.particle.io/v1/clients \\",
        "content": "$ curl https://api.particle.io/v1/clients \\\n       -d name=MyApp \\\n       -d type=installed \\\n       -d access_token=1234",
        "type": "bash"
      },
      {
        "title": "Create an OAuth client for a product",
        "content": "$ curl https://api.particle.io/v1/products/:productIdOrSlug/clients \\\n       -d name=MyApp \\\n       -d type=installed \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "ok",
            "description": ""
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "client",
            "description": ""
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "client.name",
            "description": ""
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "client.type",
            "description": ""
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "client.id",
            "description": ""
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "client.secret",
            "description": "<p>Save this! It will never be shown again.</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "client.redirect_uri",
            "description": "<p>Only for clients with <code>type: &quot;web&quot;</code></p>"
          }
        ]
      },
      "examples": [
        {
          "title": "POST /v1/clients",
          "content": "POST /v1/clients\nHTTP/1.1 200 OK\n{\n\t\"ok\": true,\n\t\"client\": {\n\t\t\"name\": \"MyApp\",\n\t\t\"type\": \"installed\",\n\t\t\"id\": \"myapp-2146\",\n\t\t\"secret\": \"615c620d647b6e1dab13bef1695c120b0293c342\"\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/client.js",
    "groupTitle": "OAuth_2"
  },
  {
    "type": "put",
    "url": "/v1/clients/:clientId",
    "title": "Update a client",
    "description": "<p>Update the <code>name</code> or <code>scope</code> of an existing OAuth client.</p>",
    "group": "OAuth_3",
    "permission": [
      {
        "name": "clients:update"
      }
    ],
    "name": "UpdateOAuthClient",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "optional": false,
            "field": "clientId",
            "description": "<p>The client ID to update</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "name",
            "description": "<p>Give the OAuth client a new name</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "scope",
            "description": "<p>Update the scope of the OAuth client. to only allow customer creation from the client or pass <code>none</code> to remove all scopes (full permissions)</p>"
          },
          {
            "group": "Parameter",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em>.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl -X PUT https://api.particle.io/v1/clients/client-123 \\",
        "content": "$ curl -X PUT https://api.particle.io/v1/clients/client-123 \\\n       -d name=\"My App 2\" \\\n       -d access_token=1234",
        "type": "bash"
      },
      {
        "title": "Update a product OAuth client",
        "content": "$ curl -X PUT https://api.particle.io/v1/products/:productIdOrSlug/clients/client-123 \\\n       -d name=\"My App 2\" \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-",
            "description": "<p>The updated client</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "PUT /v1/clients/client-123",
          "content": "PUT /v1/clients/client-123\nHTTP/1.1 200 OK\n{\n\t\"ok\": true,\n\t\"client\": {\n\t\t\"name\": \"My App 2\",\n\t\t\"type\": \"installed\",\n\t\t\"id\": \"myapp-2146\",\n\t\t\"secret\": \"615c620d647b6e1dab13bef1695c120b0293c342\"\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/client.js",
    "groupTitle": "OAuth_3"
  },
  {
    "type": "delete",
    "url": "/v1/clients/:clientId",
    "title": "Delete a client",
    "description": "<p>Remove an OAuth client</p>",
    "group": "OAuth_4",
    "permission": [
      {
        "name": "clients:remove"
      }
    ],
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "optional": false,
            "field": "clientId",
            "description": "<p>The client ID to delete</p>"
          },
          {
            "group": "Parameter",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em>.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl -X DELETE https://api.particle.io/v1/clients/client-123 \\",
        "content": "$ curl -X DELETE https://api.particle.io/v1/clients/client-123 \\\n       -d access_token=1234",
        "type": "bash"
      },
      {
        "title": "Delete a product OAuth client",
        "content": "$ curl -X DELETE https://api.particle.io/v1/products/:productIdOrSlug/clients/client-123 \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "DELETE /v1/clients/:clientId",
          "content": "DELETE /v1/clients/:clientId\nHTTP/1.1 204 No Content",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/client.js",
    "groupTitle": "OAuth_4",
    "name": "DeleteV1ClientsClientid"
  },
  {
    "type": "get",
    "url": "/v1/products/:productIdOrSlug/firmware/:version",
    "title": "Get Product Firmware",
    "name": "getProductFirmwareVersion",
    "group": "ProductFirmware_1",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "version",
            "description": "<p>Version number of firmware to retrieve</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "firmware:get"
      }
    ],
    "description": "<p>Get a specific version of product firmware</p>",
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/firmware/1?access_token=1234\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "_id",
            "description": "<p>The ID of the firmware</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "version",
            "description": "<p>The version number of the firmware</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "title",
            "description": "<p>The title of the firmware</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "description",
            "description": "<p>A description of the firmware</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>The firmware's file name</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "size",
            "description": "<p>The size of the firmware in bytes</p>"
          },
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "product_default",
            "description": "<p>Whether the firmware is released as the product default</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "groups",
            "description": "<p>An array of group names representing the groups the firmware version has been released to</p>"
          },
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "mandatory",
            "description": "<p>[Enterprise only] Product upgrades and downgrades apply this version of firmware before flashing the targeted version.</p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "uploaded_on",
            "description": "<p>Timestamp of when the firmware was uploaded</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "product_id",
            "description": "<p>The ID of the product that owns the firmware</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "uploaded_by",
            "description": "<p>The user who uploaded the firmware</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/products/:productIdOrSlug/firmware/1",
          "content": "GET /v1/products/:productIdOrSlug/firmware/1\nHTTP/1.1 200 OK\n{\n\t\"_id\":\"58c09bc7df2b9a4d223d9c22\",\n\t\"version\":1,\n\t\"title\":\"My Firmware\",\n\t\"description\":\"Sample firmware description\",\n\t\"name\":\"firmware.bin\",\n\t\"size\":7952,\n\t\"product_default\":false,\n\t\"uploaded_on\":\"2017-03-09T00:03:19.181Z\",\n\t\"product_id\":295,\n \"mandatory\":false,\n\t\"uploaded_by\":{\n\t\t\"username\":\"jeff@particle.io\",\n\t\t...\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "ProductFirmware_1"
  },
  {
    "type": "get",
    "url": "/v1/products/:productIdOrSlug/firmware",
    "title": "List all product firmwares",
    "name": "listAllProductFirmwares",
    "group": "ProductFirmware_2",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "firmware:list"
      }
    ],
    "description": "<p>List all versions of product firmware</p>",
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/firmware?access_token=1234\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "-",
            "description": "<p>An array of product firmware objects. See <a href=\"#get-product-firmware\">above</a> for details on the firmware object.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/products/:productIdOrSlug/firmware",
          "content": "GET /v1/products/:productIdOrSlug/firmware\nHTTP/1.1 200 OK\n[\n    {\n\t \t\"_id\":\"58c09bc7df2b9a4d223d9c22\",\n\t \t\"version\":1,\n\t \t\"title\":\"My Firmware\",\n\t \t\"description\":\"Sample firmware description\",\n\t \t\"name\":\"firmware.bin\",\n\t \t\"size\":7952,\n\t \t\"product_default\":false,\n\t \t\"uploaded_on\":\"2017-03-09T00:03:19.181Z\",\n\t \t\"product_id\":295,\n\t \t\"uploaded_by\":{\n\t \t\t\"username\":\"jeff@particle.io\",\n\t \t},\n\t    \"groups\":{\n\t\t    [\"asia\",\"europe\",\"america\"],\n\t\t},\n\t    \"device_count\":200\n\t },\n    ...\n]",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "ProductFirmware_2"
  },
  {
    "type": "post",
    "url": "/v1/products/:productIdOrSlug/firmware",
    "title": "Upload product firmware",
    "name": "uploadProductFirmware",
    "group": "ProductFirmware_3",
    "description": "<p>Upload a new firmware version to a product</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "version",
            "description": "<p>The version number of the firmware binary you are uploading</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "title",
            "description": "<p>Title of the firmware version. Handy for quickly identifying the firmware</p>"
          },
          {
            "group": "Parameter",
            "type": "File",
            "optional": false,
            "field": "binary",
            "description": "<p>A binary file encoded in <code>multipart/form-data</code> format containing the contents of the product firmware</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "description",
            "description": "<p>Optionally provide a description for the new firmware version</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": false,
            "field": "mandatory",
            "description": "<p>[Enterprise only] Flag this firmware release as a mandatory release so that product upgrades and downgrades apply this version of firmware before flashing the targeted version.</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "firmware:create"
      }
    ],
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/firmware?access_token=1234\" \\\n       -F binary=@firmware.bin \\\n       -F version=1 \\\n       -F title=firmware",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-",
            "description": "<p>The newly created firmware object. See <a href=\"#get-product-firmware\">above</a> for details on the firmware object.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "POST /v1/products/:productIdOrSlug/firmware",
          "content": "POST /v1/products/:productIdOrSlug/firmware\nHTTP/1.1 201 Created\n{\n\t\"_id\":\"58c09bc7df2b9a4d223d9c22\",\n\t\"version\":1,\n\t\"title\":\"My Firmware\",\n\t\"description\":\"Sample firmware description\",\n\t\"name\":\"firmware.bin\",\n\t\"size\":7952,\n\t\"current\":false\n\t\"uploaded_on\":\"2017-03-09T00:03:19.181Z\",\n\t\"product_id\":295,\n\t\"uploaded_by\":{\n\t\t\"username\":\"jeff@particle.io\",\n\t\t...\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "ProductFirmware_3"
  },
  {
    "type": "put",
    "url": "/v1/products/:productIdOrSlug/firmware/:version",
    "title": "Edit product firmware",
    "name": "editProductFirmware",
    "group": "ProductFirmware_4",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "title",
            "description": "<p>Provide a new title for the firmware</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "description",
            "description": "<p>Provide a new description for the firmware</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": false,
            "field": "mandatory",
            "description": "<p>[Enterprise only] Flag this firmware release as a mandatory release so that product upgrades and downgrades apply this version of firmware before flashing the targeted version.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "firmware:update"
      }
    ],
    "description": "<p>Edit a specific product firmware version</p>",
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl -X PUT https://api.particle.io/v1/products/:productIdOrSlug/firmware/1 \\\n       -d title=\"New title\" \\\n       -d description=\"New description\" \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-",
            "description": "<p>The updated firmware object. See <a href=\"#get-product-firmware\">above</a> for details on the firmware object.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "PUT /v1/products/:productIdOrSlug/firmware/1",
          "content": "PUT /v1/products/:productIdOrSlug/firmware/1\nHTTP/1.1 200 OK\n{\n\t\"_id\":\"58c09bc7df2b9a4d223d9c22\",\n\t\"version\":1,\n\t\"title\":\"New title\",\n\t\"description\":\"New description\",\n\t\"name\":\"firmware.bin\",\n\t\"size\":7952,\n\t\"current\":false\n\t\"uploaded_on\":\"2017-03-09T00:03:19.181Z\",\n\t\"product_id\":295,\n\t\"uploaded_by\":{\n\t\t\"username\":\"jeff@particle.io\",\n\t\t...\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "ProductFirmware_4"
  },
  {
    "type": "get",
    "url": "/v1/products/:productIdOrSlug/firmware/:version/binary",
    "title": "Download firmware binary",
    "name": "downloadProductFirmwareBinary",
    "group": "ProductFirmware_5",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "version",
            "description": "<p>Version number of firmware to retrieve</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "firmware.binary:get"
      }
    ],
    "description": "<p>Retrieve and download the original binary of a version of product firmware.</p>",
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/firmware/1/binary?access_token=1234\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "File",
            "optional": false,
            "field": "-",
            "description": "<p>The binary file of the requested product firmware version</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "ProductFirmware_5"
  },
  {
    "type": "put",
    "url": "/v1/products/:productIdOrSlug/firmware/release",
    "title": "Release product firmware",
    "name": "releaseProductFirmware",
    "group": "ProductFirmware_6",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "version",
            "description": "<p>firmware version number to release to the fleet</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": true,
            "field": "product_default",
            "description": "<p>Pass <code>true</code> to set the firmware version as the product default release</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "groups",
            "description": "<p>An array of device groups to release the firmware to.</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": false,
            "field": "intelligent",
            "description": "<p>Flag this firmware release as an intelligent release so that devices do not need to reconnect to the cloud to receive the update and that they are informed of pending updates when devices are not available for updating.</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "firmware:release"
      }
    ],
    "description": "<p>Release a version of firmware to the fleet of product devices. When releasing as the product default, all non-development devices that are not individually locked to a version of product firmware will automatically download and run this version of firmware the next time they handshake with the cloud.</p> <p>You can also release firmware to specific groups for more fine-grained firmware management.</p> <p><strong>Note</strong>: Before releasing firmware for the first time, the firmware must be running on at least one device in your product fleet that has successfully re-connected to the Particle cloud.</p>",
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl -X PUT https://api.particle.io/v1/products/:productIdOrSlug/firmware/release \\\n       -d version=1 \\\n       -d groups[]=\"foo&groups[]=bar&groups[]=baz\"\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-",
            "description": "<p>The released firmware object. See <a href=\"#get-product-firmware\">above</a> for details on the firmware object.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "PUT /v1/products/:productIdOrSlug/firmware/release",
          "content": "PUT /v1/products/:productIdOrSlug/firmware/release\nHTTP/1.1 200 OK\n{\n\t\"updated_at\": \"2017-07-20T23:53:15.298Z\",\n\t\"version\":1,\n\t\"title\":\"New title\",\n\t\"size\":7952,\n\t\"product_default\":false,\n\t\"uploaded_on\":\"2017-03-09T00:03:19.181Z\",\n\t\"product_id\":295,\n\t\"uploaded_by\":{\n\t\t\"username\":\"jeff@particle.io\",\n\t},\n\t\"groups\": [\"foo\", \"bar\", \"baz\"],\n\t\"intelligent\": true\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "ProductFirmware_6"
  },
  {
    "type": "delete",
    "url": "/v1/products/:productIdOrSlug/firmware/:version",
    "title": "Delete unreleased firmware binary",
    "name": "deleteProductFirmware",
    "group": "ProductFirmware_7",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "version",
            "description": "<p>Version number of firmware to delete</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "firmware:remove"
      }
    ],
    "description": "<p>Delete a version of product firmware that has never been released.</p>",
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl -X DELETE \"https://api.particle.io/v1/products/:productIdOrSlug/firmware/1?access_token=1234\"",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "DELETE /v1/products/:productIdOrSlug/firmware/1",
          "content": "DELETE /v1/products/:productIdOrSlug/firmware/1\nHTTP/1.1 204 No Content",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "ProductFirmware_7"
  },
  {
    "type": "get",
    "url": "/v1/user/products",
    "title": "List Products",
    "name": "listProducts",
    "description": "<p>List products the currently authenticated user has access to</p>",
    "group": "Products_1",
    "permission": [
      {
        "name": "products:list"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Access Token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Authorization-Example",
          "content": "Authorization: \"Bearer 01234567890ABCDEF\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/user/products?access_token=12345\"",
        "content": "$ curl \"https://api.particle.io/v1/user/products?access_token=12345\"",
        "type": "bash"
      },
      {
        "title": "List Organization Products",
        "content": "$ curl \"https://api.particle.io/v1/orgs/particle/products?access_token=12345\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "products",
            "description": "<p>List of Products</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/user/products",
          "content": "GET /v1/user/products\nHTTP/1.1 200 OK\n{\n  \"products\": [{\n    \"id\": 12345,\n    \"platform_id\": 10,\n    \"name\": \"My Product\",\n    \"slug\": \"my-product\",\n    \"description\": \"My test product\",\n    \"subscription_id\": 1234,\n    \"mb_limit\": null,\n    \"user\": \"me@example.com\"\n    \"groups\": [\n      \"one\",\n      \"two\"\n    ],\n    \"settings\": {\n        \"location\": {},\n        \"known_application\": {\n            \"opt_in\": true\n        },\n        \"quarantine\": false\n    }\n  }]\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Products_1"
  },
  {
    "type": "get",
    "url": "/v1/products/:productIdOrSlug",
    "title": "Retrieve a product",
    "name": "GetProduct",
    "description": "<p>Retrieve details for a product.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "products:get"
      }
    ],
    "group": "Products_2",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "product",
            "description": ""
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "product.id",
            "description": "<p>Product Unique ID</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "product.product_id",
            "description": "<p>Product Firmware ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "product.name",
            "description": "<p>Product Name</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "product.slug",
            "description": "<p>URL compatible version of name</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "product.description",
            "description": ""
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "product.platform_id",
            "description": "<p>Product Platform ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "product.organization",
            "description": "<p>Organization Unique ID</p>"
          },
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "product.requires_activation_codes",
            "description": ""
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/products/photon",
          "content": "GET /v1/products/photon\nHTTP/1.1 200 OK\n{\n  \"product\": {\n    \"id\": 12345,\n    \"platform_id\": 10,\n    \"name\": \"My Product\",\n    \"slug\": \"my-product\",\n    \"description\": \"My test product\",\n    \"subscription_id\": 1234,\n    \"mb_limit\": null,\n    \"user\": \"me@example.com\"\n    \"groups\": [\n      \"one\",\n      \"two\"\n    ],\n    \"settings\": {\n        \"location\": {},\n        \"known_application\": {\n            \"opt_in\": true\n        },\n        \"quarantine\": false\n    }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Products_2"
  },
  {
    "type": "get",
    "url": "/v1/products/:productIdOrSlug/team",
    "title": "List team members",
    "name": "listUsersForProductOrOrg",
    "group": "Products_3",
    "description": "<p>List all team members that are part of a given product</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "teams.users:list"
      }
    ],
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/team?access_token=123abc\"",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/team?access_token=123abc\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "-",
            "description": "<p>An array of team members</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-._id",
            "description": "<p>ID of the team member</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "-.username",
            "description": "<p>Username of the team member</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/products/:productIdOrSlug/team",
          "content": "GET /v1/products/:productIdOrSlug/team\nHTTP/1.1 200 OK\n{\n\t \"ok\": true.\n\t \"team\": [\n       {\n\t\t\t\"_id\":\"9980222caf8bad191600019b\",\n\t\t\t\"username\":\"jeff@particle.io\"\n\t\t},\n       ...\n  ]\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Products_3"
  },
  {
    "type": "post",
    "url": "/v1/products/:productIdOrSlug/team",
    "title": "Invite team member",
    "name": "inviteUserToProductOrOrgTeam",
    "group": "Products_4",
    "description": "<p>Invite a new member to a product team. Invitee will receive an email with a link to accept the invitation and join the team.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "username",
            "description": "<p>Username of the invitee. Must be a valid email associated with an Particle user</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "teams.users:invite"
      }
    ],
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl \"https://api.particle.io/products/:productIdOrSlug/team\" \\\n       -d username=test@example.com \\\n       -d access_token=123abc",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-",
            "description": "<p>The invited user</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "POST /v1/products/:productIdOrSlug/team",
          "content": "POST /v1/products/:productIdOrSlug/team\nHTTP/1.1 200 OK\n{\n\t \"ok\": true,\n\t \"invited\": {\n\t\t\"username\": \"test@example.com\"\n  }\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Products_4"
  },
  {
    "type": "post",
    "url": "/v1/products/:productIdOrSlug/team",
    "title": "Create an API user",
    "name": "createProgrammaticUser",
    "group": "Products_5",
    "permission": [
      {
        "name": "teams.users:invite"
      }
    ],
    "description": "<p>Create an API user with specified scopes. This API user will have a single non-expiring access token.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "friendly_name",
            "description": "<p>A friendly name used to recognise the user</p>"
          },
          {
            "group": "Parameter",
            "type": "[String]",
            "optional": false,
            "field": "scopes",
            "description": "<p>List of scopes to grant for this user</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl \"https://api.particle.io/products/:productIdOrSlug/team?access_token=123abc\" \\\n       -H \"Content-Type: application/json\" \\\n       -d '{\n             \"friendly_name\": \"MyToken\",\n             \"scopes: [\"foo:bar\"]\n           }'",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "-",
            "description": "<p>The created API user</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "POST /v1/products/:productIdOrSlug/team",
          "content": "POST /v1/products/:productIdOrSlug/team\nHTTP/1.1 200 OK\n{\n\t \"ok\": true,\n\t \"created\": {\n\t\t\"username\": \"mytoken+sdfdsfdse34@api.particle.io\",\n     \"is_programmatic\": true,\n     \"tokens\": [\n       \"token\": \"abc123\"\n     ]\n  }\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Products_5"
  },
  {
    "type": "post",
    "url": "/v1/products/:productIdOrSlug/team/:username",
    "title": "Update team member",
    "name": "updateProductOrOrgTeamMember",
    "group": "Products_6",
    "description": "<p>Update a current team member.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "username",
            "description": "<p>Username of the team member to be updated</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "teams.users:update"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Access Token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Authorization-Example",
          "content": "Authorization: \"Bearer 01234567890ABCDEF\"",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Products_6"
  },
  {
    "type": "delete",
    "url": "/v1/products/:productIdOrSlug/team/:username",
    "title": "Remove team member",
    "name": "removeTeamMember",
    "group": "Products_7",
    "description": "<p>Remove a current team member.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "username",
            "description": "<p>Username of the team member to be removed</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "teams.users:remove"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Access Token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Authorization-Example",
          "content": "Authorization: \"Bearer 01234567890ABCDEF\"",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "DELETE /v1/products/photon/team/jeff@particle.io",
          "content": " DELETE /v1/products/photon/team/jeff@particle.io\n HTTP/1.1 200 OK\n {\n\t  \"ok\": true\n }",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Products_7"
  },
  {
    "type": "post",
    "url": "/v1/products/:productIdOrSlug/devices",
    "title": "Approve a quarantined device",
    "name": "approveQuarantinedDevice",
    "permission": [
      {
        "name": "devices:import"
      }
    ],
    "description": "<p>Approve a quarantined device. This will immediately release the device from quarantine and allow it to publish events, receive firmware updates, etc.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>ID of the device to be denied</p>"
          }
        ]
      }
    },
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Access Token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Authorization-Example",
          "content": "Authorization: \"Bearer 01234567890ABCDEF\"",
          "type": "json"
        }
      ]
    },
    "group": "Quarantine_1",
    "success": {
      "examples": [
        {
          "title": "POST /v1/products/photon/devices",
          "content": "POST /v1/products/photon/devices\n{ \"id\": \"123abc\" }\nHTTP/1.1 200 OK",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Quarantine_1"
  },
  {
    "type": "delete",
    "url": "/v1/products/:productIdOrSlug/devices/:deviceID",
    "title": "Deny a quarantined device",
    "name": "denyQuarantinedDevice",
    "permission": [
      {
        "name": "devices:remove"
      }
    ],
    "description": "<p>Deny a quarantined device</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or Slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceID",
            "description": "<p>ID of the device to be denied</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "allowedValues": [
              "true"
            ],
            "optional": false,
            "field": "deny",
            "description": "<p>Flag indicating you wish to deny this device, instead of removing an already approved device.</p>"
          }
        ]
      }
    },
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Access Token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Authorization-Example",
          "content": "Authorization: \"Bearer 01234567890ABCDEF\"",
          "type": "json"
        }
      ]
    },
    "group": "Quarantine_2",
    "success": {
      "examples": [
        {
          "title": "DELETE /v1/products/photon/devices/123abc",
          "content": "DELETE /v1/products/photon/devices/123abc\n{ deny: true }\nHTTP/1.1 204 NO CONTENT",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Quarantine_2"
  },
  {
    "type": "get",
    "url": "/v1/user/service_agreements",
    "title": "Get user service agreements",
    "name": "getServiceAgreements",
    "description": "<p>Get the service agreements related to a user</p>",
    "group": "ServiceAgreements_1",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Access Token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Authorization-Example",
          "content": "Authorization: \"Bearer 01234567890ABCDEF\"",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "GET /v1/orgs/particle/service_agreements",
          "content": " GET /v1/orgs/particle/service_agreements\n HTTP/1.1 200 OK\n{\n\t\"data\":[\n\t\t\t{\n\t\t\t\t\"id\":\"1\",\n\t\t\t\t\"type\":\"service_agreement\",\n\t\t\t\t\"attributes\":{\n\t\t\t\t\t\"owner_id\":\"abc123\",\n\t\t\t\t\t\"owner_type\":\"individual\",\n\t\t\t\t\t\"name\":\"Sandbox\",\n\t\t\t\t\t\"agreement_type\":\"developer\",\n\t\t\t\t\t\"duration\":\"monthly\",\n\t\t\t\t\t\"state\":\"active\",\n\t\t\t\t\t\"starts_on\":\"2021-04-08\",\n\t\t\t\t\t\"ends_on\":null,\n\t\t\t\t\t\"current_billing_period_start\":\"2021-04-08\",\n\t\t\t\t\t\"current_billing_period_end\":\"2021-05-07\",\n\t\t\t\t\t\"next_billing_period_start\":\"2021-05-08\",\n\t\t\t\t\t\"current_usage_summary\":{\n\t\t\t\t\t\t\"device_limit_reached\":false,\n\t\t\t\t\t\t\"connectivity\":{\n\t\t\t\t\t\t\t\"all\":{\n\t\t\t\t\t\t\t\t\"owned_devices\":0,\n\t\t\t\t\t\t\t\t\"billable_devices\":0,\n\t\t\t\t\t\t\t\t\"device_data\":0,\n\t\t\t\t\t\t\t\t\"device_messages\":0\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"wifi\":{\n\t\t\t\t\t\t\t\t\"owned_devices\":0,\n\t\t\t\t\t\t\t\t\"billable_devices\":0,\n\t\t\t\t\t\t\t\t\"device_data\":null,\n\t\t\t\t\t\t\t\t\"device_messages\":0\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"cellular\":{\n\t\t\t\t\t\t\t\t\"owned_devices\":0,\n\t\t\t\t\t\t\t\t\"billable_devices\":0,\n\t\t\t\t\t\t\t\t\"device_data\":0,\n\t\t\t\t\t\t\t\t\"device_messages\":0\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"asset_tracker\":{\n\t\t\t\t\t\t\t\t\"owned_devices\":0,\n\t\t\t\t\t\t\t\t\"billable_devices\":0,\n\t\t\t\t\t\t\t\t\"device_data\":0,\n\t\t\t\t\t\t\t\t\"device_messages\":0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"pricing_terms\":{\n\t\t\t\t\t\t\"rates\":{\n\t\t\t\t\t\t\t\"all_platforms\":{\n\t\t\t\t\t\t\t\t\"duration\":\"monthly\",\n\t\t\t\t\t\t\t\t\"per_block\":0\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"pricing_model_version\":\"tier2021.1\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"device\":{\n\t\t\t\t\t\t\t\"name\":\"commercial_model:developer:device\",\n\t\t\t\t\t\t\t\"duration\":\"monthly\",\n\t\t\t\t\t\t\t\"max_devices\":100\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"messaging\":{\n\t\t\t\t\t\t\t\"name\":\"commercial_model:developer:messaging\",\n\t\t\t\t\t\t\t\"duration\":\"monthly\",\n\t\t\t\t\t\t\t\"max_messages\":100000\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"device_data\":{\n\t\t\t\t\t\t\t\"uom\":\"bytes\",\n\t\t\t\t\t\t\t\"name\":\"commercial_model:developer:device_data\",\n\t\t\t\t\t\t\t\"duration\":\"monthly\",\n\t\t\t\t\t\t\t\"max_data\":45000000,\n\t\t\t\t\t\t\t\"device_data\":45000000,\n\t\t\t\t\t\t\t\"devices_cap\":45000000,\n\t\t\t\t\t\t\t\"cap_exception\":true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}",
          "type": "json"
        }
      ],
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Service agreement Unique ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "type",
            "description": "<p>Object type</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes",
            "description": "<p>Service agreement attributes</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.owner_id",
            "description": "<p>Service agreement owner</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.agreement_type",
            "description": "<p>Service agreement type</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.duration",
            "description": "<p>Billing period duration</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.state",
            "description": "<p>Indicates if the service agreement is active</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.starts_on",
            "description": "<p>Date when the service agreement started</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.ends_on",
            "description": "<p>service Agreements ends date</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.current_billing_period_start",
            "description": "<p>Current billing period start date</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.current_usage_summary",
            "description": "<p>Usage summary for the period</p>"
          },
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "attributes.current_usage_summary.device_limit_reached",
            "description": "<p>Indicates if the device limit was reached</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.current_usage_summary.connectivity",
            "description": "<p>Info about the connectivity devices grouped by device type</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.pricing_terms",
            "description": "<p>All related with the selected pricing model</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.pricing_terms.rates",
            "description": "<p>Rates limits and consumption period</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.pricing_terms.device",
            "description": "<p>Device limits and consumption period</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.pricing_terms.messaging",
            "description": "<p>Message limits and consumption period</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.pricing_terms.device_data",
            "description": "<p>Device data limits and consumption period</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/serviceAgreement.js",
    "groupTitle": "ServiceAgreements_1"
  },
  {
    "type": "get",
    "url": "/v1/orgs/:orgIdOrSlug/service_agreements",
    "title": "Get organization service agreements",
    "name": "getServiceAgreementsForOrganization",
    "description": "<p>Get the service agreements related to an organization</p>",
    "group": "ServiceAgreements_2",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "orgIdOrSlug",
            "description": "<p>Org ID or Slug</p>"
          }
        ]
      }
    },
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Access Token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Authorization-Example",
          "content": "Authorization: \"Bearer 01234567890ABCDEF\"",
          "type": "json"
        }
      ]
    },
    "permission": [
      {
        "name": "service_agreements:list"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "GET /v1/orgs/particle/service_agreements",
          "content": " GET /v1/orgs/particle/service_agreements\n HTTP/1.1 200 OK\n {\n\t\t\"data\":[{\n\t\t\t\"id\":\"1\",\n\t\t\t\"type\":\"service_agreement\",\n\t\t\t\"attributes\":{\n\t\t\t\t\"owner_id\":\"abc123\",\n\t\t\t\t\"owner_type\":\"organization\",\n\t\t\t\t\"name\":\"Enterprise Plan\",\n\t\t\t\t\"agreement_type\":\"enterprise\",\n\t\t\t\t\"duration\":\"annual\",\n\t\t\t\t\"state\":\"active\",\n\t\t\t\t\"starts_on\":\"2021-01-01\",\n\t\t\t\t\"ends_on\":\"2026-01-01\",\n\t\t\t\t\"current_billing_period_start\":\"2021-01-01\",\n\t\t\t\t\"current_billing_period_end\":\"2021-12-31\",\n\t\t\t\t\"next_billing_period_start\":\"2022-01-01\",\n\t\t\t\t\"current_usage_summary\":{\n\t\t\t\t\t\"device_limit_reached\":false,\n\t\t\t\t\t\"connectivity\":{\n\t\t\t\t\t\t\"all\":{\n\t\t\t\t\t\t\t\"owned_devices\":1,\n\t\t\t\t\t\t\t\"billable_devices\":1,\n\t\t\t\t\t\t\t\"device_data\":56789012,\n\t\t\t\t\t\t\t\"device_messages\":1234567\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"wifi\":{\n\t\t\t\t\t\t\t\"owned_devices\":1,\n\t\t\t\t\t\t\t\"billable_devices\":1,\n\t\t\t\t\t\t\t\"device_data\":null,\n\t\t\t\t\t\t\t\"device_messages\":123456\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"cellular\":{\n\t\t\t\t\t\t\t\"owned_devices\":1,\n\t\t\t\t\t\t\t\"billable_devices\":1,\n\t\t\t\t\t\t\t\"device_data\":12345,\n\t\t\t\t\t\t\t\"device_messages\":123456\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"asset_tracker\":{\n\t\t\t\t\t\t\t\"owned_devices\":1,\n\t\t\t\t\t\t\t\"billable_devices\":1,\n\t\t\t\t\t\t\t\"device_data\":12345678,\n\t\t\t\t\t\t\t\"device_messages\":123456\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"pricing_terms\":{\n\t\t\t\t\t\"device_data\":{\n\t\t\t\t\t\t\"uom\":\"bytes\",\n\t\t\t\t\t\t\"name\":\"commercial_model:enterprise:device_data\",\n\t\t\t\t\t\t\"cellular\":{\n\t\t\t\t\t\t\t\"max_data\":12000000000\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"duration\":\"annual\",\n\t\t\t\t\t\t\"asset_tracker\":{\n\t\t\t\t\t\t\t\"max_data\":12000000000\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"rates\":{\n\t\t\t\t\t\t\"wifi\":{\n\t\t\t\t\t\t\t\"tier\":0,\n\t\t\t\t\t\t\t\"duration\":\"annual\",\n\t\t\t\t\t\t\t\"list_price\":1234\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"cellular\":{\n\t\t\t\t\t\t\t\"tier\":3,\n\t\t\t\t\t\t\t\"duration\":\"annual\",\n\t\t\t\t\t\t\t\"list_price\":1234\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"asset_tracker\":{\n\t\t\t\t\t\t\t\"tier\":3,\n\t\t\t\t\t\t\t\"duration\":\"annual\",\n\t\t\t\t\t\t\t\"list_price\":123456\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"pricing_model_version\":\"tier2021.1\"\n\t\t\t\t\t},\n\t\t\t\t\t\"messaging\":{\n\t\t\t\t\t\t\"name\":\"commercial_model:enterprise:messaging\",\n\t\t\t\t\t\t\"wifi\":{\n\t\t\t\t\t\t\t\"max_messages\":46800000\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"cellular\":{\n\t\t\t\t\t\t\t\"max_messages\":182400000\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"duration\":\"annual\",\n\t\t\t\t\t\t\"asset_tracker\":{\n\t\t\t\t\t\t\t\"max_messages\":237120000\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"device\":{\n\t\t\t\t\t\t\"name\":\"commercial_model:enterprise:device\",\n\t\t\t\t\t\t\"wifi\":{\n\t\t\t\t\t\t\t\"max_devices\":1500\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"cellular\":{\n\t\t\t\t\t\t\t\"max_devices\":1810\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"duration\":\"monthly\",\n\t\t\t\t\t\t\"asset_tracker\":{\n\t\t\t\t\t\t\t\"max_devices\":1810\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"support\":{\n\t\t\t\t\t\t\"account_rep\":\"support@example.com\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Service agreement Unique ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "type",
            "description": "<p>Object type</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes",
            "description": "<p>Service agreement attributes</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.owner_id",
            "description": "<p>Service agreement owner</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.agreement_type",
            "description": "<p>Service agreement type</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.duration",
            "description": "<p>Billing period duration</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.state",
            "description": "<p>Indicates if the service agreement is active</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.starts_on",
            "description": "<p>Date when the service agreement started</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.ends_on",
            "description": "<p>service Agreements ends date</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.current_billing_period_start",
            "description": "<p>Current billing period start date</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.current_usage_summary",
            "description": "<p>Usage summary for the period</p>"
          },
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "attributes.current_usage_summary.device_limit_reached",
            "description": "<p>Indicates if the device limit was reached</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.current_usage_summary.connectivity",
            "description": "<p>Info about the connectivity devices grouped by device type</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.pricing_terms",
            "description": "<p>All related with the selected pricing model</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.pricing_terms.rates",
            "description": "<p>Rates limits and consumption period</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.pricing_terms.device",
            "description": "<p>Device limits and consumption period</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.pricing_terms.messaging",
            "description": "<p>Message limits and consumption period</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.pricing_terms.device_data",
            "description": "<p>Device data limits and consumption period</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.pricing_terms.support",
            "description": "<p>Email address for enterprise support</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "ServiceAgreements_2"
  },
  {
    "type": "get",
    "url": "/v1/user/usage_reports/:usageReportId",
    "title": "Get a User Usage Report",
    "name": "getUserUsageReport",
    "description": "<p>Get a single usage report related to the user. Expect &quot;download_url&quot; to be present only when the usage report has an &quot;available&quot; state.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Integer",
            "optional": false,
            "field": "usageReportId",
            "description": "<p>The usage report ID</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example Request",
        "content": "$ curl \"https://api.particle.io/v1/user/usage_reports/:userReportId\" \\\n       -H \"Authorization: Bearer <access_token>\"",
        "type": "bash"
      }
    ],
    "group": "ServiceAgreements_3",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Access Token</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "GET /v1/user/usage_reports/:usageReportId",
          "content": " GET /v1/user/usage_reports/:usageReportId\n HTTP/1.1 200 OK\n{\n\"data\": {\n  \"id\": \"1\",\n  \"type\": \"usage_report\",\n  \"attributes\": {\n    \"state\": \"pending\",\n    \"service_agreement_id\": 1,\n    \"date_period_start\": \"2022-01-01\",\n    \"date_period_end\": \"2022-02-01\",\n    \"created_at\": \"2022-01-18 13:43:23 -0800\",\n    \"expires_at\": null,\n    \"report_type\": \"devices\",\n    \"report_params\": {\n      \"devices\": [\n        \"device1\",\n        \"device2\"\n      ],\n      \"products\": [],\n      \"recipient_list\": [\n        \"your@email.com\"\n      ]\n    },\n    \"download_url\": null\n  }\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Usage Report Unique ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "type",
            "description": "<p>Object type</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes",
            "description": "<p>Usage Report attributes</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.state",
            "description": "<p>Usage Report current state</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.service_agreement_id",
            "description": "<p>Service Agreement Unique ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.date_period_start",
            "description": "<p>The start of the date period to query</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.date_period_end",
            "description": "<p>The end of the date period to query</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.created_at",
            "description": "<p>UTC timestamp of when the Usage Report request was created</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.expires_at",
            "description": "<p>UTC timestamp of when the Usage Report file expires</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.report_type",
            "description": "<p>Usage Report type</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.report_params",
            "description": "<p>Usage Report parameters</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "attributes.report_params.devices",
            "description": "<p>List of Device Unique IDs</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "attributes.report_params.products",
            "description": "<p>List of Product Unique IDs</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "attributes.report_params.recipient_list",
            "description": "<p>List of emails to send the report via email</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.download_url",
            "description": "<p>Usage Report file expirable download URL</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/usageReport.js",
    "groupTitle": "ServiceAgreements_3"
  },
  {
    "type": "get",
    "url": "/v1/orgs/:orgSlugOrId/usage_reports/:usageReportId",
    "title": "Get an Org Usage Report",
    "name": "getOrgUsageReport",
    "description": "<p>Get a single usage report related to an organization. Expect &quot;download_url&quot; to be present only when the usage report has an &quot;available&quot; state.</p> <p>The user must be an active member of the organization.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Integer",
            "optional": false,
            "field": "usageReportId",
            "description": "<p>The usage report ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "orgSlugOrId",
            "description": "<p>Organization Slug or ID</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "service_agreements.usage_reports:get"
      }
    ],
    "examples": [
      {
        "title": "Example Request",
        "content": "$ curl \"https://api.particle.io/v1/orgs/:orgSlugOrId/usage_reports/:usageReportId\" \\\n       -H \"Authorization: Bearer <access_token>\"",
        "type": "bash"
      }
    ],
    "group": "ServiceAgreements_4",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Access Token</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "GET /v1/org/:orgSlugOrId/usage_reports/:usageReportId",
          "content": " GET /v1/org/:orgSlugOrId/usage_reports/:usageReportId\n HTTP/1.1 200 OK\n{\n\"data\": {\n  \"id\": \"1\",\n  \"type\": \"usage_report\",\n  \"attributes\": {\n    \"state\": \"pending\",\n    \"service_agreement_id\": 1,\n    \"date_period_start\": \"2022-01-01\",\n    \"date_period_end\": \"2022-02-01\",\n    \"created_at\": \"2022-01-18 13:43:23 -0800\",\n    \"expires_at\": null,\n    \"report_type\": \"devices\",\n    \"report_params\": {\n      \"devices\": [\n        \"device1\",\n        \"device2\"\n      ],\n      \"products\": [],\n      \"recipient_list\": [\n        \"your@email.com\"\n      ]\n    },\n    \"download_url\": null\n  }\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Usage Report Unique ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "type",
            "description": "<p>Object type</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes",
            "description": "<p>Usage Report attributes</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.state",
            "description": "<p>Usage Report current state</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.service_agreement_id",
            "description": "<p>Service Agreement Unique ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.date_period_start",
            "description": "<p>The start of the date period to query</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.date_period_end",
            "description": "<p>The end of the date period to query</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.created_at",
            "description": "<p>UTC timestamp of when the Usage Report request was created</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.expires_at",
            "description": "<p>UTC timestamp of when the Usage Report file expires</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.report_type",
            "description": "<p>Usage Report type</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.report_params",
            "description": "<p>Usage Report parameters</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "attributes.report_params.devices",
            "description": "<p>List of Device Unique IDs</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "attributes.report_params.products",
            "description": "<p>List of Product Unique IDs</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "attributes.report_params.recipient_list",
            "description": "<p>List of emails to send the report via email</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.download_url",
            "description": "<p>Usage Report file expirable download URL</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/usageReport.js",
    "groupTitle": "ServiceAgreements_4"
  },
  {
    "type": "post",
    "url": "/v1/user/service_agreements/:serviceAgreementId/usage_reports",
    "title": "Create a User Usage Report",
    "name": "createUserUsageReport",
    "description": "<p>Request a new usage report related to the user service agreement.</p> <p>The usage report will be processed asynchronously. Expect its &quot;state&quot; to change throughout time.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "orgSlugOrId",
            "description": "<p>Organization Slug or ID</p>"
          },
          {
            "group": "Parameter",
            "type": "Integer",
            "optional": false,
            "field": "service_agreement_id",
            "description": "<p>Service Agreement ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "report_type",
            "description": "<p>One of the supported report types, &quot;devices&quot; or &quot;products&quot;</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "date_period_start",
            "description": "<p>The start of the date period to query</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "date_period_end",
            "description": "<p>The end of the date period to query</p>"
          },
          {
            "group": "Parameter",
            "type": "String[]",
            "optional": true,
            "field": "devices",
            "description": "<p>An optional array of Device IDs</p>"
          },
          {
            "group": "Parameter",
            "type": "String[]",
            "optional": true,
            "field": "products",
            "description": "<p>An optional array of Product IDs</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "service_agreements.usage_reports:create"
      }
    ],
    "examples": [
      {
        "title": "Example Request",
        "content": "$ curl -X POST \"https://api.particle.io/v1/user/service_agreements/:serviceAgreementId/usage_reports\" \\\n       -H \"Authorization: Bearer <access_token>\" \\\n       -H \"Content-Type: application/json\" \\\n       -d '{\n         \"report_type\": \"devices\",\n         \"date_period_start\": \"2022-01-01\",\n         \"date_period_end\": \"2022-01-31\",\n         \"devices\": [\"device1\", \"device2\"]\n       }'",
        "type": "bash"
      }
    ],
    "group": "ServiceAgreements_5",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Access Token</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "POST /v1/user/service_agreements/:serviceAgreementId/usage_reports/",
          "content": " POST /v1/user/service_agreements/:serviceAgreementId/usage_reports/\n HTTP/1.1 202 OK\n{\n\"data\": {\n  \"id\": \"1\",\n  \"type\": \"usage_report\",\n  \"attributes\": {\n    \"state\": \"pending\",\n    \"service_agreement_id\": 1,\n    \"date_period_start\": \"2022-01-01\",\n    \"date_period_end\": \"2022-01-31\",\n    \"created_at\": \"2022-01-18 13:43:23 -0800\",\n    \"expires_at\": null,\n    \"report_type\": \"devices\",\n    \"report_params\": {\n      \"devices\": [\n        \"device1\",\n        \"device2\"\n      ],\n      \"products\": [],\n      \"recipient_list\": [\n        \"your@email.com\"\n      ]\n    },\n    \"download_url\": null\n  }\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Usage Report Unique ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "type",
            "description": "<p>Object type</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes",
            "description": "<p>Usage Report attributes</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.state",
            "description": "<p>Usage Report current state</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.service_agreement_id",
            "description": "<p>Service Agreement Unique ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.date_period_start",
            "description": "<p>The start of the date period to query</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.date_period_end",
            "description": "<p>The end of the date period to query</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.created_at",
            "description": "<p>UTC timestamp of when the Usage Report request was created</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.expires_at",
            "description": "<p>UTC timestamp of when the Usage Report file expires</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.report_type",
            "description": "<p>Usage Report type</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.report_params",
            "description": "<p>Usage Report parameters</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "attributes.report_params.devices",
            "description": "<p>List of Device Unique IDs</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "attributes.report_params.products",
            "description": "<p>List of Product Unique IDs</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "attributes.report_params.recipient_list",
            "description": "<p>List of emails to send the report via email</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.download_url",
            "description": "<p>Usage Report file expirable download URL</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/usageReport.js",
    "groupTitle": "ServiceAgreements_5"
  },
  {
    "type": "post",
    "url": "/v1/orgs/:orgSlugOrId/service_agreements/:serviceAgreementId/usage_reports",
    "title": "Create an Org Usage Report",
    "name": "createOrgUsageReport",
    "description": "<p>Request a new usage report related to the organization service agreement.</p> <p>The usage report will be processed asynchronously. Expect its &quot;state&quot; to change throughout time.</p> <p>The user must be an active member of the organization.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "orgSlugOrId",
            "description": "<p>Organization Slug or ID</p>"
          },
          {
            "group": "Parameter",
            "type": "Integer",
            "optional": false,
            "field": "service_agreement_id",
            "description": "<p>Service Agreement ID</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "report_type",
            "description": "<p>One of the supported report types, &quot;devices&quot; or &quot;products&quot;</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "date_period_start",
            "description": "<p>The start of the date period to query</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "date_period_end",
            "description": "<p>The end of the date period to query</p>"
          },
          {
            "group": "Parameter",
            "type": "String[]",
            "optional": true,
            "field": "devices",
            "description": "<p>An optional array of Device IDs</p>"
          },
          {
            "group": "Parameter",
            "type": "String[]",
            "optional": true,
            "field": "products",
            "description": "<p>An optional array of Product IDs</p>"
          }
        ]
      }
    },
    "group": "ServiceAgreements_6",
    "examples": [
      {
        "title": "Example Request",
        "content": "$ curl -X POST \"https://api.particle.io/v1/orgs/:orgSlugOrId/service_agreements/:serviceAgreementId/usage_reports\" \\\n       -H \"Authorization: Bearer <access_token>\" \\\n       -H \"Content-Type: application/json\" \\\n       -d '{\n         \"report_type\": \"devices\",\n         \"date_period_start\": \"2022-01-01\",\n         \"date_period_end\": \"2022-01-31\",\n         \"devices\": [\"device1\", \"device2\"]\n       }'",
        "type": "bash"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Access Token</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "POST /v1/orgs/:orgSlugOrId/service_agreements/:serviceAgreementId/usage_reports/",
          "content": " POST /v1/orgs/:orgSlugOrId/service_agreements/:serviceAgreementId/usage_reports/\n HTTP/1.1 202 OK\n{\n\"data\": {\n  \"id\": \"1\",\n  \"type\": \"usage_report\",\n  \"attributes\": {\n    \"state\": \"pending\",\n    \"service_agreement_id\": 1,\n    \"date_period_start\": \"2022-01-01\",\n    \"date_period_end\": \"2022-01-31\",\n    \"created_at\": \"2022-01-18 13:43:23 -0800\",\n    \"expires_at\": null,\n    \"report_type\": \"devices\",\n    \"report_params\": {\n      \"devices\": [\n        \"device1\",\n        \"device2\"\n      ],\n      \"products\": [],\n      \"recipient_list\": [\n        \"your@email.com\"\n      ]\n    },\n    \"download_url\": null\n  }\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Usage Report Unique ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "type",
            "description": "<p>Object type</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes",
            "description": "<p>Usage Report attributes</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.state",
            "description": "<p>Usage Report current state</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.service_agreement_id",
            "description": "<p>Service Agreement Unique ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.date_period_start",
            "description": "<p>The start of the date period to query</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.date_period_end",
            "description": "<p>The end of the date period to query</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.created_at",
            "description": "<p>UTC timestamp of when the Usage Report request was created</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.expires_at",
            "description": "<p>UTC timestamp of when the Usage Report file expires</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.report_type",
            "description": "<p>Usage Report type</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.report_params",
            "description": "<p>Usage Report parameters</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "attributes.report_params.devices",
            "description": "<p>List of Device Unique IDs</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "attributes.report_params.products",
            "description": "<p>List of Product Unique IDs</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "attributes.report_params.recipient_list",
            "description": "<p>List of emails to send the report via email</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.download_url",
            "description": "<p>Usage Report file expirable download URL</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/usageReport.js",
    "groupTitle": "ServiceAgreements_6"
  },
  {
    "type": "get",
    "url": "/v1/user/service_agreements/:serviceAgreementId/notifications",
    "title": "Get notifications for current usage period",
    "name": "GetServiceAgreementNotifications",
    "description": "<p>Get user notifications related to a specific service agreement</p> <ul> <li>Usage reached a certain threshold (70%, 90%, 100%)</li> <li>Service was paused</li> <li>Service was unpaused</li> </ul>",
    "group": "ServiceAgreements_7",
    "permission": [
      {
        "name": "service_agreements.notifications:list"
      }
    ],
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Access Token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Authorization-Example",
          "content": "Authorization: \"Bearer 555551111AWESOME\"",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/user/service_agreements/:serviceAgreementId/notifications?access_token=123abc\"",
        "content": "$ curl \"https://api.particle.io/v1/user/service_agreements/:serviceAgreementId/notifications?access_token=123abc\"",
        "type": "bash"
      },
      {
        "title": "List notifications associated with an organization",
        "content": "$ curl \"https://api.particle.io/v1/organizations/service_agreements/:serviceAgreementId/notifications?access_token=123abc\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Notification Unique ID</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "type",
            "description": "<p>Object type</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.",
            "description": "<p>Notification attributes</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.state",
            "description": "<p>indicates the state of the notification</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.event_name",
            "description": "<p>Notification event name</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.time_period",
            "description": "<p>Notification time period</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.created_at",
            "description": "<p>Notification created datetime</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.updated_at",
            "description": "<p>Notification updated datetime</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.resource_id",
            "description": "<p>Service agreement Id</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "attributes.resource_type",
            "description": "<p>Notification resource type</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "attributes.details",
            "description": "<p>Notification details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/user/service_agreements/1234/notifications",
          "content": "GET /v1/user/service_agreements/1234/notifications\n HTTP/1.1 200 OK\n{\n\"data\":[\n{\n\t\t\"id\": \"fff25e4e-7457-4c3c-8f6e-c9d6dfc01110\",\n\t\t\"type\": \"notification\",\n\t\t\"attributes\": {\n\t\t\t\t\"state\": \"completed\",\n\t\t\t\t\"event_name\": \"developer:usage_activity:automatic_unpause\",\n\t\t\t\t\"time_period\": \"2022-01-22\",\n\t\t\t\t\"created_at\": \"2022-01-22 00:01:00 -0800\",\n\t\t\t\t\"resource_id\": \"59\",\n\t\t\t\t\"resource_type\": \"ServiceAgreement\",\n\t\t\t\t\"details\": {\n\t\t\t\t\t\t\t\"event_type\": \"automatic_unpause\",\n\t\t\t\t\t\t\t\"hierarchy_info\": {\n\t\t\t\t\t\t\t\t\t\"name\": \"automatic_unpause\",\n\t\t\t\t\t\t\t\t\t\"priority\": 7\n\t\t\t\t\t\t\t},\n\t\t\t\t\"device_pause_date\": \"2022-01-22T00:01:00.567-08:00\",\n\t\t\t\t\"next_billing_period_start\": \"2022-02-22\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n\t}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/serviceAgreement.js",
    "groupTitle": "ServiceAgreements_7"
  },
  {
    "type": "put",
    "url": "/v1/sims/:iccid",
    "title": "Update SIM data limit (deprecated)",
    "group": "Sims_10",
    "description": "<p>This API has been deprecated as there is no per-SIM data limit at this time.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "optional": false,
            "field": "iccid",
            "description": "<p>The ICCID of the SIM to update</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "mb_limit",
            "description": "<p>A number representing the desired data limit in megabytes for the SIM card. Data limits can be anywhere between 1-500 MBs</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em></p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl -X PUT https://api.particle.io/v1/sims/1234 \\\n       -d mb_limit=100 \\\n       -d access_token=1234",
        "type": "bash"
      },
      {
        "title": "Set product SIM data limit",
        "content": "$ curl -X PUT https://api.particle.io/v1/products/:productIdOrSlug/sims/1234 \\\n       -d mb_limit=100 \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "PUT /v1/sims/12345",
          "content": "PUT /v1/sims/12345\nHTTP/1.1 200 OK",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Sims_10",
    "name": "PutV1SimsIccid"
  },
  {
    "type": "delete",
    "url": "/v1/sims/:iccid",
    "title": "Release SIM from account",
    "name": "releaseSimFromAccount",
    "group": "Sims_11",
    "permission": [
      {
        "name": "sims:remove"
      }
    ],
    "description": "<p>Remove a SIM card from an account, disassociating the SIM card from a user or a product. The SIM will also be deactivated.</p> <p>Once the SIM card has been released, it can be claimed by a different user, or imported into a different product.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "iccid",
            "description": "<p>The ICCID of the desired SIM</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em></p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Release ownership of a SIM you own",
        "content": "$ curl -X DELETE https://api.particle.io/v1/sims/1234 \\\n       -d access_token=1234",
        "type": "bash"
      },
      {
        "title": "Release ownership of a SIM in a product",
        "content": "$ curl -X DELETE https://api.particle.io/v1/products/:productIdOrSlug/sims/1234 \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "DELETE /v1/sims/1234",
          "content": "DELETE /v1/sims/1234\nHTTP/1.1 204 No Content",
          "type": "json"
        },
        {
          "title": "Release pending",
          "content": "DELETE /v1/sims/1234\nHTTP/1.1 202 Accepted",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Sims_11"
  },
  {
    "type": "get",
    "url": "/v1/sims",
    "title": "List SIM cards",
    "name": "listSims",
    "group": "Sims_1",
    "permission": [
      {
        "name": "sims:list"
      }
    ],
    "description": "<p>Get a list of the SIM cards owned by an individual or a product. The product endpoint is paginated, by default returns 25 SIM card records per page.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "iccid",
            "description": "<p>Filter results to SIMs with this ICCID (partial matching)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "deviceId",
            "description": "<p>Filter results to SIMs with this associated device ID (partial matching)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "deviceName",
            "description": "<p>Filter results to SIMs with this associated device name (partial matching)</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": true,
            "field": "page",
            "defaultValue": "1",
            "description": "<p>Current page of results</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": true,
            "field": "perPage",
            "defaultValue": "25",
            "description": "<p>Records per page</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em></p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "List SIM cards for a user",
        "content": "$ curl \"https://api.particle.io/v1/sims?access_token=12345\"",
        "type": "bash"
      },
      {
        "title": "List SIM cards for a product",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/sims?access_token=12345\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "sims",
            "description": "<p>An array of SIM card objects</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sims._id",
            "description": "<p>ICCID of the SIM</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "sims.activations_count",
            "description": "<p>Number of times the SIM has been activated</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sims.base_country_code",
            "description": "<p>The ISO Alpha-2 code of the country where the SIM card is based</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "sims.base_monthly_rate",
            "description": "<p>The monthly rate of the 1 MB data plan for this SIM card, in cents</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "sims.deactivations_count",
            "description": "<p>Number of times the SIM has been deactivated</p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "sims.first_activated_on",
            "description": "<p>Timestamp of the first activation date of the SIM card</p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "sims.last_activated_on",
            "description": "<p>Timestamp of the last activation date of the SIM card</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sims.last_activated_via",
            "description": "<p>The method used to activate the SIM card. <em>Internal use only, will be deprecated</em></p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sims.last_status_change_action",
            "description": "<p>The last state change of the SIM card</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sims.last_status_change_action_error",
            "description": "<p>Whether the last action change resulted in an error. Set to &quot;yes&quot; or &quot;no&quot;</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "sims.mb_limit",
            "description": "<p>The monthly data usage limit of the SIM card, in megabytes</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sims.msisdn",
            "description": "<p>MSISDN number of the Ublox modem</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "sims.overage_monthly_rate",
            "description": "<p>The per-MB overage rate for this SIM card, in cents</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sims.status",
            "description": "<p>The current connectivity status of the SIM card</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sims.stripe_plan_slug",
            "description": "<p>Data plan type. <em>Internal use only, will be deprecated</em></p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "sims.updated_at",
            "description": "<p>Timestamp representing the last time the SIM was updated</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sims.user_id",
            "description": "<p>The ID of the user who owns the SIM card</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sims.product_id",
            "description": "<p>The ID of the product who owns the SIM card</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sims.carrier",
            "description": "<p>The Telefony provider for the SIM card's connectivity</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sims.last_device_id",
            "description": "<p>The device ID of the SIM card's last associated device</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sims.last_device_name",
            "description": "<p>The device name of the SIM card's last associated device</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "meta",
            "description": "<p>An object containing the total number of pages of records <em>Product endpoint only</em></p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/sims",
          "content": "GET /v1/sims\nHTTP/1.1 200 OK\n{\n\t\"sims\": [\n\t \t{\n\n\t\t\t\"_id\":\"8934076500002589174\",\n\t\t\t\"activations_count\":1,\n\t\t\t\"base_country_code\":\"US\",\n\t\t\t\"base_monthly_rate\":299,\n\t\t\t\"deactivations_count\":0,\n\t\t\t\"first_activated_on\":\"2017-01-27T23:10:16.994Z\",\n\t\t\t\"last_activated_on\":\"2017-01-27T23:10:16.994Z\",\n\t\t\t\"last_activated_via\":\"user_setup\",\n\t\t\t\"last_status_change_action\":\"activate\",\n\t\t\t\"last_status_change_action_error\":\"no\",\n\t\t\t\"mb_limit\":5,\n\t\t\t\"msisdn\":\"345901000485300\",\n\t\t\t\"overage_monthly_rate\":99,\n\t\t\t\"status\":\"active\",\n\t\t\t\"stripe_plan_slug\":\"KickstarterElectronPlan\",\n\t\t\t\"updated_at\":\"2017-01-27T23:10:22.622Z\",\n\t\t\t\"user_id\":\"5580999caf8bad191600019b\",\n\t\t\t\"carrier\":\"telefonica\",\n\t\t\t\"last_device_id\":\"123abc\",\n\t\t\t\"last_device_name\":\"foo_bar_baz\"\n\t\t},\n\t\t...\n\t]\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Sims_1"
  },
  {
    "type": "get",
    "url": "/v1/sims/:iccid",
    "title": "Get SIM information",
    "name": "listSim",
    "group": "Sims_2",
    "permission": [
      {
        "name": "sims:get"
      }
    ],
    "description": "<p>Retrieve a SIM card owned by an individual or a product.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "iccid",
            "description": "<p>Filter results to SIMs with this ICCID (partial matching) <em>Product endpoint only</em></p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em></p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Retrieve info on a single SIM card owned by a user",
        "content": "$ curl \"https://api.particle.io/v1/sims?access_token=12345\"",
        "type": "bash"
      },
      {
        "title": "Retrieve info on a single SIM card that belongs to a product",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/sims?access_token=12345\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "sim",
            "description": "<p>The SIM card data object</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sim._id",
            "description": "<p>ICCID of the SIM</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "sim.activations_count",
            "description": "<p>Number of times the SIM has been activated</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sim.base_country_code",
            "description": "<p>The ISO Alpha-2 code of the country where the SIM card is based</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "sim.base_monthly_rate",
            "description": "<p>The monthly rate of the 1 MB data plan for this SIM card, in cents</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "sim.deactivations_count",
            "description": "<p>Number of times the SIM has been deactivated</p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "sim.first_activated_on",
            "description": "<p>Timestamp of the first activation date of the SIM card</p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "sim.last_activated_on",
            "description": "<p>Timestamp of the last activation date of the SIM card</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sim.last_activated_via",
            "description": "<p>The method used to activate the SIM card. <em>Internal use only, will be deprecated</em></p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sim.last_status_change_action",
            "description": "<p>The last state change of the SIM card</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sim.last_status_change_action_error",
            "description": "<p>Whether the last action change resulted in an error. Set to &quot;yes&quot; or &quot;no&quot;</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "sim.mb_limit",
            "description": "<p>The monthly data usage limit of the SIM card, in megabytes</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sim.msisdn",
            "description": "<p>MSISDN number of the Ublox modem</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "sim.overage_monthly_rate",
            "description": "<p>The per-MB overage rate for this SIM card, in cents</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sim.status",
            "description": "<p>The current connectivity status of the SIM card</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sim.stripe_plan_slug",
            "description": "<p>Data plan type. <em>Internal use only, will be deprecated</em></p>"
          },
          {
            "group": "Success 200",
            "type": "Date",
            "optional": false,
            "field": "sim.updated_at",
            "description": "<p>Timestamp representing the last time the SIM was updated</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sim.user_id",
            "description": "<p>The ID of the user who owns the SIM card</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sim.product_id",
            "description": "<p>The ID of the product who owns the SIM card</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sim.carrier",
            "description": "<p>The Telefony provider for the SIM card's connectivity</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sim.last_device_id",
            "description": "<p>The device ID of the SIM card's last associated device</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sim.last_device_name",
            "description": "<p>The device name of the SIM card's last associated device</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "sim.owner",
            "description": "<p>Particle username for the user who claimed this SIM card</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/sims/8934076500002589174",
          "content": "GET /v1/sims/8934076500002589174\nHTTP/1.1 200 OK\n{\n  {\n    \"_id\":\"8934076500002589174\",\n    \"activations_count\":1,\n    \"base_country_code\":\"US\",\n    \"base_monthly_rate\":299,\n    \"deactivations_count\":0,\n    \"first_activated_on\":\"2017-01-27T23:10:16.994Z\",\n    \"last_activated_on\":\"2017-01-27T23:10:16.994Z\",\n    \"last_activated_via\":\"user_setup\",\n    \"last_status_change_action\":\"activate\",\n    \"last_status_change_action_error\":\"no\",\n    \"mb_limit\":5,\n    \"msisdn\":\"345901000485300\",\n    \"overage_monthly_rate\":99,\n    \"status\":\"active\",\n    \"stripe_plan_slug\":\"KickstarterElectronPlan\",\n    \"updated_at\":\"2017-01-27T23:10:22.622Z\",\n    \"user_id\":\"5580999caf8bad191600019b\",\n    \"carrier\":\"telefonica\",\n    \"last_device_id\":\"123abc\",\n    \"last_device_name\":\"foo_bar_baz\",\n    \"owner\": \"someone@particle.io\"\n  }\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Sims_2"
  },
  {
    "type": "get",
    "url": "/v1/sims/:iccid/data_usage",
    "title": "Get data usage",
    "name": "simDataUsage",
    "group": "Sims_3",
    "description": "<p>Get SIM card data usage for the current billing period, broken out by day. Note that date usage reports can be delayed by up to 1 hour.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "iccid",
            "description": "<p>The ICCID of the desired SIM</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em></p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Data usage for a SIM you own",
        "content": "$ curl \"https://api.particle.io/v1/sims/1234/data_usage?access_token=1234\"",
        "type": "bash"
      },
      {
        "title": "Data usage for a SIM in a product",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/sims/1234/data_usage?access_token=1234\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "iccid",
            "description": "<p>ICCID of the SIM</p>"
          },
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "usage_by_day",
            "description": "<p>An array of data usage by day</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "usage_by_day.date",
            "description": "<p>The date of the usage day</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "usage_by_day.mbs_used",
            "description": "<p>Megabytes used in the usage day</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "usage_by_day.mbs_used_cumulative",
            "description": "<p>Total megabytes used in the billing period, inclusive of this usage day</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/sims/:iccid/data_usage",
          "content": "GET /v1/sims/:iccid/data_usage\nHTTP/1.1 200 OK\n{\n\t\"iccid\":\"8934076500002589174\",\n\t\"usage_by_day\": [\n\t\t{\n\t\t\t\"date\":\"2017-02-24\",\n\t\t\t\"mbs_used\":0.98,\n\t\t\t\"mbs_used_cumulative\":0.98\n\t\t},\n\t\t{\n\t\t\t\"date\":\"2017-02-25\",\n\t\t\t\"mbs_used\":0.50,\n\t\t\t\"mbs_used_cumulative\":1.48\n\t\t},\n\t\t...\n\t]\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Sims_3"
  },
  {
    "type": "get",
    "url": "/v1/products/:productIdOrSlug/sims/data_usage",
    "title": "Get data usage for product fleet",
    "name": "simFleetDataUsage",
    "group": "Sims_4",
    "permission": [
      {
        "name": "sims.usage:get"
      }
    ],
    "description": "<p>Get fleet-wide SIM card data usage for a product in the current billing period, broken out by day. Daily usage totals represent an aggregate of all SIM cards that make up the product. Data usage reports can be delayed until the next day, and occasionally by several days.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/sims/data_usage?access_token=1234\"",
        "content": "$ curl \"https://api.particle.io/v1/products/:productIdOrSlug/sims/data_usage?access_token=1234\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "total_mbs_used",
            "description": "<p>The total number of megabytes consumed by the fleet in the current billing period</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "total_active_sim_cards",
            "description": "<p>The total number of active SIM cards in the product fleet. SIM cards that have been paused due to reaching their monthly data limit are included in this total.</p>"
          },
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "usage_by_day",
            "description": "<p>An array of data usage by day</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "usage_by_day.date",
            "description": "<p>The date of the usage day</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "usage_by_day.mbs_used",
            "description": "<p>Megabytes used in the usage day</p>"
          },
          {
            "group": "Success 200",
            "type": "Number",
            "optional": false,
            "field": "usage_by_day.mbs_used_cumulative",
            "description": "<p>Total megabytes used in the billing period, inclusive of this usage day</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/products/:productIdOrSlug/sims/data_usage",
          "content": "GET /v1/products/:productIdOrSlug/sims/data_usage\nHTTP/1.1 200 OK\n{\n\t\"total_mbs_used\":200.00,\n\t\"total_active_sim_cards\":2000,\n\t\"usage_by_day\": [\n\t\t{\n\t\t\t\"date\":\"2017-03-01\",\n\t\t\t\"mbs_used\":100.00,\n\t\t\t\"mbs_used_cumulative\":100.00\n\t\t},\n\t\t{\n\t\t\t\"date\":\"2017-03-02\",\n\t\t\t\"mbs_used\":100.00,\n\t\t\t\"mbs_used_cumulative\":200.00\n\t\t},\n\t\t...\n\t]\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Sims_4"
  },
  {
    "type": "put",
    "url": "/v1/sims/:iccid",
    "title": "Activate SIM",
    "group": "Sims_6",
    "description": "<p>Activates a SIM card for the first time.</p> <p><strong>Can not be used to activate Product SIM cards. Use the <a href=\"#import-and-activate-product-sims\">product import endpoint</a> instead.</strong></p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "optional": false,
            "field": "iccid",
            "description": "<p>The ICCID of the SIM to update</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "action",
            "description": "<p>Set to <code>activate</code> to trigger SIM activation</p>"
          },
          {
            "group": "Parameter",
            "type": "Boolean",
            "optional": false,
            "field": "async",
            "description": "<p>Set to true for activating a SIM asynchronously. Poll the Get SIM information endpoint to find out when the activation is finished.</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl -X PUT https://api.particle.io/v1/sims/1234 \\\n       -d action=activate \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "PUT /v1/sims/12345",
          "content": "PUT /v1/sims/12345\nHTTP/1.1 200 OK",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Sims_6",
    "name": "PutV1SimsIccid"
  },
  {
    "type": "post",
    "url": "/v1/products/:productIdOrSlug/sims",
    "title": "Import and activate product SIMs",
    "name": "listProductSims",
    "description": "<p>Import a group of SIM cards into a product. SIM cards will be activated upon import. Activated SIM cards will receive a prorated charge for the 1MB data plan for the remainder of the month on your next invoice. Either pass an array of ICCIDs or include a file containing a list of SIM cards.</p> <p>Import and activation will be queued for processing. You will receive an email with the import results when all SIM cards have been processed.</p> <p>Importing a SIM card associated with a device will also import the device into the product.</p>",
    "group": "Sims_7",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug</p>"
          },
          {
            "group": "Parameter",
            "type": "String[]",
            "optional": true,
            "field": "sims",
            "description": "<p>An array of SIM ICCIDs to import</p>"
          },
          {
            "group": "Parameter",
            "type": "File",
            "optional": true,
            "field": "file",
            "description": "<p>A .txt file containing a single-column list of ICCIDs</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "sims:import"
      }
    ],
    "examples": [
      {
        "title": "Example request",
        "content": "$ curl https://api.particle.io/v1/products/:productIdOrSlug/sims \\\n       -d sims[]=8934076500002586220 \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "POST /v1/products/:productIdOrSlug/sims",
          "content": "POST /v1/products/:productIdOrSlug/sims\nHTTP/1.1 200 OK\n{\n  ok: true\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/product.js",
    "groupTitle": "Sims_7"
  },
  {
    "type": "put",
    "url": "/v1/sims/:iccid",
    "title": "Deactivate SIM",
    "group": "Sims_8",
    "permission": [
      {
        "name": "sims:update"
      }
    ],
    "description": "<p>Deactivates a SIM card, disabling its ability to connect to a cell tower. Devices with deactivated SIM cards are not billable.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "optional": false,
            "field": "iccid",
            "description": "<p>The ICCID of the SIM to update</p>"
          },
          {
            "group": "Parameter",
            "optional": false,
            "field": "action",
            "description": "<p>Set to <code>deactivate</code> to trigger SIM deactivation</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em></p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Deactivate SIM",
        "content": "$ curl -X PUT https://api.particle.io/v1/sims/1234 \\\n       -d action=deactivate \\\n       -d access_token=1234",
        "type": "bash"
      },
      {
        "title": "Deactivate product SIM",
        "content": "$ curl -X PUT https://api.particle.io/v1/products/:productIdOrSlug/sims/1234 \\\n       -d action=deactivate \\\n       -d access_token=1234",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "PUT /v1/sims/12345",
          "content": "PUT /v1/sims/12345\nHTTP/1.1 200 OK",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Sims_8",
    "name": "PutV1SimsIccid"
  },
  {
    "type": "put",
    "url": "/v1/sims/:iccid",
    "title": "Reactivate SIM",
    "group": "Sims_9",
    "permission": [
      {
        "name": "sims:update"
      },
      {
        "name": "sims:update"
      }
    ],
    "description": "<p>Re-enables a SIM card to connect to a cell tower. Do this if you'd like to reactivate a SIM that you have deactivated.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "optional": false,
            "field": "iccid",
            "description": "<p>The ICCID of the SIM to update</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "action",
            "description": "<p>Set to <code>reactivate</code> to trigger SIM reactivation</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": true,
            "field": "mb_limit",
            "description": "<p>Deprecated. It is not possible to set a per-SIM data limit at this time.</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": true,
            "field": "productIdOrSlug",
            "description": "<p>Product ID or slug. <em>Product endpoint only</em></p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Reactivate SIM",
        "content": "$ curl -X PUT https://api.particle.io/v1/sims/1234 \\\n       -d action=reactivate \\\n       -d access_token=1234",
        "type": "bash"
      },
      {
        "title": "Reactivate product SIM",
        "content": "$ curl -X PUT https://api.particle.io/v1/products/:productIdOrSlug/sims/1234 \\\n       -d action=reactivate \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "PUT /v1/sims/12345",
          "content": "PUT /v1/sims/12345\nHTTP/1.1 200 OK",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "groupTitle": "Sims_9",
    "name": "PutV1SimsIccid"
  },
  {
    "type": "get",
    "url": "/user",
    "title": "Get user",
    "name": "GetUser",
    "description": "<p>Return the user resource for the currently authenticated user.</p>",
    "group": "User_1",
    "examples": [
      {
        "title": "$ curl \"https://api.particle.io/v1/user?access_token=12345\"",
        "content": "$ curl \"https://api.particle.io/v1/user?access_token=12345\"",
        "type": "bash"
      }
    ],
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "username",
            "description": "<p>Email address for current user</p>"
          },
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "subscription_ids",
            "description": "<p>Subscriptions for SIM cards and products</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "mfa",
            "description": "<p>Includes whether or not MFA is enabled</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "account_info",
            "description": "<p>An object that contains a first_name, last_name, and business_account</p>"
          },
          {
            "group": "Success 200",
            "type": "Integer",
            "optional": false,
            "field": "wifi_device_count",
            "description": "<p>Number of devices that count against the Wi-Fi device cap</p>"
          },
          {
            "group": "Success 200",
            "type": "Integer",
            "optional": false,
            "field": "cellular_device_count",
            "description": "<p>Number of devices that count against the cellular device cap</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "GET /v1/user",
          "content": "GET /v1/user\nHTTP/1.1 200 OK\n{\n  \"username\": \"testuser@particle.io\",\n  \"subscription_ids\": [],\n  \"account_info\": {\n    \"first_name\": \"Test\",\n    \"last_name\": \"User\",\n    \"business_account\": false\n  },\n  \"mfa\": {\n    \"enabled\": false\n  },\n  \"wifi_device_count\": 0,\n  \"cellular_device_count\": 0\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/user.js",
    "groupTitle": "User_1"
  },
  {
    "type": "put",
    "url": "/user",
    "title": "Update user",
    "name": "UpdateUser",
    "group": "User_2",
    "description": "<p>Update the logged-in user. Allows changing email, password and other account information.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>The new password</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "username",
            "description": "<p>The new account email address</p>"
          },
          {
            "group": "Parameter",
            "type": "Object",
            "optional": false,
            "field": "account_info",
            "description": "<p>The new account info</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "current_password",
            "description": "<p>The current password. Required to change username or password</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Changing the password:",
        "content": "$ curl -X PUT https://api.particle.io/v1/user \\\n       -d \"password=I'm a really long password that no one would guess\" \\\n       -d \"current_password=My current password\" \\\n       -d access_token=1234",
        "type": "bash"
      },
      {
        "title": "Changing the email:",
        "content": "$ curl -X PUT https://api.particle.io/v1/user \\\n       -d \"username=testuser@example.com\" \\\n       -d \"current_password=My current password\" \\\n       -d access_token=1234",
        "type": "bash"
      },
      {
        "title": "Changing the account info:",
        "content": "$ curl -X PUT https://api.particle.io/v1/user \\\n       -d \"account_info[first_name]=Test\" \\\n       -d \"account_info[last_name]=User\" \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "PUT /v1/user",
          "content": "PUT /v1/user\nHTTP/1.1 200 OK\n{\n  \"ok\": true,\n  \"message\": \"User's password updated.\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/user.js",
    "groupTitle": "User_2"
  },
  {
    "type": "put",
    "url": "/user",
    "title": "Delete user",
    "name": "deleteUser",
    "group": "User_2",
    "description": "<p>Delete the logged-in user. Allows removing user account and artifacts from Particle system</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>Current password verification</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Changing the password:",
        "content": "$ curl -X DELETE https://api.particle.io/v1/user \\\n       -d \"password=mypassword\" \\\n       -d access_token=1234",
        "type": "bash"
      },
      {
        "title": "Changing the email:",
        "content": "$ curl -X DELETE https://api.particle.io/v1/user \\\n       -d \"password=mypassword\" \\\n       -d access_token=1234",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "PUT /v1/user",
          "content": "PUT /v1/user\nHTTP/1.1 200 OK\n{\n  \"ok\": true,\n  \"message\": \"User's account has been deleted.\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/user.js",
    "groupTitle": "User_2"
  },
  {
    "type": "post",
    "url": "/user/password-reset",
    "title": "Forgot password",
    "name": "UserPasswordForgot",
    "description": "<p>Create a new password reset token and send the user an email with the token. Client doesn't need to be authenticated. This endpoint is rate-limited to prevent abuse.</p>",
    "group": "User_3",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "username",
            "description": ""
          }
        ]
      }
    },
    "examples": [
      {
        "title": "$ curl -X POST https://api.particle.io/v1/user/password-reset \\",
        "content": "$ curl -X POST https://api.particle.io/v1/user/password-reset \\\n       -d username=forgetful-john@example.com",
        "type": "bash"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "POST /v1/user/password-reset",
          "content": "POST /v1/user/password-reset\nHTTP/1.1 200 OK\n{\n  \"ok\": true,\n  \"message\": \"Password reset email sent.\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/user.js",
    "groupTitle": "User_3"
  },
  {
    "type": "get",
    "url": "/v1/diagnostics/:deviceId/summary",
    "title": "Get device vitals metadata",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "deviceId",
            "description": "<p>Device ID</p>"
          },
          {
            "group": "Parameter",
            "type": "Date",
            "optional": true,
            "field": "start_date",
            "defaultValue": "",
            "description": "<p>ISO86001 DateTime to start on (inclusive)</p>"
          },
          {
            "group": "Parameter",
            "type": "Date",
            "optional": true,
            "field": "end_date",
            "defaultValue": "",
            "description": "<p>ISO86001 DateTime to end on (inclusive)</p>"
          },
          {
            "group": "Parameter",
            "type": "Number",
            "optional": true,
            "field": "limit",
            "defaultValue": "30",
            "description": "<p>Number of samples to return, defaults to 30</p>"
          }
        ]
      }
    },
    "permission": [
      {
        "name": "devices.diagnostics.summary:get"
      }
    ],
    "name": "getSummaryForDeviceDiagnostics",
    "description": "<p>Contextualizes and allows for interpretation of <a href=\"#refresh-device-vitals\">device vitals</a>. Builds an object for output to a graph</p>",
    "success": {
      "examples": [
        {
          "title": "Retrieve all stats for a given day (2019-04-03), with 1 datapoint per 5 mins:",
          "content": "GET /v1/diagnostics/230021001847343338333633/summary?start_date=2019-04-03T00:00:00.000Z&end_date=2019-04-03T23:59:99.999Z&limit=288\nHTTP/1.1 200 OK\n{\n  \"deviceID\": \"230021001847343338333633\",\n  \"memoryAvailable\": 86808,\n  \"bucketSize\": 300000,\n  \"startDate\": \"2019-04-03T00:00:00.000Z\",\n  \"endDate\": \"2019-04-03T23:59:99.999Z\",\n  \"hasBattery\": false,\n  \"samples\": [\n    {\n       \"timestamp\": \"2019-04-03T00:00:00.000Z\",\n       \"batteryCharging\": false,\n       \"batteryConnected\": false,\n       \"signalStrength\": {\n         \"max\": 70,\n         \"min\": 12,\n         \"avg\": 64.93,\n         \"med\": 66,\n         \"warnings\": [\n           {\n             \"timestamp\": \"2019-04-03T15:12:00.942Z\",\n             \"value\": 44,\n             \"range\": {\n               \"lt\": 20\n             }\n           }\n         ]\n       },\n       \"signalStrengthValue\": {\n         \"max\": -65,\n         \"min\": -98,\n         \"avg\": -67.54,\n         \"med\": -67,\n         \"warnings\": []\n      },\n       \"signalQuality\": {\n         \"max\": 27,\n         \"min\": 14,\n         \"avg\": 24.46,\n         \"med\": 25,\n         \"warnings\": []\n      },\n       \"roundTripTime\": {\n         \"max\": 6820,\n         \"min\": 1489,\n         \"avg\": 3690.5,\n         \"med\": 3196,\n         \"warnings\": []\n      },\n       \"memoryUsed\": {\n         \"max\": 35448,\n         \"min\": 29120,\n         \"avg\": 30035.36,\n         \"med\": 29120,\n         \"warnings\": []\n      },\n      \"batteryCharge\": null\n    }\n  ]\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "api-service/src/views/api.js",
    "group": "_Users_rickk_Documents_src_docs_merge_api_service_src_views_api_js",
    "groupTitle": "_Users_rickk_Documents_src_docs_merge_api_service_src_views_api_js"
  }
]